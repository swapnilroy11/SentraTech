{"version":3,"file":"static/js/599.ceaef80d.chunk.js","mappings":"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","sources":["components/ui/badge.jsx","components/ui/input.jsx","components/ui/textarea.jsx","utils/analytics.js","components/CTASection.js","pages/DemoRequestPage.js"],"sourcesContent":["import * as React from \"react\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"../../lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  ...props\n}) {\n  return (<div className={cn(badgeVariants({ variant }), className)} {...props} />);\n}\n\nexport { Badge, badgeVariants }\n","import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\n  return (\n    <input\n      type={type}\n      className={cn(\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props} />\n  );\n})\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Textarea = React.forwardRef(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props} />\n  );\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","// Google Analytics 4 Event Tracking Utilities\n\n/**\n * Check if analytics consent has been granted\n * @returns {boolean} True if analytics consent is granted\n */\nconst hasAnalyticsConsent = () => {\n  try {\n    const consentData = localStorage.getItem('cookieConsent');\n    if (!consentData) {\n      return false; // No consent given yet\n    }\n\n    if (consentData === 'all') {\n      return true; // All cookies accepted\n    }\n\n    const consent = JSON.parse(consentData);\n    return consent?.analytics === true;\n  } catch (error) {\n    console.warn('Error checking analytics consent:', error);\n    return false; // Default to no consent on error\n  }\n};\n\n/**\n * Track a custom GA4 event (only if consent is granted)\n * @param {string} eventName - The name of the event\n * @param {Object} eventParameters - Event parameters (optional)\n */\nexport const trackEvent = (eventName, eventParameters = {}) => {\n  // Check consent before tracking\n  if (!hasAnalyticsConsent()) {\n    console.log(`GA4 event \"${eventName}\" not tracked - no analytics consent`);\n    return;\n  }\n\n  if (typeof window.gtag === 'function') {\n    window.gtag('event', eventName, {\n      send_to: 'G-75HTVL1QME',\n      ...eventParameters,\n      // Add timestamp for better tracking\n      timestamp: new Date().toISOString(),\n    });\n    \n    // Optional: Log for debugging (remove in production)\n    console.log('GA4 Event tracked (with consent):', eventName, eventParameters);\n  } else {\n    console.warn('Google Analytics gtag not available for event:', eventName);\n  }\n};\n\n/**\n * Track demo request conversion\n * @param {Object} requestData - Demo request form data\n * @param {string} referenceId - Reference ID from successful submission\n */\nexport const trackDemoBooking = (requestData, referenceId) => {\n  trackEvent('demo_request_submitted', {\n    // Standard GA4 conversion parameters\n    event_category: 'conversion',\n    event_label: 'demo_booking',\n    value: 1, // You can assign a monetary value to the conversion\n    currency: 'USD',\n    \n    // Custom parameters for better analysis\n    company_name: requestData.company,\n    reference_id: referenceId,\n    has_phone: requestData.phone ? 'yes' : 'no',\n    has_call_volume: requestData.call_volume ? 'yes' : 'no',\n    has_message: requestData.message ? 'yes' : 'no',\n    form_completion_rate: calculateFormCompletionRate(requestData),\n    \n    // Useful for funnel analysis\n    page_path: window.location.pathname,\n    page_title: document.title,\n  });\n};\n\n/**\n * Track form field interactions for better UX analysis\n * @param {string} fieldName - Name of the form field\n * @param {string} action - Action performed (focus, blur, error, etc.)\n */\nexport const trackFormInteraction = (fieldName, action) => {\n  trackEvent('form_interaction', {\n    event_category: 'engagement',\n    field_name: fieldName,\n    interaction_type: action,\n    page_path: window.location.pathname,\n  });\n};\n\n/**\n * Track form validation errors\n * @param {Object} errors - Validation errors object\n */\nexport const trackFormErrors = (errors) => {\n  const errorFields = Object.keys(errors).filter(field => errors[field]);\n  \n  if (errorFields.length > 0) {\n    trackEvent('form_validation_error', {\n      event_category: 'form_error',\n      error_fields: errorFields.join(','),\n      error_count: errorFields.length,\n      page_path: window.location.pathname,\n    });\n  }\n};\n\n/**\n * Calculate form completion rate based on filled fields\n * @param {Object} formData - Form data object\n * @returns {number} Completion rate as percentage\n */\nconst calculateFormCompletionRate = (formData) => {\n  const totalFields = ['name', 'email', 'company', 'phone', 'call_volume', 'message'];\n  const filledFields = totalFields.filter(field => \n    formData[field] && formData[field].trim().length > 0\n  );\n  \n  return Math.round((filledFields.length / totalFields.length) * 100);\n};\n\n/**\n * Track page engagement metrics\n * @param {string} section - Section name (hero, features, pricing, etc.)\n * @param {string} action - Action performed (scroll, click, hover, etc.)\n * @param {string} element - Element identifier (optional)\n */\nexport const trackEngagement = (section, action, element = '') => {\n  trackEvent('page_engagement', {\n    event_category: 'engagement',\n    section_name: section,\n    engagement_action: action,\n    element_id: element,\n    page_path: window.location.pathname,\n  });\n};\n\n/**\n * Track button clicks for CTA analysis\n * @param {string} buttonText - Text on the button\n * @param {string} buttonLocation - Where the button is located\n * @param {string} destination - Where the button leads (optional)\n */\nexport const trackButtonClick = (buttonText, buttonLocation, destination = '') => {\n  trackEvent('button_click', {\n    event_category: 'interaction',\n    button_text: buttonText,\n    button_location: buttonLocation,\n    button_destination: destination,\n    page_path: window.location.pathname,\n  });\n};\n\nexport default {\n  trackEvent,\n  trackDemoBooking,\n  trackFormInteraction,\n  trackFormErrors,\n  trackEngagement,\n  trackButtonClick,\n};","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Textarea } from './ui/textarea';\nimport { Badge } from './ui/badge';\nimport { \n  Rocket, ArrowRight, CheckCircle, Clock, \n  Users, Zap, Calendar, Send, Sparkles, Loader2\n} from 'lucide-react';\nimport { flushSync } from 'react-dom';\nimport { trackDemoBooking, trackFormErrors, trackFormInteraction } from '../utils/analytics';\nimport { insertDemoRequest } from '../lib/supabaseClient';\n\nconst CTASection = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    company: '',\n    phone: '',\n    message: '',\n    call_volume: '',\n    interaction_volume: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [error, setError] = useState(null);\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [contactId, setContactId] = useState('');\n\n  const handleInputChange = (field, value) => {\n    // Update form data\n    setFormData(prev => ({ \n      ...prev, \n      [field]: value \n    }));\n    \n    // Clear field error when user starts typing (real-time feedback)\n    if (fieldErrors[field]) {\n      setFieldErrors(prev => ({\n        ...prev,\n        [field]: ''\n      }));\n    }\n    \n    // Clear general error when user starts typing\n    if (error) {\n      setError(null);\n    }\n    \n    // Optional: Validate field on blur for better UX\n    // You can enable this for immediate feedback\n    /*\n    const errorMessage = validateField(field, value);\n    if (errorMessage) {\n      setFieldErrors(prev => ({\n        ...prev,\n        [field]: errorMessage\n      }));\n    }\n    */\n  };\n\n  const validateField = (field, value) => {\n    // Handle undefined or null values\n    const fieldValue = value || '';\n    console.log(`validateField called for ${field} with value: \"${fieldValue}\" (type: ${typeof fieldValue})`); // Debug log\n    \n    switch (field) {\n      case 'name':\n        if (!fieldValue.trim()) {\n          console.log(`Name validation failed: empty value`); // Debug log\n          return 'Full name is required';\n        }\n        if (fieldValue.trim().length < 2) {\n          console.log(`Name validation failed: too short`); // Debug log\n          return 'Name must be at least 2 characters';\n        }\n        return '';\n      \n      case 'email':\n        if (!fieldValue.trim()) {\n          console.log(`Email validation failed: empty value`); // Debug log\n          return 'Email is required';\n        }\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(fieldValue)) {\n          console.log(`Email validation failed: invalid format`); // Debug log\n          return 'Please enter a valid email address';\n        }\n        return '';\n      \n      case 'company':\n        if (!fieldValue.trim()) {\n          console.log(`Company validation failed: empty value`); // Debug log\n          return 'Company name is required';\n        }\n        return '';\n      \n      case 'phone':\n        if (fieldValue && fieldValue.trim()) {\n          const phoneRegex = /^[\\+]?[\\d\\s\\-\\(\\)]{7,20}$/;\n          if (!phoneRegex.test(fieldValue.trim())) {\n            console.log(`Phone validation failed: invalid format`); // Debug log\n            return 'Please enter a valid phone number';\n          }\n        }\n        return '';\n      \n      default:\n        return '';\n    }\n  };\n\n  const validateAllFields = () => {\n    const newErrors = {};\n    let hasErrors = false;\n    \n    console.log('validateAllFields called with formData:', formData); // Debug log\n    \n    // Validate ONLY required fields (phone is optional)\n    ['name', 'email', 'company'].forEach(field => {\n      const fieldValue = formData[field];\n      console.log(`Validating required field ${field} with value: \"${fieldValue}\"`); // Debug log\n      \n      const errorMessage = validateField(field, fieldValue);\n      console.log(`Validation result for ${field}: \"${errorMessage}\"`); // Debug log\n      \n      if (errorMessage) {\n        newErrors[field] = errorMessage;\n        hasErrors = true;\n        console.log(`Error found for required field ${field}: ${errorMessage}`); // Debug log\n      }\n    });\n    \n    // Validate optional phone field separately (only if it has a value)\n    if (formData.phone && formData.phone.trim()) {\n      const phoneError = validateField('phone', formData.phone);\n      if (phoneError) {\n        newErrors.phone = phoneError;\n        hasErrors = true;\n        console.log(`Error found for optional phone field: ${phoneError}`); // Debug log\n      }\n    }\n    \n    console.log('Final validation - hasErrors:', hasErrors, 'newErrors:', newErrors); // Debug log\n    \n    // Use flushSync to force immediate state updates and re-render\n    if (hasErrors) {\n      flushSync(() => {\n        setFieldErrors(prevErrors => ({\n          ...prevErrors,\n          ...newErrors\n        }));\n        setError('Please fix the highlighted fields below');\n      });\n      \n      // Track form validation errors in GA4\n      trackFormErrors(newErrors);\n      \n      console.log('Validation failed, returning false'); // Debug log\n      return false;\n    } else {\n      flushSync(() => {\n        // Clear any previous errors if validation passes\n        setError(null);\n        setFieldErrors({});\n      });\n      console.log('Validation passed, returning true'); // Debug log\n      return true;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Always prevent default submission first\n    \n    console.log('Form submission started...'); // Debug log\n    console.log('Current form data:', formData); // Debug log\n    \n    // Perform validation BEFORE attempting submission\n    const isValid = validateAllFields();\n    console.log('Validation result:', isValid); // Debug log\n    console.log('Field errors after validation:', fieldErrors); // Debug log\n    \n    if (!isValid) {\n      console.log('Form validation failed, stopping submission'); // Debug log\n      return; // Stop submission if validation fails\n    }\n    \n    setIsSubmitting(true);\n    setError(null);\n    \n    // Prevent duplicate submissions\n    if (isSubmitting) {\n      console.warn('⚠️ Demo request submission already in progress');\n      return;\n    }\n\n    // Network submission with robust fallback and rate limiting\n    try {\n      const { submitFormWithRateLimit, showSuccessMessage, logPayload } =\n        await import('../config/dashboardConfig.js');\n\n      // Generate unique ID for this submission\n      const generateUUID = () => 'demo_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n\n      // Log raw form data for debugging\n      console.log(`🔍 [DEMO-REQUEST] Raw form data:`, {\n        name: `\"${formData.name}\" (type: ${typeof formData.name})`,\n        email: `\"${formData.email}\" (type: ${typeof formData.email})`,\n        company: `\"${formData.company}\" (type: ${typeof formData.company})`,\n        phone: `\"${formData.phone}\" (type: ${typeof formData.phone})`,\n        message: `\"${formData.message}\" (type: ${typeof formData.message})`,\n        call_volume: `\"${formData.call_volume}\" (type: ${typeof formData.call_volume})`,\n        interaction_volume: `\"${formData.interaction_volume}\" (type: ${typeof formData.interaction_volume})`,\n        website: `\"${formData.website}\" (type: ${typeof formData.website})`,\n        typical_range: `\"${formData.typical_range}\" (type: ${typeof formData.typical_range})`,\n        preferred_method: `\"${formData.preferred_method}\" (type: ${typeof formData.preferred_method})`\n      });\n\n      // Enhanced payload with proper field mapping including typical_range\n      const demoData = {\n        id: generateUUID(),\n        name: formData.name,\n        full_name: formData.name, // Additional field mapping\n        email: formData.email,\n        work_email: formData.email, // Additional field mapping\n        company: formData.company,\n        company_name: formData.company, // Additional field mapping\n        website: formData.website || '',\n        phone: formData.phone || '',\n        phone_number: formData.phone || '', // Additional field mapping\n        message: formData.message || '',\n        call_volume: parseInt(formData.call_volume) || 0,\n        interaction_volume: parseInt(formData.interaction_volume) || 0,\n        total_volume: (parseInt(formData.call_volume) || 0) + (parseInt(formData.interaction_volume) || 0),\n        typical_range: formData.typical_range || 'Not specified', // Field mapping as requested\n        preferred_method: formData.preferred_method || 'email', // Field mapping as requested\n        status: 'new',\n        source: 'website_cta',\n        created: new Date().toISOString(),\n        timestamp: new Date().toISOString()\n      };\n\n      // Log the complete payload before submission\n      logPayload('demo-request', demoData);\n\n      // Use rate-limited submission function\n      const result = await submitFormWithRateLimit('demo-request', demoData);\n\n      if (result.success) {\n        showSuccessMessage(\n          'Demo request submitted successfully',\n          { ...result.data, form_type: 'demo_request' }\n        );\n        \n        const contactId = result.data?.id || `demo_${Date.now()}`;\n        trackDemoBooking(formData, contactId);\n        setContactId(contactId);\n        setIsSubmitted(true);\n        \n        // Clear form data after successful submission\n        setFormData({\n          name: '', email: '', company: '', phone: '', \n          message: '', call_volume: '', interaction_volume: ''\n        });\n        setFieldErrors({});\n        \n        // Analytics event\n        if (window?.dataLayer) {\n          window.dataLayer.push({\n            event: 'demo_request_submit',\n            submission_mode: result.mode,\n            total_volume: demoData.total_volume,\n            ingestId: contactId\n          });\n        }\n      } else if (result.reason === 'rate_limited') {\n        // Handle rate limiting specifically\n        console.warn('Demo request rate limited:', result.message);\n        setError(result.message || 'Please wait before submitting another demo request');\n      } else {\n        throw new Error(result.error || result.message || 'Demo request submission failed');\n      }\n    } catch (error) {\n      // Fallback to offline simulation on any error\n      console.warn('Demo request submission failed, using offline fallback:', error);\n      const contactId = `demo_fallback_${Date.now()}`;\n      trackDemoBooking(formData, contactId);\n      setContactId(contactId);\n      setIsSubmitted(true);\n      \n      setFormData({\n        name: '', email: '', company: '', phone: '', \n        message: '', call_volume: '', interaction_volume: ''\n      });\n      setFieldErrors({});\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (isSubmitted) {\n    return (\n      <section className=\"py-20 bg-gradient-to-br from-[#00FF41]/5 to-[#00DDFF]/5\">\n        <div className=\"container mx-auto px-6\">\n          <Card className=\"max-w-2xl mx-auto bg-[rgb(26,28,30)] border-2 border-[#00FF41] rounded-3xl p-12 text-center\">\n            <div className=\"mb-6\">\n              <div className=\"w-20 h-20 bg-[#00FF41]/20 rounded-full flex items-center justify-center mx-auto mb-4 border border-[#00FF41]/50\">\n                <CheckCircle size={40} className=\"text-[#00FF41]\" />\n              </div>\n              <h3 className=\"text-3xl font-bold text-white mb-4\">\n                Demo Request Confirmed!\n              </h3>\n              <p className=\"text-[rgb(218,218,218)] text-lg leading-relaxed mb-4\">\n                Thank you for your interest in SentraTech! We've received your demo request \n                and our team will contact you within 1-2 business days to schedule your personalized demonstration.\n              </p>\n              {contactId && (\n                <div className=\"bg-[rgb(38,40,42)] rounded-xl p-4 mb-4\">\n                  <p className=\"text-[rgb(161,161,170)] text-sm mb-1\">Your Reference ID:</p>\n                  <p className=\"text-[#00FF41] font-mono text-lg\">{contactId}</p>\n                </div>\n              )}\n              <p className=\"text-[rgb(161,161,170)] text-sm\">\n                Check your email for confirmation details and next steps.\n              </p>\n            </div>\n            \n            <Button \n              onClick={() => {\n                setIsSubmitted(false);\n                setContactId('');\n                setError(null);\n                setFieldErrors({});\n                setFormData({\n                  name: '', email: '', company: '', phone: '', \n                  message: '', call_volume: '', interaction_volume: ''\n                });\n              }}\n              className=\"bg-[#00FF41] text-[rgb(17,17,19)] hover:bg-[#00e83a] rounded-xl px-6\"\n            >\n              Submit Another Request\n            </Button>\n          </Card>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"contact\" className=\"py-20 bg-gradient-to-br from-[rgb(17,17,19)] via-[rgb(26,28,30)] to-[rgb(38,40,42)] pb-0\">\n      <div className=\"container mx-auto px-6\">\n        {/* Section Header */}\n        <div className=\"text-center mb-16\">\n          <Badge className=\"mb-4 bg-[rgba(0,255,65,0.1)] text-[#00FF41] border-[#00FF41]/30\">\n            <Rocket className=\"mr-2\" size={14} />\n            Get Started Today\n          </Badge>\n          <h2 className=\"text-4xl md:text-6xl font-bold mb-6 font-rajdhani\">\n            <span className=\"text-[#F8F9FA]\">Ready to Transform</span>\n            <br />\n            <span className=\"text-[#00FF41]\">Your Customer Support?</span>\n          </h2>\n          <p className=\"text-xl text-[rgb(218,218,218)] max-w-3xl mx-auto leading-relaxed\">\n            Join industry leaders who trust SentraTech to deliver exceptional customer experiences \n            while reducing costs and improving efficiency.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 max-w-7xl mx-auto\">\n          {/* Left Side - Benefits & Social Proof */}\n          <div className=\"space-y-8\">\n            {/* Key Benefits */}\n            <Card className=\"bg-gradient-to-br from-[rgb(26,28,30)] to-[rgb(38,40,42)] border border-[rgba(255,255,255,0.1)] rounded-3xl p-8\">\n              <CardHeader className=\"p-0 mb-6\">\n                <CardTitle className=\"text-2xl text-white flex items-center space-x-3\">\n                  <Sparkles size={24} className=\"text-[#00FF41]\" />\n                  <span>What You'll Get</span>\n                </CardTitle>\n              </CardHeader>\n\n              <CardContent className=\"p-0 space-y-4\">\n                <div className=\"flex items-start space-x-4 p-4 bg-[rgb(17,17,19)]/50 rounded-xl border border-[rgb(63,63,63)]\">\n                  <div className=\"p-2 bg-[#00FF41]/20 rounded-lg border border-[#00FF41]/50 flex-shrink-0\">\n                    <Zap size={20} className=\"text-[#00FF41]\" />\n                  </div>\n                  <div>\n                    <h4 className=\"text-white font-semibold mb-2\">Sub-50ms AI Routing</h4>\n                    <p className=\"text-[rgb(218,218,218)] text-sm\">\n                      Lightning-fast decision engine that optimizes every customer interaction in real-time.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start space-x-4 p-4 bg-[rgb(17,17,19)]/50 rounded-xl border border-[rgb(63,63,63)]\">\n                  <div className=\"p-2 bg-[#00DDFF]/20 rounded-lg border border-[#00DDFF]/50 flex-shrink-0\">\n                    <Users size={20} className=\"text-[#00DDFF]\" />\n                  </div>\n                  <div>\n                    <h4 className=\"text-white font-semibold mb-2\">70% Automation Rate</h4>\n                    <p className=\"text-[rgb(218,218,218)] text-sm\">\n                      Intelligent automation handles routine inquiries while humans focus on complex issues.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start space-x-4 p-4 bg-[rgb(17,17,19)]/50 rounded-xl border border-[rgb(63,63,63)]\">\n                  <div className=\"p-2 bg-[rgb(192,192,192)]/20 rounded-lg border border-[rgb(192,192,192)]/50 flex-shrink-0\">\n                    <CheckCircle size={20} className=\"text-[rgb(192,192,192)]\" />\n                  </div>\n                  <div>\n                    <h4 className=\"text-white font-semibold mb-2\">Full Compliance Suite</h4>\n                    <p className=\"text-[rgb(218,218,218)] text-sm\">\n                      Built-in GDPR, HIPAA, and PCI compliance with immutable audit trails.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Demo Process */}\n            <Card className=\"bg-[rgb(26,28,30)] border border-[rgba(255,255,255,0.1)] rounded-3xl p-8\">\n              <CardHeader className=\"p-0 mb-6\">\n                <CardTitle className=\"text-xl text-white flex items-center space-x-3\">\n                  <Calendar size={20} className=\"text-[#00DDFF]\" />\n                  <span>What Happens Next?</span>\n                </CardTitle>\n              </CardHeader>\n\n              <CardContent className=\"p-0 space-y-4\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-8 h-8 bg-[#00FF41] text-[rgb(17,17,19)] rounded-full flex items-center justify-center text-sm font-bold\">\n                    1\n                  </div>\n                  <div>\n                    <div className=\"text-white font-semibold\">Schedule Your Demo</div>\n                    <div className=\"text-[rgb(161,161,170)] text-sm\">30-minute personalized walkthrough</div>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-8 h-8 bg-[#00DDFF] text-[rgb(17,17,19)] rounded-full flex items-center justify-center text-sm font-bold\">\n                    2\n                  </div>\n                  <div>\n                    <div className=\"text-white font-semibold\">Custom ROI Analysis</div>\n                    <div className=\"text-[rgb(161,161,170)] text-sm\">Tailored cost-benefit assessment</div>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-8 h-8 bg-[rgb(192,192,192)] text-[rgb(17,17,19)] rounded-full flex items-center justify-center text-sm font-bold\">\n                    3\n                  </div>\n                  <div>\n                    <div className=\"text-white font-semibold\">Implementation Plan</div>\n                    <div className=\"text-[rgb(161,161,170)] text-sm\">Step-by-step integration roadmap</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Right Side - Contact Form */}\n          <Card className=\"bg-gradient-to-br from-[rgb(26,28,30)] to-[rgb(38,40,42)] border-2 border-[#00FF41] rounded-3xl p-8\">\n            <CardHeader className=\"p-0 mb-8\">\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-[#00FF41]/20 rounded-full flex items-center justify-center mx-auto mb-4 border border-[#00FF41]/50\">\n                  <Rocket size={32} className=\"text-[#00FF41]\" />\n                </div>\n                <CardTitle className=\"text-2xl text-white mb-2\">\n                  Request Your Demo\n                </CardTitle>\n                <p className=\"text-[rgb(218,218,218)]\">\n                  See our platform in action with your data\n                </p>\n              </div>\n            </CardHeader>\n\n            <CardContent className=\"p-0\">\n              <form \n                onSubmit={handleSubmit} \n                className=\"space-y-6\"\n                aria-label=\"Demo Request Form\"\n                noValidate\n              >\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label htmlFor=\"demo-name\" className=\"sr-only\">Full Name (required)</label>\n                    <Input\n                      id=\"demo-name\"\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Full Name *\"\n                      value={formData.name}\n                      onChange={(e) => handleInputChange('name', e.target.value)}\n                      onBlur={(e) => {\n                        // Track form interaction\n                        trackFormInteraction('name', 'blur');\n                        \n                        // Validate on blur for immediate feedback\n                        const errorMessage = validateField('name', e.target.value);\n                        if (errorMessage) {\n                          setFieldErrors(prev => ({ ...prev, name: errorMessage }));\n                        }\n                      }}\n                      required\n                      aria-required=\"true\"\n                      aria-invalid={fieldErrors.name ? 'true' : 'false'}\n                      aria-describedby={fieldErrors.name ? \"name-error\" : undefined}\n                      className={`bg-[rgb(38,40,42)] border text-white placeholder-[rgb(161,161,170)] rounded-xl ${\n                        fieldErrors.name \n                          ? 'border-red-500 focus:border-red-500' \n                          : 'border-[rgb(63,63,63)] focus:border-[#00FF41]'\n                      }`}\n                    />\n                    {fieldErrors.name && (\n                      <p \n                        id=\"name-error\" \n                        className=\"text-red-400 text-xs mt-1 ml-1\"\n                        role=\"alert\"\n                        aria-live=\"polite\"\n                      >\n                        {fieldErrors.name}\n                      </p>\n                    )}\n                  </div>\n                  <div>\n                    <label htmlFor=\"demo-email\" className=\"sr-only\">Work Email (required)</label>\n                    <Input\n                      id=\"demo-email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Work Email *\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange('email', e.target.value)}\n                      onBlur={(e) => {\n                        // Track form interaction\n                        trackFormInteraction('email', 'blur');\n                        \n                        // Validate on blur for immediate feedback\n                        const errorMessage = validateField('email', e.target.value);\n                        if (errorMessage) {\n                          setFieldErrors(prev => ({ ...prev, email: errorMessage }));\n                        }\n                      }}\n                      required\n                      aria-required=\"true\"\n                      aria-invalid={fieldErrors.email ? 'true' : 'false'}\n                      aria-describedby={fieldErrors.email ? \"email-error\" : undefined}\n                      className={`bg-[rgb(38,40,42)] border text-white placeholder-[rgb(161,161,170)] rounded-xl ${\n                        fieldErrors.email \n                          ? 'border-red-500 focus:border-red-500' \n                          : 'border-[rgb(63,63,63)] focus:border-[#00FF41]'\n                      }`}\n                    />\n                    {fieldErrors.email && (\n                      <p \n                        id=\"email-error\"\n                        className=\"text-red-400 text-xs mt-1 ml-1\"\n                        role=\"alert\"\n                        aria-live=\"polite\"\n                      >\n                        {fieldErrors.email}\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <Input\n                      placeholder=\"Company Name *\"\n                      value={formData.company}\n                      onChange={(e) => handleInputChange('company', e.target.value)}\n                      onBlur={(e) => {\n                        // Track form interaction\n                        trackFormInteraction('company', 'blur');\n                        \n                        // Validate on blur for immediate feedback\n                        const errorMessage = validateField('company', e.target.value);\n                        if (errorMessage) {\n                          setFieldErrors(prev => ({ ...prev, company: errorMessage }));\n                        }\n                      }}\n                      required\n                      className={`bg-[rgb(38,40,42)] border text-white placeholder-[rgb(161,161,170)] rounded-xl ${\n                        fieldErrors.company \n                          ? 'border-red-500 focus:border-red-500' \n                          : 'border-[rgb(63,63,63)] focus:border-[#00FF41]'\n                      }`}\n                    />\n                    {fieldErrors.company && (\n                      <p className=\"text-red-400 text-xs mt-1 ml-1\">{fieldErrors.company}</p>\n                    )}\n                  </div>\n                  <div>\n                    <Input\n                      type=\"tel\"\n                      placeholder=\"Phone Number\"\n                      value={formData.phone}\n                      onChange={(e) => handleInputChange('phone', e.target.value)}\n                      onBlur={(e) => {\n                        // Track form interaction\n                        trackFormInteraction('phone', 'blur');\n                        \n                        // Validate on blur for immediate feedback (only if not empty)\n                        if (e.target.value.trim()) {\n                          const errorMessage = validateField('phone', e.target.value);\n                          if (errorMessage) {\n                            setFieldErrors(prev => ({ ...prev, phone: errorMessage }));\n                          }\n                        }\n                      }}\n                      className={`bg-[rgb(38,40,42)] border text-white placeholder-[rgb(161,161,170)] rounded-xl ${\n                        fieldErrors.phone \n                          ? 'border-red-500 focus:border-red-500' \n                          : 'border-[rgb(63,63,63)] focus:border-[#00FF41]'\n                      }`}\n                    />\n                    {fieldErrors.phone && (\n                      <p className=\"text-red-400 text-xs mt-1 ml-1\">{fieldErrors.phone}</p>\n                    )}\n                  </div>\n                </div>\n\n                {/* Volume Fields */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-semibold text-white mb-2\">\n                      Monthly Call Volume\n                    </label>\n                    <Input\n                      placeholder=\"e.g., 50,000 or <10k\"\n                      value={formData.call_volume}\n                      onChange={(e) => handleInputChange('call_volume', e.target.value)}\n                      className=\"bg-[rgb(38,40,42)] border-[rgb(63,63,63)] text-white placeholder-[rgb(161,161,170)] rounded-xl focus:border-[#00FF41]\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-semibold text-white mb-2\">\n                      Monthly Interaction Volume\n                      <span className=\"text-xs text-gray-400 block font-normal\">Chat/SMS/Email/Social</span>\n                    </label>\n                    <Input\n                      placeholder=\"e.g., 75,000 or 10k-50k\"\n                      value={formData.interaction_volume}\n                      onChange={(e) => handleInputChange('interaction_volume', e.target.value)}\n                      className=\"bg-[rgb(38,40,42)] border-[rgb(63,63,63)] text-white placeholder-[rgb(161,161,170)] rounded-xl focus:border-[#00FF41]\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Textarea\n                    placeholder=\"Tell us about your current customer support challenges...\"\n                    value={formData.message}\n                    onChange={(e) => handleInputChange('message', e.target.value)}\n                    rows={4}\n                    className=\"bg-[rgb(38,40,42)] border-[rgb(63,63,63)] text-white placeholder-[rgb(161,161,170)] rounded-xl resize-none\"\n                  />\n                </div>\n\n                {error && (\n                  <div className=\"bg-red-500/20 border border-red-500/30 rounded-xl p-4 text-red-400 text-sm text-center\">\n                    {error}\n                  </div>\n                )}\n\n                <Button \n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"w-full bg-[#00FF41] text-[#0A0A0A] hover:bg-[#00e83a] font-semibold py-4 rounded-xl transform hover:scale-105 transition-all duration-200 font-rajdhani disabled:opacity-70 disabled:transform-none\"\n                >\n                  {isSubmitting ? (\n                    <div className=\"flex items-center justify-center space-x-2\">\n                      <Loader2 size={20} className=\"animate-spin\" />\n                      <span>Scheduling Demo...</span>\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center justify-center space-x-2\">\n                      <Send size={20} />\n                      <span>Schedule My Demo</span>\n                      <ArrowRight size={20} />\n                    </div>\n                  )}\n                </Button>\n\n                <p className=\"text-[rgb(161,161,170)] text-xs text-center\">\n                  By submitting this form, you agree to our privacy policy. \n                  No spam, unsubscribe anytime.\n                </p>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Trust Indicators - No bottom spacing */}\n        <div className=\"mt-16 pb-6\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 max-w-4xl mx-auto\">\n            <div className=\"text-center p-3 bg-[rgb(17,17,19)] rounded-lg border border-[rgb(63,63,63)]\">\n              <div className=\"text-lg font-bold text-[#00FF41] font-rajdhani\">24hrs</div>\n              <div className=\"text-[rgb(161,161,170)] text-sm\">Response Time</div>\n            </div>\n            <div className=\"text-center p-3 bg-[rgb(17,17,19)] rounded-lg border border-[rgb(63,63,63)]\">\n              <div className=\"text-2xl font-bold text-[#00DDFF] mb-1\">99.9%</div>\n              <div className=\"text-[rgb(161,161,170)] text-sm\">Platform Uptime</div>\n            </div>\n            <div className=\"text-center p-3 bg-[rgb(17,17,19)] rounded-lg border border-[rgb(63,63,63)]\">\n              <div className=\"text-2xl font-bold text-[rgb(192,192,192)] mb-1\">SOC2</div>\n              <div className=\"text-[rgb(161,161,170)] text-sm\">Compliant</div>\n            </div>\n            <div className=\"text-center p-3 bg-[rgb(17,17,19)] rounded-lg border border-[rgb(63,63,63)]\">\n              <div className=\"text-2xl font-bold text-[#00FF41] mb-1 font-rajdhani\">30-day</div>\n              <div className=\"text-[rgb(161,161,170)] text-sm\">Free Trial</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CTASection;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { CheckCircle, Clock, Shield, Zap } from 'lucide-react';\nimport CTASection from '../components/CTASection';\n\nconst DemoRequestPage = () => {\n  return (\n    <div className=\"bg-[#0A0A0A] text-[#F8F9FA]\" id=\"demo-request\">\n      {/* Hero Section */}\n      <section className=\"pt-20 pb-16 relative overflow-hidden\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            className=\"text-center max-w-4xl mx-auto mb-16\"\n          >\n            <h1 className=\"text-6xl md:text-7xl font-bold font-rajdhani mb-8 leading-tight\">\n              Request Your <span className=\"text-[#00FF41]\">Demo</span>\n            </h1>\n            \n            <p className=\"text-xl text-[rgb(161,161,170)] mb-12 max-w-3xl mx-auto leading-relaxed\">\n              See SentraTech in action with a personalized demonstration tailored to your business needs. \n              Discover how our AI-powered platform can transform your customer support operations.\n            </p>\n\n            {/* What You'll Get */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto mb-12\">\n              {[\n                {\n                  title: '30-Minute Personalized Walkthrough',\n                  description: 'Custom demo using your industry examples and use cases',\n                  icon: Clock,\n                  color: '#00FF41'\n                },\n                {\n                  title: 'Custom ROI Analysis',\n                  description: 'Tailored cost-benefit assessment for your organization',\n                  icon: CheckCircle,\n                  color: '#00DDFF'\n                },\n                {\n                  title: 'Implementation Roadmap',\n                  description: 'Step-by-step integration plan and timeline',\n                  icon: Zap,\n                  color: '#FFD700'\n                },\n                {\n                  title: 'Security & Compliance Review',\n                  description: 'Detailed overview of our enterprise security measures',\n                  icon: Shield,\n                  color: '#9D4EDD'\n                }\n              ].map((benefit, index) => {\n                const Icon = benefit.icon;\n                return (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.6, delay: index * 0.1 }}\n                    className=\"bg-[rgba(0,255,65,0.05)] border border-[rgba(0,255,65,0.2)] rounded-xl p-6 text-left\"\n                  >\n                    <div className=\"flex items-start space-x-4\">\n                      <div \n                        className=\"w-12 h-12 rounded-xl flex items-center justify-center flex-shrink-0 mt-1\"\n                        style={{ backgroundColor: `${benefit.color}20` }}\n                      >\n                        <Icon size={24} style={{ color: benefit.color }} />\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-bold text-white mb-2\">\n                          {benefit.title}\n                        </h3>\n                        <p className=\"text-sm text-[rgb(161,161,170)]\">\n                          {benefit.description}\n                        </p>\n                      </div>\n                    </div>\n                  </motion.div>\n                );\n              })}\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Demo Request Form - No gap, merge with previous section */}\n      <section className=\"bg-[#0A0A0A]\">\n        <div className=\"pb-20\">\n          <CTASection />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default DemoRequestPage;"],"names":["badgeVariants","cva","variants","variant","default","secondary","destructive","outline","defaultVariants","Badge","_ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","cn","Input","React","ref","type","displayName","Textarea","trackEvent","eventName","eventParameters","arguments","length","undefined","hasAnalyticsConsent","consentData","localStorage","getItem","consent","JSON","parse","analytics","error","console","warn","window","gtag","send_to","timestamp","Date","toISOString","log","concat","trackDemoBooking","requestData","referenceId","event_category","event_label","value","currency","company_name","company","reference_id","has_phone","phone","has_call_volume","call_volume","has_message","message","form_completion_rate","calculateFormCompletionRate","page_path","location","pathname","page_title","document","title","trackFormInteraction","fieldName","action","field_name","interaction_type","trackFormErrors","errors","errorFields","Object","keys","filter","field","error_fields","join","error_count","formData","totalFields","filledFields","trim","Math","round","CTASection","setFormData","useState","name","email","interaction_volume","isSubmitting","setIsSubmitting","isSubmitted","setIsSubmitted","setError","fieldErrors","setFieldErrors","contactId","setContactId","handleInputChange","prev","validateField","fieldValue","test","children","_jsxs","Card","CheckCircle","size","Button","onClick","id","Rocket","CardHeader","CardTitle","Sparkles","CardContent","Zap","Users","Calendar","onSubmit","async","e","preventDefault","isValid","validateAllFields","newErrors","hasErrors","forEach","errorMessage","phoneError","flushSync","prevErrors","submitFormWithRateLimit","showSuccessMessage","logPayload","generateUUID","now","random","toString","substr","website","typical_range","preferred_method","demoData","full_name","work_email","phone_number","parseInt","total_volume","status","source","created","result","success","_result$data","_window","data","form_type","dataLayer","push","event","submission_mode","mode","ingestId","reason","Error","noValidate","htmlFor","placeholder","onChange","target","onBlur","required","role","rows","disabled","Loader2","Send","ArrowRight","DemoRequestPage","motion","div","initial","opacity","y","animate","transition","duration","description","icon","Clock","color","Shield","map","benefit","index","Icon","delay","style","backgroundColor"],"sourceRoot":""}