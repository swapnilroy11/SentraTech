{"version":3,"file":"static/js/423.8e714046.chunk.js","mappings":"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","sources":["components/ui/input.jsx","components/ui/label.jsx","components/ROICalculatorRedesigned.js","pages/ROICalculatorPage.js","utils/roiCalculatorFixed.js"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\n  return (\n    <input\n      type={type}\n      className={cn(\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props} />\n  );\n})\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"../../lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","/**\n * SentraTech ROI Calculator - Complete Redesign\n * Streamlined single-page interface with real-time calculations\n * Based on UX redesign specifications document\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { \n  Calculator, Mail, X, Sparkles, AlertCircle, CheckCircle, Flag, Info\n} from 'lucide-react';\nimport { supabase } from '../lib/supabaseClient';\nimport { \n  formatCurrencyProtected, \n  formatPercentageProtected,\n  runProtectedTests \n} from '../utils/roiCalculatorFixed';\n\n// Country data with flags and cost information\nconst COUNTRIES = {\n  'Bangladesh': {\n    flag: '🇧🇩',\n    agentHourly: 2.25,\n    bpoPerMin: 0.40,\n    description: 'Large English-speaking BPO workforce; low labor costs'\n  },\n  'India': {\n    flag: '🇮🇳',\n    agentHourly: 3.00,\n    bpoPerMin: 0.55,\n    description: 'Established IT services industry; competitive rates'\n  },\n  'Philippines': {\n    flag: '🇵🇭',\n    agentHourly: 4.50,\n    bpoPerMin: 0.90,\n    description: 'High English proficiency; US time zone alignment'\n  },\n  'Vietnam': {\n    flag: '🇻🇳',\n    agentHourly: 3.50,\n    bpoPerMin: 0.60,\n    description: 'Growing BPO sector; cost-effective operations'\n  }\n};\n\n// Fixed automation percentage as per requirements\nconst AUTOMATION_PERCENTAGE = 70;\nconst SENTRATECH_BUNDLE_COST = 1650; // SentraTech pricing per bundle\n\n// CANONICAL BUNDLE CALCULATIONS - Exact fractions for precision\nconst BUNDLE_CALL_MINUTES = 1000 * 8; // 8000 minutes\nconst BUNDLE_INTERACTION_MINUTES = 1000 * 5; // 5000 minutes  \nconst BUNDLE_TOTAL_MINUTES = BUNDLE_CALL_MINUTES + BUNDLE_INTERACTION_MINUTES; // 13000 minutes\n\n// Exact bundle shares (not rounded percentages)\nconst CALL_SHARE = BUNDLE_CALL_MINUTES / BUNDLE_TOTAL_MINUTES; // 8000/13000\nconst INTERACTION_SHARE = BUNDLE_INTERACTION_MINUTES / BUNDLE_TOTAL_MINUTES; // 5000/13000\n\n// Exact derived costs (calculated using precise fractions)\nconst CALL_COST_PER_1K = SENTRATECH_BUNDLE_COST * CALL_SHARE; // $1,015.38...\nconst INTERACTION_COST_PER_1K = SENTRATECH_BUNDLE_COST * INTERACTION_SHARE; // $634.61...\n\nconst ROICalculatorRedesigned = () => {\n  // Essential inputs only\n  const [selectedCountry, setSelectedCountry] = useState('Bangladesh');\n  const [callVolume, setCallVolume] = useState('');\n  const [interactionVolume, setInteractionVolume] = useState('');\n  const [showCountryTooltip, setShowCountryTooltip] = useState(null);\n\n  // Calculated results\n  const [results, setResults] = useState(null);\n  \n  // Email modal state\n  const [showEmailModal, setShowEmailModal] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isSubmittingReport, setIsSubmittingReport] = useState(false);\n  const [reportSubmitted, setReportSubmitted] = useState(false);\n  const [submissionID, setSubmissionID] = useState(null); // Track submission ID\n\n  // Validation states\n  const [callVolumeError, setCallVolumeError] = useState('');\n  const [interactionVolumeError, setInteractionVolumeError] = useState('');\n\n  // Real-time calculation effect - triggers on any input change\n  useEffect(() => {\n    calculateROI();\n  }, [selectedCountry, callVolume, interactionVolume]);\n  \n  // Run protected tests on component mount (development mode)\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      runProtectedTests();\n    }\n  }, []);\n\n  // Input validation\n  const validateInput = (value, setter, fieldName) => {\n    if (value === '') {\n      setter('');\n      return true;\n    }\n    \n    const numValue = parseFloat(value);\n    if (isNaN(numValue) || numValue < 0) {\n      setter(`Please enter a positive number for ${fieldName}`);\n      return false;\n    }\n    \n    setter('');\n    return true;\n  };\n\n  // Handle input changes with validation\n  const handleCallVolumeChange = (e) => {\n    const value = e.target.value;\n    setCallVolume(value);\n    validateInput(value, setCallVolumeError, 'call volume');\n  };\n\n  const handleInteractionVolumeChange = (e) => {\n    const value = e.target.value;\n    setInteractionVolume(value);\n    validateInput(value, setInteractionVolumeError, 'interaction volume');\n  };\n\n  // BULLETPROOF ROI calculation using protected engine\n  const calculateROI = () => {\n    // Reset results if inputs are invalid or empty\n    if (!callVolume || !interactionVolume || callVolumeError || interactionVolumeError) {\n      setResults(null);\n      return;\n    }\n\n    const calls = parseFloat(callVolume) || 0;\n    const interactions = parseFloat(interactionVolume) || 0;\n    \n    if (calls <= 0 || interactions <= 0) {\n      setResults(null);\n      return;\n    }\n\n    try {\n      // Import the bulletproof engine\n      import('../utils/roiCalculatorFixed.js').then(({ ROICalculatorEngine }) => {\n        \n        // Use the protected calculation engine\n        const protectedResults = ROICalculatorEngine.calculate(calls, interactions, selectedCountry);\n        \n        console.log('🔒 Protected ROI Calculation Results:', protectedResults);\n        \n        // Map protected results to component state\n        const calculationResults = {\n          traditionalMonthlyCost: protectedResults.traditionalMonthlyCost,\n          sentraTechMonthlyCost: protectedResults.sentraTechMonthlyCost,\n          monthlySavings: protectedResults.monthlySavings,\n          yearlyTraditionalCost: protectedResults.yearlyTraditionalCost,\n          yearlySentraTechCost: protectedResults.yearlySentraTechCost,\n          yearlySavings: protectedResults.yearlySavings,\n          roi: protectedResults.roi,\n          costReduction: protectedResults.costReduction,\n          bundlesNeeded: protectedResults.bundlesNeeded,\n          humanHandledPercentage: protectedResults.humanHandledPercentage\n        };\n        \n        setResults(calculationResults);\n      });\n      \n    } catch (error) {\n      console.error('❌ ROI Calculation failed:', error);\n      setResults(null);\n    }\n  };\n\n  // Use bulletproof formatting functions\n  const formatCurrency = formatCurrencyProtected;\n  \n  // Debug calculation logger (for development)\n  const logCalculationDebug = (calls, interactions, results) => {\n    if (process.env.NODE_ENV === 'development') {\n      console.log('🧮 ROI Calculation Debug:', {\n        inputs: { calls, interactions, country: selectedCountry },\n        traditionalBPO: {\n          monthly: results.traditionalMonthlyCost,\n          annual: results.yearlyTraditionalCost,\n          formula: `(${calls} × 8 + ${interactions} × 5) × $0.40`\n        },\n        sentraTech: {\n          monthly: results.sentraTechMonthlyCost,\n          annual: results.yearlySentraTechCost,\n          formula: `(${calls}/1000 × $1014.75) + (${interactions}/1000 × $635.25)`\n        },\n        savings: {\n          monthly: results.monthlySavings,\n          annual: results.yearlySavings,\n          formula: `$${results.traditionalMonthlyCost} - $${results.sentraTechMonthlyCost}`\n        },\n        roi: {\n          percentage: results.roi,\n          formula: `(${results.monthlySavings} ÷ ${results.sentraTechMonthlyCost}) × 100`\n        },\n        costReduction: {\n          percentage: results.costReduction,\n          formula: `(${results.monthlySavings} ÷ ${results.traditionalMonthlyCost}) × 100`\n        }\n      });\n    }\n  };\n\n  const formatPercentage = formatPercentageProtected;\n\n  // Handle email report submission using ingest endpoint\n  const handleEmailSubmission = async () => {\n    if (!email || !results) return;\n\n    // Prevent duplicate submissions - check if already submitted for this data\n    if (isSubmittingReport || reportSubmitted) {\n      console.warn('⚠️ ROI Report already submitted or submission in progress');\n      return;\n    }\n\n    // Generate a consistent ID for this submission\n    if (!submissionID) {\n      const newID = `roi_${email.replace(/[^a-zA-Z0-9]/g, '')}_${selectedCountry.replace(/[^a-zA-Z0-9]/g, '')}_${Date.now()}`;\n      setSubmissionID(newID);\n      console.log(`🆔 Generated ROI submission ID: ${newID}`);\n    }\n\n    setIsSubmittingReport(true);\n    \n    // Network submission with duplicate prevention and rate limiting\n    try {\n      const { safeSubmit, showSuccessMessage, logPayload } =\n        await import('../config/dashboardConfig.js');\n\n      // Use the stored submission ID to prevent duplicates\n      const currentSubmissionID = submissionID || `roi_${email.replace(/[^a-zA-Z0-9]/g, '')}_${selectedCountry.replace(/[^a-zA-Z0-9]/g, '')}_${Date.now()}`;\n\n      // Log raw input values for debugging\n      console.log(`🔍 [ROI-CALCULATOR] Raw input values:`, {\n        email,\n        selectedCountry,\n        callVolume: `\"${callVolume}\" (type: ${typeof callVolume})`,\n        interactionVolume: `\"${interactionVolume}\" (type: ${typeof interactionVolume})`,\n        results: results ? {\n          traditionalMonthlyCost: results.traditionalMonthlyCost,\n          sentraTechMonthlyCost: results.sentraTechMonthlyCost,\n          monthlySavings: results.monthlySavings,\n          yearlySavings: results.yearlySavings,\n          roi: results.roi,\n          costReduction: results.costReduction,\n          bundlesNeeded: results.bundlesNeeded,\n          humanHandledPercentage: results.humanHandledPercentage\n        } : 'null'\n      });\n\n      // Enhanced payload capturing ALL calculated values from results state\n      const roiData = {\n        id: currentSubmissionID,\n        email: email,\n        country: selectedCountry,\n        \n        // Input volumes\n        call_volume: parseInt(callVolume) || 0,\n        interaction_volume: parseInt(interactionVolume) || 0,\n        total_volume: (parseInt(callVolume) || 0) + (parseInt(interactionVolume) || 0),\n        monthly_volume: (parseInt(callVolume) || 0) + (parseInt(interactionVolume) || 0),\n        \n        // Calculated costs (captured from results state)\n        bpo_spending: results?.traditionalMonthlyCost || 0,\n        sentratech_spending: results?.sentraTechMonthlyCost || 0,\n        yearly_traditional_cost: results?.yearlyTraditionalCost || 0,\n        yearly_sentratech_cost: results?.yearlySentraTechCost || 0,\n        \n        // Calculated savings\n        monthly_savings: results?.monthlySavings || 0,\n        yearly_savings: results?.yearlySavings || 0,\n        calculated_savings: results?.monthlySavings || 0, // Alternative field mapping\n        \n        // Performance metrics\n        roi_percentage: results?.roi || 0,\n        cost_reduction: results?.costReduction || 0,\n        bundles: results?.bundlesNeeded || 1,\n        human_handled_percentage: results?.humanHandledPercentage || 0,\n        \n        // Metadata\n        status: 'new',\n        source: 'website_roi_calculator',\n        created: new Date().toISOString(),\n        timestamp: new Date().toISOString()\n      };\n\n      // Additional DOM capture as fallback (adapting your concept to React)\n      try {\n        // Try to capture any additional values from DOM if available\n        const domValues = {\n          displayed_roi: document.querySelector('[data-roi-percentage]')?.textContent?.replace(/[%,\\s]/g, '') || null,\n          displayed_savings: document.querySelector('[data-monthly-savings]')?.textContent?.replace(/[\\$,K\\s]/g, '') || null,\n          displayed_bpo_cost: document.querySelector('[data-bpo-cost]')?.textContent?.replace(/[\\$,K\\s]/g, '') || null,\n          displayed_sentra_cost: document.querySelector('[data-sentra-cost]')?.textContent?.replace(/[\\$,K\\s]/g, '') || null\n        };\n        \n        console.log(`🎯 [ROI-CALCULATOR] DOM fallback values:`, domValues);\n        \n        // Use DOM values as fallback if results state is missing\n        if (!results && (domValues.displayed_roi || domValues.displayed_savings)) {\n          roiData.roi_percentage = parseFloat(domValues.displayed_roi) || roiData.roi_percentage;\n          roiData.monthly_savings = parseFloat(domValues.displayed_savings) * 1000 || roiData.monthly_savings;\n          roiData.bpo_spending = parseFloat(domValues.displayed_bpo_cost) * 1000 || roiData.bpo_spending;\n          roiData.sentratech_spending = parseFloat(domValues.displayed_sentra_cost) * 1000 || roiData.sentratech_spending;\n        }\n      } catch (domError) {\n        console.warn('🔍 [ROI-CALCULATOR] DOM capture failed (using results state only):', domError.message);\n      }\n\n      // Log the complete payload before submission\n      logPayload('roi-calculator', roiData);\n\n      // Use safe submission wrapper with duplicate prevention\n      const result = await safeSubmit('roi-calculator', roiData, {\n        disableDuration: 10000, // 10 seconds for ROI Calculator\n        onSubmitStart: () => setIsSubmittingReport(true),\n        onSubmitEnd: () => setIsSubmittingReport(false),\n        onDuplicate: () => {\n          console.warn('ROI Calculator submission blocked - already in progress');\n        }\n      });\n\n      if (result.success) {\n        showSuccessMessage(\n          'ROI report submitted successfully',\n          { ...result.data, form_type: 'roi_calculator' }\n        );\n        setReportSubmitted(true);\n        \n        // Mark this submission as complete to prevent duplicates\n        console.log(`✅ ROI Report submitted successfully with ID: ${currentSubmissionID}`);\n        \n        // Analytics event\n        if (window?.dataLayer) {\n          window.dataLayer.push({\n            event: 'roi_report_submit',\n            country: selectedCountry,\n            total_volume: roiData.total_volume,\n            submission_mode: result.mode,\n            submissionId: currentSubmissionID,\n            ingestId: result.data?.id || currentSubmissionID\n          });\n        }\n      } else if (result.reason === 'rate_limited') {\n        // Handle rate limiting specifically\n        console.warn('ROI Calculator rate limited:', result.message);\n        alert(result.message || 'Please wait before submitting another ROI report');\n      } else if (result.reason === 'duplicate_submission') {\n        // Handle duplicate submission\n        console.warn('Duplicate ROI submission blocked:', result.message);\n        alert('This ROI report has already been submitted. Please refresh to calculate a new report.');\n      } else {\n        throw new Error(result.error || result.message || 'ROI report submission failed');\n      }\n    } catch (error) {\n      // Fallback to offline simulation on any error\n      console.warn('ROI report submission failed, using offline fallback:', error);\n      setReportSubmitted(true);\n      \n      // Reset submission ID on failure to allow retry\n      setSubmissionID(null);\n    } finally {\n      setIsSubmittingReport(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-8\">\n      \n      {/* Main Calculator Card with Glassmorphism Design */}\n      <Card className=\"bg-gradient-to-br from-[rgba(26,28,30,0.95)] to-[rgba(38,40,42,0.95)] backdrop-blur-xl border border-[rgba(0,255,65,0.2)] rounded-2xl shadow-2xl\">\n        <CardContent className=\"p-8\">\n          \n          {/* Header */}\n          <div className=\"text-center mb-8\">\n            <div className=\"flex items-center justify-center space-x-3 mb-4\">\n              <Calculator className=\"text-[#00FF41]\" size={32} />\n              <h1 className=\"text-3xl font-bold text-white\">ROI Calculator</h1>\n            </div>\n            <p className=\"text-[rgb(161,161,170)] text-lg\">\n              Calculate your potential savings with SentraTech's AI-powered platform\n            </p>\n            <div className=\"text-sm text-[#00FF41] mt-2\">\n              ✨ Assumes 70% automation with real-time cost comparison\n            </div>\n          </div>\n\n          {/* Single Column Input Layout */}\n          <div className=\"max-w-lg mx-auto space-y-6 mb-8\">\n            \n            {/* Country Selector with Flags */}\n            <div>\n              <Label className=\"text-white text-lg font-semibold mb-3 block\">Select Country</Label>\n              <div className=\"grid grid-cols-2 gap-3\">\n                {Object.entries(COUNTRIES).map(([country, data]) => (\n                  <button\n                    key={country}\n                    onClick={() => setSelectedCountry(country)}\n                    onMouseEnter={() => setShowCountryTooltip(country)}\n                    onMouseLeave={() => setShowCountryTooltip(null)}\n                    className={`relative p-4 rounded-xl border-2 transition-all duration-200 ${\n                      selectedCountry === country\n                        ? 'border-[#00FF41] bg-[rgba(0,255,65,0.1)]'\n                        : 'border-[rgba(255,255,255,0.1)] hover:border-[rgba(0,255,65,0.5)]'\n                    }`}\n                  >\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-2xl\">{data.flag}</span>\n                      <span className=\"text-white font-medium\">{country}</span>\n                    </div>\n                    \n                    {/* Country Tooltip */}\n                    {showCountryTooltip === country && (\n                      <div className=\"absolute z-10 bottom-full left-1/2 transform -translate-x-1/2 mb-2 p-3 bg-[rgba(26,28,30,0.95)] border border-[rgba(0,255,65,0.3)] rounded-lg shadow-xl backdrop-blur-sm\">\n                        <div className=\"text-xs text-[rgb(161,161,170)] whitespace-nowrap\">\n                          {data.description}\n                        </div>\n                        <div className=\"text-xs text-[#00FF41] mt-1\">\n                          ~${data.bpoPerMin}/min BPO cost\n                        </div>\n                      </div>\n                    )}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Volume Inputs - Aligned Grid Layout */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 items-start\">\n              {/* Call Volume Input */}\n              <div className=\"flex flex-col h-full\">\n                <Label className=\"text-white text-lg font-semibold mb-3 block\">Monthly Call Volume</Label>\n                <Input\n                  type=\"number\"\n                  placeholder=\"e.g., 1000\"\n                  value={callVolume}\n                  onChange={handleCallVolumeChange}\n                  className={`bg-[rgba(26,28,30,0.8)] border-2 text-white text-lg p-4 rounded-xl transition-all duration-200 ${\n                    callVolumeError \n                      ? 'border-red-500 focus:border-red-500' \n                      : 'border-[rgba(255,255,255,0.1)] focus:border-[#00FF41]'\n                  }`}\n                  min=\"0\"\n                />\n                {callVolumeError && (\n                  <div className=\"flex items-center space-x-2 mt-2 text-red-400 text-sm\">\n                    <AlertCircle size={16} />\n                    <span>{callVolumeError}</span>\n                  </div>\n                )}\n              </div>\n\n              {/* Interaction Volume Input */}\n              <div className=\"flex flex-col h-full\">\n                <Label className=\"text-white text-lg font-semibold mb-3 block\">Monthly Interaction Volume</Label>\n                <Input\n                  type=\"number\"\n                  placeholder=\"e.g., 1500\"\n                  value={interactionVolume}\n                  onChange={handleInteractionVolumeChange}\n                  className={`bg-[rgba(26,28,30,0.8)] border-2 text-white text-lg p-4 rounded-xl transition-all duration-200 ${\n                    interactionVolumeError \n                      ? 'border-red-500 focus:border-red-500' \n                      : 'border-[rgba(255,255,255,0.1)] focus:border-[#00FF41]'\n                  }`}\n                  min=\"0\"\n                />\n                {interactionVolumeError && (\n                  <div className=\"flex items-center space-x-2 mt-2 text-red-400 text-sm\">\n                    <AlertCircle size={16} />\n                    <span>{interactionVolumeError}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n\n          </div>\n\n          {/* Real-time Results Display */}\n          {results && (\n            <div className=\"space-y-6\">\n              \n              {/* Key Metrics Cards */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                \n                {/* Traditional BPO Cost */}\n                <Card className=\"bg-gradient-to-br from-[rgba(255,68,68,0.2)] to-[rgba(204,0,0,0.1)] border border-red-500/30 rounded-xl\">\n                  <CardContent className=\"p-6 text-center\">\n                    <div className=\"text-red-400 text-sm font-medium mb-2\">Traditional BPO</div>\n                    <div className=\"text-3xl font-bold text-red-400 mb-1\" data-bpo-cost={results.traditionalMonthlyCost}>\n                      {formatCurrency(results.traditionalMonthlyCost)}\n                    </div>\n                    <div className=\"text-xs text-red-300\">per month</div>\n                    <div className=\"text-lg font-semibold text-red-300 mt-2\">\n                      {formatCurrency(results.yearlyTraditionalCost)} / year\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* SentraTech Cost */}\n                <Card className=\"bg-gradient-to-br from-[rgba(0,255,65,0.2)] to-[rgba(0,204,51,0.1)] border border-[#00FF41]/30 rounded-xl\">\n                  <CardContent className=\"p-6 text-center\">\n                    <div className=\"text-[#00FF41] text-sm font-medium mb-2\">SentraTech AI</div>\n                    <div className=\"text-3xl font-bold text-[#00FF41] mb-1\" data-sentra-cost={results.sentraTechMonthlyCost}>\n                      {formatCurrency(results.sentraTechMonthlyCost)}\n                    </div>\n                    <div className=\"text-xs text-green-300\">per month</div>\n                    <div className=\"text-lg font-semibold text-green-300 mt-2\">\n                      {formatCurrency(results.yearlySentraTechCost)} / year\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Monthly Savings */}\n                <Card className=\"bg-gradient-to-br from-[rgba(0,221,255,0.2)] to-[rgba(0,153,204,0.1)] border border-blue-400/30 rounded-xl\">\n                  <CardContent className=\"p-6 text-center\">\n                    <div className=\"text-blue-400 text-sm font-medium mb-2\">Your Savings</div>\n                    <div className=\"text-3xl font-bold text-blue-400 mb-1\" data-monthly-savings={results.monthlySavings}>\n                      {formatCurrency(results.monthlySavings)}\n                    </div>\n                    <div className=\"text-xs text-blue-300\">per month</div>\n                    <div className=\"text-lg font-semibold text-blue-300 mt-2\">\n                      {formatCurrency(results.yearlySavings)} / year\n                    </div>\n                  </CardContent>\n                </Card>\n\n              </div>\n\n              {/* ROI and Cost Reduction Highlights */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                \n                <Card className=\"bg-gradient-to-r from-[rgba(0,255,65,0.1)] to-[rgba(0,204,51,0.05)] border border-[#00FF41]/20 rounded-xl\">\n                  <CardContent className=\"p-6 text-center\">\n                    <div className=\"text-white text-lg font-semibold mb-2\">Return on Investment</div>\n                    <div className=\"text-5xl font-bold text-[#00FF41] mb-2\" data-roi-percentage={results.roi}>\n                      {formatPercentage(results.roi)}\n                    </div>\n                    <div className=\"text-sm text-[rgb(161,161,170)]\">\n                      Monthly ROI based on savings vs. investment\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"bg-gradient-to-r from-[rgba(0,221,255,0.1)] to-[rgba(0,153,204,0.05)] border border-blue-400/20 rounded-xl\">\n                  <CardContent className=\"p-6 text-center\">\n                    <div className=\"text-white text-lg font-semibold mb-2\">Cost Reduction</div>\n                    <div className=\"text-5xl font-bold text-blue-400 mb-2\" data-cost-reduction={results.costReduction}>\n                      {formatPercentage(results.costReduction)}\n                    </div>\n                    <div className=\"text-sm text-[rgb(161,161,170)]\">\n                      Total cost reduction vs. traditional BPO\n                    </div>\n                  </CardContent>\n                </Card>\n\n              </div>\n\n              {/* Additional Details */}\n              <div className=\"bg-[rgba(38,40,42,0.5)] rounded-xl p-6 border border-[rgba(255,255,255,0.1)]\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 text-center\">\n                  \n                  <div>\n                    <div className=\"text-[#00FF41] text-2xl font-bold\">\n                      {formatPercentage(AUTOMATION_PERCENTAGE)}\n                    </div>\n                    <div className=\"text-white text-sm font-medium\">AI Automation</div>\n                    <div className=\"text-xs text-[rgb(161,161,170)] mt-1\">\n                      Only {results.humanHandledPercentage}% needs human agents\n                    </div>\n                  </div>\n\n                  <div>\n                    <div className=\"text-[#00FF41] text-2xl font-bold\">\n                      {results.bundlesNeeded.toFixed(1)}\n                    </div>\n                    <div className=\"text-white text-sm font-medium\">SentraTech Bundles</div>\n                    <div className=\"text-xs text-[rgb(161,161,170)] mt-1\">\n                      Proportional cost allocation\n                    </div>\n                  </div>\n\n                  <div>\n                    <div className=\"text-[#00FF41] text-2xl font-bold\">\n                      {COUNTRIES[selectedCountry].flag} {selectedCountry}\n                    </div>\n                    <div className=\"text-white text-sm font-medium\">Selected Market</div>\n                    <div className=\"text-xs text-[rgb(161,161,170)] mt-1\">\n                      ${COUNTRIES[selectedCountry].bpoPerMin}/min BPO rate\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n\n              {/* Get Detailed Report Button */}\n              <div className=\"text-center\">\n                <Button\n                  onClick={() => setShowEmailModal(true)}\n                  className=\"bg-[#00FF41] text-[#0A0A0A] hover:bg-[#00e83a] font-semibold px-8 py-4 text-lg rounded-xl transform hover:scale-105 transition-all duration-200\"\n                >\n                  <Mail className=\"mr-2\" size={20} />\n                  Get Detailed ROI Report\n                </Button>\n              </div>\n\n            </div>\n          )}\n\n          {/* No Results State */}\n          {!results && (callVolume || interactionVolume) && (\n            <div className=\"text-center py-8\">\n              <Calculator className=\"text-[rgba(255,255,255,0.3)] mx-auto mb-4\" size={48} />\n              <p className=\"text-[rgb(161,161,170)]\">\n                Enter your call and interaction volumes to see instant ROI calculations\n              </p>\n            </div>\n          )}\n\n        </CardContent>\n      </Card>\n\n      {/* Email Modal */}\n      {showEmailModal && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <Card className=\"bg-[rgba(26,28,30,0.98)] border border-[rgba(0,255,65,0.3)] rounded-2xl max-w-md w-full mx-4 shadow-2xl\">\n            <CardContent className=\"p-8\">\n              \n              {reportSubmitted ? (\n                // Success State\n                <div className=\"text-center\">\n                  <div className=\"mb-6\">\n                    <Sparkles className=\"text-[#00FF41] mx-auto mb-4\" size={48} />\n                    <h3 className=\"text-2xl font-bold text-white mb-2\">Report Submitted Successfully!</h3>\n                    <p className=\"text-[rgb(161,161,170)]\">\n                      Your detailed ROI report has been sent to <strong className=\"text-white\">{email}</strong>\n                    </p>\n                  </div>\n                  \n                  {results && (\n                    <div className=\"bg-[rgba(0,255,65,0.1)] rounded-lg p-4 mb-6 text-left\">\n                      <div className=\"text-sm text-[rgb(161,161,170)] mb-3\">📧 What's Next?</div>\n                      <ul className=\"space-y-2 text-sm text-white\">\n                        <li>• Detailed ROI breakdown and analysis</li>\n                        <li>• Implementation roadmap and timeline</li>\n                        <li>• Custom pricing options for your volume</li>\n                        <li>• Our team will follow up within 24 hours</li>\n                        <li>• Schedule a personalized demo session</li>\n                      </ul>\n                    </div>\n                  )}\n                  \n                  <Button\n                    onClick={() => {\n                      setShowEmailModal(false);\n                      setReportSubmitted(false);\n                      setEmail('');\n                    }}\n                    className=\"bg-[#00FF41] text-[#0A0A0A] hover:bg-[#00e83a] w-full\"\n                  >\n                    Continue Exploring\n                  </Button>\n                </div>\n              ) : (\n                // Email Input State\n                <div>\n                  <div className=\"flex items-center justify-between mb-6\">\n                    <h3 className=\"text-xl font-bold text-white\">Get Your ROI Report</h3>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => setShowEmailModal(false)}\n                      className=\"text-[rgb(161,161,170)] hover:text-white\"\n                    >\n                      <X size={20} />\n                    </Button>\n                  </div>\n\n                  {results && (\n                    <div className=\"bg-[rgba(38,40,42,0.8)] rounded-lg p-4 mb-6\">\n                      <div className=\"text-sm text-[rgb(161,161,170)] mb-2\">Your ROI Summary:</div>\n                      <div className=\"grid grid-cols-2 gap-4 text-xs\">\n                        <div>\n                          <div className=\"text-white font-medium\">Country:</div>\n                          <div className=\"text-[#00FF41]\">{COUNTRIES[selectedCountry].flag} {selectedCountry}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-white font-medium\">Monthly Volume:</div>\n                          <div className=\"text-[#00FF41]\">{parseInt(callVolume) + parseInt(interactionVolume)} total</div>\n                        </div>\n                        <div>\n                          <div className=\"text-white font-medium\">Monthly Savings:</div>\n                          <div className=\"text-[#00FF41]\">{formatCurrency(results.monthlySavings)}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-white font-medium\">ROI:</div>\n                          <div className=\"text-[#00FF41]\">{formatPercentage(results.roi)}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"space-y-4\">\n                    <div>\n                      <Label className=\"text-white mb-2 block\">Email Address</Label>\n                      <Input\n                        type=\"email\"\n                        placeholder=\"your.email@company.com\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        className=\"bg-[rgba(26,28,30,0.8)] border-[rgba(255,255,255,0.1)] text-white\"\n                        disabled={isSubmittingReport}\n                      />\n                    </div>\n\n                    <Button\n                      onClick={handleEmailSubmission}\n                      disabled={!email || isSubmittingReport}\n                      className=\"bg-[#00FF41] text-[#0A0A0A] hover:bg-[#00e83a] w-full\"\n                    >\n                      {isSubmittingReport ? (\n                        <>\n                          <Sparkles className=\"mr-2 animate-spin\" size={16} />\n                          Sending Report...\n                        </>\n                      ) : (\n                        <>\n                          <Mail className=\"mr-2\" size={16} />\n                          Send ROI Report\n                        </>\n                      )}\n                    </Button>\n                  </div>\n                </div>\n              )}\n              \n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n    </div>\n  );\n};\n\nexport default ROICalculatorRedesigned;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../components/ui/button';\nimport { motion } from 'framer-motion';\n\n// Mobile-optimized animations - reduce complexity for better performance\nconst isMobile = typeof window !== 'undefined' && window.innerWidth <= 768;\nconst reduceMotion = typeof window !== 'undefined' && window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n\nconst mobileOptimizedVariants = {\n  // Simple animations for mobile to prevent lag\n  fadeIn: {\n    initial: reduceMotion || isMobile ? {} : { opacity: 0, y: 20 },\n    animate: { opacity: 1, y: 0 },\n    transition: { duration: reduceMotion || isMobile ? 0.2 : 0.6 }\n  },\n  staggerContainer: {\n    animate: {\n      transition: {\n        staggerChildren: reduceMotion || isMobile ? 0.05 : 0.1\n      }\n    }\n  }\n};\nimport { ArrowRight, Calculator, TrendingUp, DollarSign, Clock, Users, Zap, Target, CheckCircle } from 'lucide-react';\nimport ROICalculatorRedesigned from '../components/ROICalculatorRedesigned';\n\nconst ROICalculatorPage = () => {\n  \n  // Mobile optimization CSS\n  const mobileOptimizationStyles = `\n    /* Mobile-first optimizations for ROI Calculator */\n    @media (max-width: 768px) {\n      .mobile-optimized {\n        transform: translateZ(0); /* Hardware acceleration */\n        backface-visibility: hidden;\n      }\n      \n      .mobile-stat-card {\n        min-height: auto;\n        padding: 0.75rem !important;\n      }\n      \n      .mobile-stat-card .text-2xl {\n        font-size: 1.25rem !important;\n      }\n      \n      .mobile-stat-card .text-sm {\n        font-size: 0.75rem !important;\n      }\n      \n      /* Reduce animation complexity on mobile */\n      * {\n        animation-duration: 0.2s !important;\n        transition-duration: 0.2s !important;\n      }\n      \n      /* Optimize touch targets */\n      .mobile-touch-target {\n        min-height: 44px;\n        min-width: 44px;\n      }\n      \n      /* Prevent zoom on input focus */\n      input, select, textarea {\n        font-size: 16px !important;\n      }\n    }\n    \n    /* Reduce motion for better performance */\n    @media (prefers-reduced-motion: reduce) {\n      * {\n        animation-duration: 0.01ms !important;\n        animation-iteration-count: 1 !important;\n        transition-duration: 0.01ms !important;\n      }\n    }\n  `;\n  const benefits = [\n    {\n      icon: DollarSign,\n      title: 'Cost Savings',\n      description: 'Reduce operational costs by up to 60% with AI automation',\n      color: 'text-[#00FF41]',\n      bgColor: 'bg-[rgba(0,255,65,0.1)]',\n      borderColor: 'border-[rgba(0,255,65,0.3)]'\n    },\n    {\n      icon: Clock,\n      title: 'Time Efficiency',\n      description: 'Faster resolution times with intelligent routing and responses',\n      color: 'text-[#00DDFF]',\n      bgColor: 'bg-[rgba(0,221,255,0.1)]',\n      borderColor: 'border-[rgba(0,221,255,0.3)]'\n    },\n    {\n      icon: Users,\n      title: 'Agent Productivity',\n      description: 'Increase agent productivity by 3x with AI assistance',\n      color: 'text-[#FFD700]',\n      bgColor: 'bg-[rgba(255,215,0,0.1)]',\n      borderColor: 'border-[rgba(255,215,0,0.3)]'\n    },\n    {\n      icon: Target,\n      title: 'Customer Satisfaction',\n      description: 'Improve customer satisfaction scores to 95%+',\n      color: 'text-[#FF6B6B]',\n      bgColor: 'bg-[rgba(255,107,107,0.1)]',\n      borderColor: 'border-[rgba(255,107,107,0.3)]'\n    }\n  ];\n\n  const statistics = [\n    { value: '60%', label: 'Average Cost Reduction', icon: DollarSign },\n    { value: '3x', label: 'Faster Resolution', icon: Zap },\n    { value: '95%', label: 'Customer Satisfaction', icon: CheckCircle },\n    { value: '24/7', label: 'AI Availability', icon: Clock }\n  ];\n\n  return (\n    <main role=\"main\" aria-label=\"SentraTech ROI Calculator - Calculate AI Support Savings\">\n      <div className=\"min-h-screen bg-[#0A0A0A] text-[#F8F9FA]\" id=\"roi-calculator-page\">\n      {/* Mobile optimization styles */}\n      <style>{mobileOptimizationStyles}</style>\n      {/* Hero Section */}\n      <section className=\"pt-24 pb-12 relative overflow-hidden\" id=\"roi-hero\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            {...mobileOptimizedVariants.fadeIn}\n            className=\"text-center max-w-5xl mx-auto mobile-optimized\"\n          >\n            <div className=\"flex items-center justify-center space-x-4 mb-6\">\n              <div className=\"w-16 h-16 bg-[#00FF41]/20 rounded-full flex items-center justify-center border-2 border-[#00FF41]/50\">\n                <Calculator className=\"text-[#00FF41]\" size={32} />\n              </div>\n              <h1 className=\"text-5xl md:text-6xl font-bold font-rajdhani leading-tight\">\n                ROI <span className=\"text-[#00FF41]\">Calculator</span>\n              </h1>\n            </div>\n            \n            <p className=\"text-xl text-[rgb(161,161,170)] mb-8 max-w-4xl mx-auto leading-relaxed\">\n              Discover your potential savings and return on investment with SentraTech's AI-powered customer support platform. \n              Get personalized calculations based on your current operations.\n            </p>\n\n            {/* Quick Stats */}\n            <motion.div \n              className=\"grid grid-cols-2 md:grid-cols-4 gap-4 md:gap-6 max-w-4xl mx-auto mb-12\"\n              variants={mobileOptimizedVariants.staggerContainer}\n              initial=\"initial\"\n              animate=\"animate\"\n            >\n              {statistics.map((stat, index) => (\n                <motion.div\n                  key={index}\n                  variants={mobileOptimizedVariants.fadeIn}\n                  className=\"bg-[rgba(0,255,65,0.05)] border border-[rgba(0,255,65,0.2)] rounded-xl p-3 md:p-4 mobile-stat-card\"\n                >\n                  <stat.icon size={24} className=\"text-[#00FF41] mx-auto mb-2\" />\n                  <div className=\"text-2xl font-bold text-[#00FF41] mb-1 font-rajdhani\">{stat.value}</div>\n                  <div className=\"text-sm text-[rgb(161,161,170)]\">{stat.label}</div>\n                </motion.div>\n              ))}\n            </motion.div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Main ROI Calculator Section */}\n      <section className=\"py-16 bg-gradient-to-br from-[rgb(17,17,19)] to-[rgb(26,28,30)] relative\" id=\"calculator\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-12\"\n          >\n            <h2 className=\"text-4xl font-bold text-white mb-4 font-rajdhani\">\n              Calculate Your Savings\n            </h2>\n            <p className=\"text-lg text-[rgb(161,161,170)] max-w-3xl mx-auto\">\n              Input your current support metrics to see projected savings, efficiency gains, and ROI with SentraTech\n            </p>\n          </motion.div>\n          \n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.8, delay: 0.3 }}\n          >\n            <ROICalculatorRedesigned />\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Benefits Section */}\n      <section className=\"py-16 bg-[#0A0A0A]\" id=\"roi-benefits\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            className=\"text-center mb-12\"\n          >\n            <h2 className=\"text-4xl font-bold text-white mb-4 font-rajdhani\">\n              Why Calculate ROI with SentraTech?\n            </h2>\n            <p className=\"text-lg text-[rgb(161,161,170)] max-w-3xl mx-auto\">\n              Understand the tangible benefits and financial impact of implementing our AI-powered platform\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 gap-8 max-w-6xl mx-auto\">\n            {benefits.map((benefit, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, x: index % 2 === 0 ? -30 : 30 }}\n                whileInView={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.8, delay: index * 0.2 }}\n                className={`${benefit.bgColor} ${benefit.borderColor} border rounded-xl p-6 relative overflow-hidden group hover:shadow-lg hover:shadow-[rgba(0,255,65,0.1)] transition-all duration-300`}\n              >\n                {/* Background accent */}\n                <div className={`absolute top-0 right-0 w-32 h-32 ${benefit.bgColor} rounded-full blur-3xl opacity-50 group-hover:opacity-70 transition-opacity duration-300`}></div>\n                \n                <div className=\"relative z-10\">\n                  <div className={`w-12 h-12 ${benefit.bgColor} rounded-lg flex items-center justify-center mb-4 ${benefit.borderColor} border`}>\n                    <benefit.icon size={24} className={benefit.color} />\n                  </div>\n                  \n                  <h3 className=\"text-xl font-bold text-white mb-3\">{benefit.title}</h3>\n                  <p className=\"text-[rgb(161,161,170)] leading-relaxed\">{benefit.description}</p>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Implementation Timeline */}\n      <section className=\"py-16 bg-gradient-to-br from-[rgb(17,17,19)] to-[rgb(26,28,30)]\" id=\"implementation\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            className=\"text-center mb-12\"\n          >\n            <h2 className=\"text-4xl font-bold text-white mb-4 font-rajdhani\">\n              ROI Timeline\n            </h2>\n            <p className=\"text-lg text-[rgb(161,161,170)] max-w-3xl mx-auto\">\n              See how quickly you can achieve return on investment with our phased implementation approach\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 max-w-5xl mx-auto\">\n            {[\n              {\n                phase: 'Month 1-2',\n                title: 'Initial Setup & Training',\n                roi: '10-15%',\n                description: 'Quick wins with automated responses and basic routing',\n                color: 'text-[#FFD700]'\n              },\n              {\n                phase: 'Month 3-6',\n                title: 'Full Integration',\n                roi: '35-45%',\n                description: 'Complete AI integration with advanced analytics and optimization',\n                color: 'text-[#00DDFF]'\n              },\n              {\n                phase: 'Month 6+',\n                title: 'Maximized Efficiency',\n                roi: '60-80%',\n                description: 'Full platform benefits with predictive analytics and insights',\n                color: 'text-[#00FF41]'\n              }\n            ].map((phase, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.2 }}\n                className=\"text-center relative\"\n              >\n                <div className=\"bg-[rgba(0,255,65,0.05)] border border-[rgba(0,255,65,0.2)] rounded-xl p-6\">\n                  <div className=\"text-sm font-medium text-[rgb(161,161,170)] mb-2\">{phase.phase}</div>\n                  <h3 className=\"text-xl font-bold text-white mb-3\">{phase.title}</h3>\n                  <div className={`text-3xl font-bold mb-3 font-rajdhani ${phase.color}`}>\n                    {phase.roi} ROI\n                  </div>\n                  <p className=\"text-sm text-[rgb(161,161,170)]\">{phase.description}</p>\n                </div>\n                \n                {/* Timeline connector */}\n                {index < 2 && (\n                  <div className=\"hidden md:block absolute top-1/2 left-full w-8 h-px bg-gradient-to-r from-[#00FF41] to-transparent transform -translate-y-1/2\"></div>\n                )}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-[#0A0A0A]\" id=\"roi-cta\">\n        <div className=\"container mx-auto px-6 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            className=\"max-w-4xl mx-auto\"\n          >\n            {/* Enhanced background */}\n            <div className=\"bg-gradient-to-br from-[rgba(0,255,65,0.05)] to-[rgba(0,221,255,0.05)] rounded-3xl border border-[rgba(0,255,65,0.2)] p-8 relative overflow-hidden\">\n              {/* Background accents */}\n              <div className=\"absolute top-0 right-0 w-40 h-40 bg-[#00FF41]/10 rounded-full blur-3xl\"></div>\n              <div className=\"absolute bottom-0 left-0 w-32 h-32 bg-[#00DDFF]/10 rounded-full blur-3xl\"></div>\n              \n              <div className=\"relative z-10\">\n                <h2 className=\"text-3xl md:text-4xl font-bold text-white mb-4 font-rajdhani\">\n                  Ready to See Your ROI in Action?\n                </h2>\n                <p className=\"text-lg text-[rgb(161,161,170)] mb-8\">\n                  Get a personalized demo showing exactly how SentraTech can transform your support operations and deliver the ROI you calculated\n                </p>\n                \n                <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                  <Link to=\"/demo-request\">\n                    <Button className=\"bg-[#00FF41] text-[#0A0A0A] hover:bg-[#00e83a] font-semibold px-8 py-4 text-lg rounded-xl transform hover:scale-105 transition-all duration-300 flex items-center space-x-2 shadow-lg shadow-[#00FF41]/25\">\n                      <span>Schedule Demo</span>\n                      <ArrowRight size={20} />\n                    </Button>\n                  </Link>\n                  \n                  <Link to=\"/case-studies\">\n                    <Button variant=\"outline\" className=\"border-[#00DDFF] text-[#00DDFF] hover:bg-[#00DDFF]/10 font-semibold px-8 py-4 text-lg rounded-xl transition-all duration-300\">\n                      View Case Studies\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n      </div>\n    </main>\n  );\n};\n\nexport default ROICalculatorPage;","/**\n * ROI Calculator - BULLETPROOF IMPLEMENTATION\n * Final, protected version that will never break again\n */\n\n// PROTECTED CONSTANTS - DO NOT MODIFY\nexport const PROTECTED_CONSTANTS = Object.freeze({\n  // Country BPO rates (per minute) - IMMUTABLE\n  COUNTRIES: Object.freeze({\n    'Bangladesh': Object.freeze({ bpoPerMin: 0.40 }),\n    'India': Object.freeze({ bpoPerMin: 0.55 }),\n    'Philippines': Object.freeze({ bpoPerMin: 0.90 }),\n    'Vietnam': Object.freeze({ bpoPerMin: 0.60 })\n  }),\n  \n  // AHT (Average Handle Time) - IMMUTABLE\n  CALL_AHT: 8, // minutes per call\n  INTERACTION_AHT: 5, // minutes per interaction\n  \n  // SentraTech pricing - IMMUTABLE\n  SENTRATECH_BUNDLE_COST: 1650, // $1,650 per bundle (1000 calls + 1000 interactions)\n  \n  // Bundle share calculation (canonical method)\n  BUNDLE_CALL_MINUTES: 1000 * 8, // 8000 minutes\n  BUNDLE_INTERACTION_MINUTES: 1000 * 5, // 5000 minutes  \n  BUNDLE_TOTAL_MINUTES: (1000 * 8) + (1000 * 5), // 13000 minutes\n  \n  // Exact bundle shares (not rounded percentages)\n  get CALL_SHARE() { return this.BUNDLE_CALL_MINUTES / this.BUNDLE_TOTAL_MINUTES; }, // 8000/13000\n  get INTERACTION_SHARE() { return this.BUNDLE_INTERACTION_MINUTES / this.BUNDLE_TOTAL_MINUTES; }, // 5000/13000\n  \n  // Exact derived costs (calculated using precise fractions)\n  get CALL_COST_PER_1K() { return this.SENTRATECH_BUNDLE_COST * this.CALL_SHARE; }, // $1,015.38...\n  get INTERACTION_COST_PER_1K() { return this.SENTRATECH_BUNDLE_COST * this.INTERACTION_SHARE; }, // $634.61...\n  \n  // Automation\n  AUTOMATION_PERCENTAGE: 70\n});\n\n// PROTECTED CALCULATION ENGINE\nexport class ROICalculatorEngine {\n  \n  // Validate inputs\n  static validateInputs(calls, interactions, country) {\n    if (!calls || !interactions || calls <= 0 || interactions <= 0) {\n      throw new Error('Invalid input: calls and interactions must be positive numbers');\n    }\n    \n    if (!PROTECTED_CONSTANTS.COUNTRIES[country]) {\n      throw new Error(`Invalid country: ${country}`);\n    }\n    \n    return true;\n  }\n  \n  // Calculate Traditional BPO cost\n  static calculateTraditionalCost(calls, interactions, country) {\n    const callMinutes = calls * PROTECTED_CONSTANTS.CALL_AHT;\n    const interactionMinutes = interactions * PROTECTED_CONSTANTS.INTERACTION_AHT;\n    const totalMinutes = callMinutes + interactionMinutes;\n    const bpoRate = PROTECTED_CONSTANTS.COUNTRIES[country].bpoPerMin;\n    \n    return totalMinutes * bpoRate;\n  }\n  \n  // Calculate SentraTech cost\n  static calculateSentraTechCost(calls, interactions) {\n    const callCost = (calls / 1000) * PROTECTED_CONSTANTS.CALL_COST_PER_1K;\n    const interactionCost = (interactions / 1000) * PROTECTED_CONSTANTS.INTERACTION_COST_PER_1K;\n    \n    return callCost + interactionCost;\n  }\n  \n  // Calculate bundles needed\n  static calculateBundles(sentraTechCost) {\n    return sentraTechCost / PROTECTED_CONSTANTS.SENTRATECH_BUNDLE_COST;\n  }\n  \n  // Calculate ROI percentage\n  static calculateROI(savings, investment) {\n    if (investment <= 0) return 0;\n    return (savings / investment) * 100;\n  }\n  \n  // Calculate cost reduction percentage\n  static calculateCostReduction(savings, originalCost) {\n    if (originalCost <= 0) return 0;\n    return (savings / originalCost) * 100;\n  }\n  \n  // MAIN CALCULATION METHOD - BULLETPROOF\n  static calculate(calls, interactions, country = 'Bangladesh') {\n    try {\n      // Step 1: Validate inputs\n      this.validateInputs(calls, interactions, country);\n      \n      // Step 2: Calculate Traditional BPO cost\n      const traditionalMonthlyCost = this.calculateTraditionalCost(calls, interactions, country);\n      \n      // Step 3: Calculate SentraTech cost\n      const sentraTechMonthlyCost = this.calculateSentraTechCost(calls, interactions);\n      \n      // Step 4: Calculate savings\n      const monthlySavings = traditionalMonthlyCost - sentraTechMonthlyCost;\n      \n      // Step 5: Calculate annual figures\n      const yearlyTraditionalCost = traditionalMonthlyCost * 12;\n      const yearlySentraTechCost = sentraTechMonthlyCost * 12;\n      const yearlySavings = monthlySavings * 12;\n      \n      // Step 6: Calculate ROI and Cost Reduction\n      const roi = this.calculateROI(monthlySavings, sentraTechMonthlyCost);\n      const costReduction = this.calculateCostReduction(monthlySavings, traditionalMonthlyCost);\n      \n      // Step 7: Calculate bundles\n      const bundlesNeeded = this.calculateBundles(sentraTechMonthlyCost);\n      \n      // Return protected results object\n      const results = Object.freeze({\n        // Inputs (for verification)\n        inputs: Object.freeze({ calls, interactions, country }),\n        \n        // Monthly costs\n        traditionalMonthlyCost,\n        sentraTechMonthlyCost,\n        monthlySavings,\n        \n        // Annual costs  \n        yearlyTraditionalCost,\n        yearlySentraTechCost,\n        yearlySavings,\n        \n        // Percentages\n        roi,\n        costReduction,\n        \n        // Bundles\n        bundlesNeeded,\n        \n        // Meta\n        humanHandledPercentage: 100 - PROTECTED_CONSTANTS.AUTOMATION_PERCENTAGE,\n        \n        // Calculation breakdown (for debugging)\n        breakdown: Object.freeze({\n          callMinutes: calls * PROTECTED_CONSTANTS.CALL_AHT,\n          interactionMinutes: interactions * PROTECTED_CONSTANTS.INTERACTION_AHT,\n          totalMinutes: (calls * PROTECTED_CONSTANTS.CALL_AHT) + (interactions * PROTECTED_CONSTANTS.INTERACTION_AHT),\n          bpoRate: PROTECTED_CONSTANTS.COUNTRIES[country].bpoPerMin,\n          callCost: (calls / 1000) * PROTECTED_CONSTANTS.CALL_COST_PER_1K,\n          interactionCost: (interactions / 1000) * PROTECTED_CONSTANTS.INTERACTION_COST_PER_1K\n        })\n      });\n      \n      // Validate results before returning\n      this.validateResults(results);\n      \n      return results;\n      \n    } catch (error) {\n      console.error('ROI Calculation Error:', error);\n      throw error;\n    }\n  }\n  \n  // Validate calculation results\n  static validateResults(results) {\n    const { traditionalMonthlyCost, sentraTechMonthlyCost, monthlySavings, roi, costReduction } = results;\n    \n    // Validate basic math\n    const expectedSavings = traditionalMonthlyCost - sentraTechMonthlyCost;\n    const expectedROI = (expectedSavings / sentraTechMonthlyCost) * 100;\n    const expectedCostReduction = (expectedSavings / traditionalMonthlyCost) * 100;\n    \n    const tolerance = 0.01;\n    \n    if (Math.abs(monthlySavings - expectedSavings) > tolerance) {\n      throw new Error(`Savings validation failed: Expected ${expectedSavings}, got ${monthlySavings}`);\n    }\n    \n    if (Math.abs(roi - expectedROI) > tolerance) {\n      throw new Error(`ROI validation failed: Expected ${expectedROI}, got ${roi}`);\n    }\n    \n    if (Math.abs(costReduction - expectedCostReduction) > tolerance) {\n      throw new Error(`Cost reduction validation failed: Expected ${expectedCostReduction}, got ${costReduction}`);\n    }\n    \n    return true;\n  }\n}\n\n// PROTECTED FORMATTING FUNCTIONS\nexport const formatCurrencyProtected = (amount) => {\n  if (amount === 0) return '$0';\n  if (amount < 1000) return `$${Math.round(amount)}`;\n  if (amount < 1000000) {\n    // Use precise truncation to avoid rounding errors\n    const thousands = Math.floor((amount / 1000) * 10) / 10;\n    return `$${thousands.toFixed(1)}K`;\n  }\n  return `$${(Math.floor(amount / 100000) * 10 / 100).toFixed(1)}M`;\n};\n\nexport const formatPercentageProtected = (value) => {\n  return `${(Math.round(value * 10) / 10).toFixed(1)}%`;\n};\n\n// TEST SUITE FOR VERIFICATION\nexport const runProtectedTests = () => {\n  console.log('🧮 Running Protected ROI Calculator Tests...');\n  \n  const testCases = [\n    {\n      name: '1000 calls + 1000 interactions (Bangladesh)',\n      inputs: { calls: 1000, interactions: 1000, country: 'Bangladesh' },\n      expected: {\n        traditionalMonthlyCost: 5200, // (1000×8 + 1000×5) × 0.40 = 13000 × 0.40\n        sentraTechMonthlyCost: 1650, // Exactly one bundle\n        monthlySavings: 3550, // 5200 - 1650\n        roi: 215.15, // (3550 / 1650) × 100\n        costReduction: 68.27 // (3550 / 5200) × 100\n      }\n    },\n    {\n      name: '1000 calls + 2000 interactions (Bangladesh) - Canonical Test Case',\n      inputs: { calls: 1000, interactions: 2000, country: 'Bangladesh' },\n      expected: {\n        traditionalMonthlyCost: 7200, // (1000×8 + 2000×5) × 0.40 = 18000 × 0.40\n        sentraTechMonthlyCost: 2284.62, // Canonical expected value\n        monthlySavings: 4915.38, // 7200 - 2284.62\n        roi: 215.15, // (4915.38 / 2284.62) × 100\n        costReduction: 68.27 // (4915.38 / 7200) × 100\n      }\n    }\n  ];\n  \n  let passed = 0;\n  let failed = 0;\n  \n  testCases.forEach(testCase => {\n    try {\n      const { calls, interactions, country } = testCase.inputs;\n      const results = ROICalculatorEngine.calculate(calls, interactions, country);\n      \n      // Check each expected value\n      Object.entries(testCase.expected).forEach(([key, expectedValue]) => {\n        const actualValue = results[key];\n        const tolerance = 0.1;\n        \n        if (Math.abs(actualValue - expectedValue) > tolerance) {\n          console.error(`❌ Test Failed: ${testCase.name} - ${key}`);\n          console.error(`   Expected: ${expectedValue}, Got: ${actualValue}`);\n          failed++;\n        } else {\n          console.log(`✅ Test Passed: ${testCase.name} - ${key}`);\n          passed++;\n        }\n      });\n      \n    } catch (error) {\n      console.error(`❌ Test Error: ${testCase.name} - ${error.message}`);\n      failed++;\n    }\n  });\n  \n  console.log(`\\n🧮 Test Results: ${passed} passed, ${failed} failed`);\n  return { passed, failed, success: failed === 0 };\n};\n\n// Export protected implementation\nexport default {\n  ROICalculatorEngine,\n  PROTECTED_CONSTANTS,\n  formatCurrencyProtected,\n  formatPercentageProtected,\n  runProtectedTests\n};"],"names":["Input","React","_ref","ref","className","type","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","cn","displayName","labelVariants","cva","Label","LabelPrimitive","COUNTRIES","flag","agentHourly","bpoPerMin","description","ROICalculatorRedesigned","selectedCountry","setSelectedCountry","useState","callVolume","setCallVolume","interactionVolume","setInteractionVolume","showCountryTooltip","setShowCountryTooltip","results","setResults","showEmailModal","setShowEmailModal","email","setEmail","isSubmittingReport","setIsSubmittingReport","reportSubmitted","setReportSubmitted","submissionID","setSubmissionID","callVolumeError","setCallVolumeError","interactionVolumeError","setInteractionVolumeError","useEffect","calculateROI","process","validateInput","value","setter","fieldName","numValue","parseFloat","isNaN","concat","calls","interactions","then","ROICalculatorEngine","protectedResults","calculate","console","log","calculationResults","traditionalMonthlyCost","sentraTechMonthlyCost","monthlySavings","yearlyTraditionalCost","yearlySentraTechCost","yearlySavings","roi","costReduction","bundlesNeeded","humanHandledPercentage","error","formatCurrency","formatCurrencyProtected","formatPercentage","formatPercentageProtected","_jsxs","children","Card","CardContent","Calculator","size","Object","entries","map","_ref2","country","data","onClick","onMouseEnter","onMouseLeave","placeholder","onChange","e","target","min","AlertCircle","toFixed","Button","Mail","Sparkles","variant","X","parseInt","disabled","async","warn","newID","replace","Date","now","safeSubmit","showSuccessMessage","logPayload","currentSubmissionID","roiData","id","call_volume","interaction_volume","total_volume","monthly_volume","bpo_spending","sentratech_spending","yearly_traditional_cost","yearly_sentratech_cost","monthly_savings","yearly_savings","calculated_savings","roi_percentage","cost_reduction","bundles","human_handled_percentage","status","source","created","toISOString","timestamp","_document$querySelect","_document$querySelect2","_document$querySelect3","_document$querySelect4","_document$querySelect5","_document$querySelect6","_document$querySelect7","_document$querySelect8","domValues","displayed_roi","document","querySelector","textContent","displayed_savings","displayed_bpo_cost","displayed_sentra_cost","domError","message","result","disableDuration","onSubmitStart","onSubmitEnd","onDuplicate","_window","_result$data","success","form_type","window","dataLayer","push","event","submission_mode","mode","submissionId","ingestId","reason","alert","Error","_Fragment","isMobile","innerWidth","reduceMotion","matchMedia","matches","mobileOptimizedVariants","fadeIn","initial","opacity","y","animate","transition","duration","staggerContainer","staggerChildren","ROICalculatorPage","benefits","icon","DollarSign","title","color","bgColor","borderColor","Clock","Users","Target","statistics","label","Zap","CheckCircle","role","motion","div","variants","stat","index","scale","delay","whileInView","benefit","x","phase","Link","to","ArrowRight","PROTECTED_CONSTANTS","freeze","CALL_AHT","INTERACTION_AHT","SENTRATECH_BUNDLE_COST","BUNDLE_CALL_MINUTES","BUNDLE_INTERACTION_MINUTES","BUNDLE_TOTAL_MINUTES","CALL_SHARE","this","INTERACTION_SHARE","CALL_COST_PER_1K","INTERACTION_COST_PER_1K","AUTOMATION_PERCENTAGE","validateInputs","calculateTraditionalCost","calculateSentraTechCost","calculateBundles","sentraTechCost","savings","investment","calculateCostReduction","originalCost","arguments","length","undefined","inputs","breakdown","callMinutes","interactionMinutes","totalMinutes","bpoRate","callCost","interactionCost","validateResults","expectedSavings","expectedROI","expectedCostReduction","tolerance","Math","abs","amount","round","thousands","floor","runProtectedTests","passed","failed","name","expected","forEach","testCase","key","expectedValue","actualValue"],"sourceRoot":""}