{"version":3,"file":"static/js/framer-motion.310f6356.js","mappings":"+MAMA,SAASA,EAAOC,EAAKC,GACjB,GAAmB,oBAARD,EACP,OAAOA,EAAIC,GAEE,OAARD,QAAwBE,IAARF,IACrBA,EAAIG,QAAUF,EAEtB,CAsCA,SAASG,IAAyB,QAAAC,EAAAC,UAAAC,OAANC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GAE5B,OAAOC,EAAAA,YAnCX,WAA8B,QAAAC,EAAAN,UAAAC,OAANC,EAAI,IAAAC,MAAAG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJL,EAAIK,GAAAP,UAAAO,GACxB,OAAQC,IACJ,IAAIC,GAAa,EACjB,MAAMC,EAAWR,EAAKS,KAAKjB,IACvB,MAAMkB,EAAUnB,EAAOC,EAAKc,GAI5B,OAHKC,GAAiC,oBAAZG,IACtBH,GAAa,GAEVG,CAAO,IAMlB,GAAIH,EACA,MAAO,KACH,IAAK,IAAII,EAAI,EAAGA,EAAIH,EAAST,OAAQY,IAAK,CACtC,MAAMD,EAAUF,EAASG,GACF,oBAAZD,EACPA,IAGAnB,EAAOS,EAAKW,GAAI,KAExB,EAER,CAER,CAO6BC,IAAeZ,GAAOA,EACnD,CC1CA,MAAMa,UAAwBV,EAAAA,UAC1BW,uBAAAA,CAAwBC,GACpB,MAAMC,EAAUC,KAAKC,MAAMC,SAASxB,QACpC,GAAIqB,GAAWD,EAAUK,YAAcH,KAAKC,MAAME,UAAW,CACzD,MAAMC,EAASL,EAAQM,aACjBC,GAAcC,EAAAA,EAAAA,GAAcH,IAC5BA,EAAOI,aACP,EACAC,EAAOT,KAAKC,MAAMS,QAAQhC,QAChC+B,EAAKE,OAASZ,EAAQa,cAAgB,EACtCH,EAAKI,MAAQd,EAAQS,aAAe,EACpCC,EAAKK,IAAMf,EAAQgB,UACnBN,EAAKO,KAAOjB,EAAQkB,WACpBR,EAAKS,MAAQZ,EAAcG,EAAKI,MAAQJ,EAAKO,IACjD,CACA,OAAO,IACX,CAIAG,kBAAAA,GAAuB,CACvBC,MAAAA,GACI,OAAOpB,KAAKC,MAAMoB,QACtB,EAEJ,SAASC,EAAQC,GAAyC,IAAxC,SAAEF,EAAQ,UAAElB,EAAS,QAAEqB,EAAO,KAAEC,GAAMF,EACpD,MAAMG,GAAKC,EAAAA,EAAAA,SACLpD,GAAMqD,EAAAA,EAAAA,QAAO,MACbnB,GAAOmB,EAAAA,EAAAA,QAAO,CAChBf,MAAO,EACPF,OAAQ,EACRG,IAAK,EACLE,KAAM,EACNE,MAAO,KAEL,MAAEW,IAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GACvBC,EAAcrD,EAAgBJ,EAAa,OAAR8C,QAAQ,IAARA,OAAQ,EAARA,EAAU9C,KAsCnD,OA5BA0D,EAAAA,EAAAA,qBAAmB,KACf,MAAM,MAAEpB,EAAK,OAAEF,EAAM,IAAEG,EAAG,KAAEE,EAAI,MAAEE,GAAUT,EAAK/B,QACjD,GAAIyB,IAAc5B,EAAIG,UAAYmC,IAAUF,EACxC,OACJ,MAAMuB,EAAgB,SAAZV,EAAqB,SAAHW,OAAYnB,GAAI,UAAAmB,OAAejB,GAC3D3C,EAAIG,QAAQ0D,QAAQC,YAAcX,EAClC,MAAMY,EAAQC,SAASC,cAAc,SACjCX,IACAS,EAAMT,MAAQA,GAClB,MAAMzB,EAAa,OAAJqB,QAAI,IAAJA,EAAAA,EAAQc,SAASE,KAahC,OAZArC,EAAOsC,YAAYJ,GACfA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCAADT,OACDT,EAAE,yEAAAS,OAEdtB,EAAK,wCAAAsB,OACJxB,EAAM,gCAAAwB,OACdD,EAAC,qCAAAC,OACIrB,EAAG,0CAIP,KACCV,EAAOyC,SAASP,IAChBlC,EAAO0C,YAAYR,EACvB,CACH,GACF,CAACnC,KACI4C,EAAAA,EAAAA,KAAInD,EAAiB,CAAEO,UAAWA,EAAWD,SAAU3B,EAAKmC,QAASD,EAAMY,SAAUnC,EAAAA,aAAmBmC,EAAU,CAAE9C,IAAKyD,KACrI,CC/EA,MAAMgB,EAAgBzB,IAA0G,IAAzG,SAAEF,EAAQ,QAAE4B,EAAO,UAAE9C,EAAS,eAAE+C,EAAc,OAAEC,EAAM,sBAAEC,EAAqB,KAAEC,EAAI,QAAE7B,EAAO,KAAEC,GAAMF,EACvH,MAAM+B,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/B9B,GAAKC,EAAAA,EAAAA,SACX,IAAI8B,GAAkB,EAClBC,GAAUC,EAAAA,EAAAA,UAAQ,KAClBF,GAAkB,EACX,CACH/B,KACAuB,UACA9C,YACAgD,SACAD,eAAiBU,IACbN,EAAiBO,IAAID,GAAS,GAC9B,IAAK,MAAME,KAAcR,EAAiBS,SACtC,IAAKD,EACD,OAERZ,GAAkBA,GAAgB,EAEtCc,SAAWJ,IACPN,EAAiBO,IAAID,GAAS,GACvB,IAAMN,EAAiBW,OAAOL,OAG9C,CAACzD,EAAWmD,EAAkBJ,IAyBjC,OAnBIE,GAAyBK,IACzBC,GAAOQ,EAAAA,EAAAA,GAAA,GAAQR,KAEnBC,EAAAA,EAAAA,UAAQ,KACJL,EAAiBa,SAAQ,CAACC,EAAGC,IAAQf,EAAiBO,IAAIQ,GAAK,IAAO,GACvE,CAAClE,IAKJjB,EAAAA,WAAgB,MACXiB,IACImD,EAAiB7C,MAClByC,GACAA,GAAgB,GACrB,CAAC/C,IACS,cAATkD,IACAhC,GAAY0B,EAAAA,EAAAA,KAAIzB,EAAU,CAAEnB,UAAWA,EAAWqB,QAASA,EAASC,KAAMA,EAAMJ,SAAUA,MAEtF0B,EAAAA,EAAAA,KAAIuB,EAAAA,EAAgBC,SAAU,CAAE/F,MAAOkF,EAASrC,SAAUA,GAAW,EAEjF,SAASmC,IACL,OAAO,IAAIgB,GACf,C,cC3DA,MAAMC,EAAeC,GAAUA,EAAML,KAAO,GAC5C,SAASM,EAAatD,GAClB,MAAMuD,EAAW,GAMjB,OAJAC,EAAAA,SAASV,QAAQ9C,GAAWqD,KACpBI,EAAAA,EAAAA,gBAAeJ,IACfE,EAASG,KAAKL,EAAM,IAErBE,CACX,CCgCA,MAAMI,EAAkBzD,IAAkJ,IAAjJ,SAAEF,EAAQ,OAAE8B,EAAM,QAAEF,GAAU,EAAI,eAAEC,EAAc,sBAAEE,GAAwB,EAAI,KAAEC,EAAO,OAAM,UAAE4B,GAAY,EAAK,QAAEzD,EAAU,OAAM,KAAEC,GAAMF,EACjK,MAAO2D,EAAiBC,IAAgBC,EAAAA,EAAAA,IAAYH,GAK9CI,GAAkB1B,EAAAA,EAAAA,UAAQ,IAAMgB,EAAatD,IAAW,CAACA,IAKzDiE,EAAcL,IAAcC,EAAkB,GAAKG,EAAgB7F,IAAIiF,GAIvEc,GAAkB3D,EAAAA,EAAAA,SAAO,GAMzB4D,GAAyB5D,EAAAA,EAAAA,QAAOyD,GAIhCI,GAAelC,EAAAA,EAAAA,IAAY,IAAM,IAAIiB,OAKpCkB,EAAgBC,IAAqBC,EAAAA,EAAAA,UAASP,IAC9CQ,EAAkBC,IAAuBF,EAAAA,EAAAA,UAASP,IACzDU,EAAAA,EAAAA,IAA0B,KACtBR,EAAgB7G,SAAU,EAC1B8G,EAAuB9G,QAAU2G,EAIjC,IAAK,IAAI3F,EAAI,EAAGA,EAAImG,EAAiB/G,OAAQY,IAAK,CAC9C,MAAM2E,EAAMI,EAAYoB,EAAiBnG,IACpC4F,EAAYU,SAAS3B,GAMtBoB,EAAaxB,OAAOI,IALU,IAA1BoB,EAAaQ,IAAI5B,IACjBoB,EAAa5B,IAAIQ,GAAK,EAMlC,IACD,CAACwB,EAAkBP,EAAYxG,OAAQwG,EAAYY,KAAK,OAC3D,MAAMC,EAAkB,GACxB,GAAId,IAAoBK,EAAgB,CACpC,IAAIU,EAAe,IAAIf,GAKvB,IAAK,IAAI3F,EAAI,EAAGA,EAAImG,EAAiB/G,OAAQY,IAAK,CAC9C,MAAMgF,EAAQmB,EAAiBnG,GACzB2E,EAAMI,EAAYC,GACnBY,EAAYU,SAAS3B,KACtB+B,EAAaC,OAAO3G,EAAG,EAAGgF,GAC1ByB,EAAgBpB,KAAKL,GAE7B,CAcA,MATa,SAATrB,GAAmB8C,EAAgBrH,SACnCsH,EAAeD,GAEnBL,EAAoBnB,EAAayB,IACjCT,EAAkBN,GAKX,IACX,CAWA,MAAM,YAAEiB,IAAgBxE,EAAAA,EAAAA,YAAWyE,EAAAA,GACnC,OAAQxD,EAAAA,EAAAA,KAAIyD,EAAAA,SAAU,CAAEnF,SAAUwE,EAAiBrG,KAAKkF,IAChD,MAAML,EAAMI,EAAYC,GAClBvE,IAAY8E,IAAcC,KAE1BG,IAAoBQ,GAClBP,EAAYU,SAAS3B,IAoB7B,OAAQtB,EAAAA,EAAAA,KAAIC,EAAe,CAAE7C,UAAWA,EAAW8C,UAAUsC,EAAgB7G,UAAWuE,SAC9ExE,EACO0E,OAAQA,EAAQC,sBAAuBA,EAAuBC,KAAMA,EAAM5B,KAAMA,EAAMyB,eAAgB/C,OAAY1B,EArBpHgI,KACX,IAAIhB,EAAaiB,IAAIrC,GAIjB,OAHAoB,EAAa5B,IAAIQ,GAAK,GAK1B,IAAIsC,GAAsB,EAC1BlB,EAAatB,SAASyC,IACbA,IACDD,GAAsB,EAAK,IAE/BA,IACW,OAAXL,QAAW,IAAXA,GAAAA,IACAR,EAAoBN,EAAuB9G,SAC3CuG,IAAyB,OAAZE,QAAY,IAAZA,GAAAA,KACbjC,GAAkBA,IACtB,EAImJ1B,QAASA,EAASH,SAAUqD,GAASL,EAAI,KAC/L,C,2DCvIb,SAASe,IAA8B,IAAlByB,IAAShI,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GAC1B,MAAM6E,GAAU5B,EAAAA,EAAAA,YAAWwC,EAAAA,GAC3B,GAAgB,OAAZZ,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEvD,EAAS,eAAE+C,EAAc,SAAEc,GAAaN,EAG1ChC,GAAKC,EAAAA,EAAAA,UACXmF,EAAAA,EAAAA,YAAU,KACN,GAAID,EACA,OAAO7C,EAAStC,EACpB,GACD,CAACmF,IACJ,MAAM1B,GAAe4B,EAAAA,EAAAA,cAAY,IAAMF,GAAa3D,GAAkBA,EAAexB,IAAK,CAACA,EAAIwB,EAAgB2D,IAC/G,OAAQ1G,GAAa+C,EAAiB,EAAC,EAAOiC,GAAgB,EAAC,EACnE,C,kCCvCA,MAAMoB,GAAqBS,E,QAAAA,eAAc,CAAC,E,kCCG1C,MAAMjF,GAAsBiF,E,QAAAA,eAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,S,kCCHnB,MAAM9C,GACU0C,E,QAAAA,eAAc,K,+ECF9B,SAASK,EAAuB9F,GAAgC,IAA/B,IAAET,EAAG,KAAEE,EAAI,MAAEE,EAAK,OAAEoG,GAAS/F,EAC1D,MAAO,CACHW,EAAG,CAAEqF,IAAKvG,EAAMwG,IAAKtG,GACrBuG,EAAG,CAAEF,IAAKzG,EAAK0G,IAAKF,GAE5B,C,cCVA,SAASI,EAAgBC,GACrB,YAAiBlJ,IAAVkJ,GAAiC,IAAVA,CAClC,CACA,SAASC,EAAQrG,GAA4B,IAA3B,MAAEoG,EAAK,OAAEE,EAAM,OAAEC,GAAQvG,EACvC,OAASmG,EAAgBC,KACpBD,EAAgBG,KAChBH,EAAgBI,EACzB,CACA,SAASC,EAAahE,GAClB,OAAQ6D,EAAS7D,IACbiE,EAAejE,IACfA,EAAOkE,GACPlE,EAAOmE,QACPnE,EAAOoE,SACPpE,EAAOqE,SACPrE,EAAOsE,OACPtE,EAAOuE,KACf,CACA,SAASN,EAAejE,GACpB,OAAOwE,EAAcxE,EAAO7B,IAAMqG,EAAcxE,EAAO0D,EAC3D,CACA,SAASc,EAAc/J,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAASgK,EAAWC,EAAOd,EAAOe,GAG9B,OAAOA,EADQf,GADYc,EAAQC,EAGvC,CAIA,SAASC,EAAgBF,EAAOG,EAAWjB,EAAOe,EAAaG,GAI3D,YAHiBpK,IAAboK,IACAJ,EAAQD,EAAWC,EAAOI,EAAUH,IAEjCF,EAAWC,EAAOd,EAAOe,GAAeE,CACnD,CAIA,SAASE,EAAeC,GAAuD,IAAjDH,EAAS/J,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAG8I,EAAK9I,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAG6J,EAAW7J,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAAEoK,EAAQhK,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EACzEsK,EAAKxB,IAAMoB,EAAgBI,EAAKxB,IAAKqB,EAAWjB,EAAOe,EAAaG,GACpEE,EAAKvB,IAAMmB,EAAgBI,EAAKvB,IAAKoB,EAAWjB,EAAOe,EAAaG,EACxE,CAIA,SAASG,EAAcC,EAAG1H,GAAY,IAAV,EAAEW,EAAC,EAAEuF,GAAGlG,EAChCuH,EAAeG,EAAI/G,EAAGA,EAAE0G,UAAW1G,EAAEyF,MAAOzF,EAAEwG,aAC9CI,EAAeG,EAAIxB,EAAGA,EAAEmB,UAAWnB,EAAEE,MAAOF,EAAEiB,YAClD,CACA,MAAMQ,EAAsB,cACtBC,EAAsB,gBA6D5B,SAASC,EAAcL,EAAMM,GACzBN,EAAKxB,IAAMwB,EAAKxB,IAAM8B,EACtBN,EAAKvB,IAAMuB,EAAKvB,IAAM6B,CAC1B,CAMA,SAASC,EAAcP,EAAMQ,EAAeC,EAAWX,GAA4B,IAAlBY,EAAU5K,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,GAG1EiK,EAAeC,EAAMQ,EAAeC,GAFhBE,EAAAA,EAAAA,GAAUX,EAAKxB,IAAKwB,EAAKvB,IAAKiC,GAEUZ,EAChE,CAIA,SAASc,EAAaV,EAAKW,GACvBN,EAAcL,EAAI/G,EAAG0H,EAAU1H,EAAG0H,EAAU/B,OAAQ+B,EAAUjC,MAAOiC,EAAUC,SAC/EP,EAAcL,EAAIxB,EAAGmC,EAAUnC,EAAGmC,EAAU9B,OAAQ8B,EAAUjC,MAAOiC,EAAUE,QACnF,CCjHA,SAASC,EAAmBC,EAAUC,GAClC,OAAO5C,EHeX,SAA4BoB,EAAOwB,GAC/B,IAAKA,EACD,OAAOxB,EACX,MAAMyB,EAAUD,EAAe,CAAE/H,EAAGuG,EAAMzH,KAAMyG,EAAGgB,EAAM3H,MACnDqJ,EAAcF,EAAe,CAAE/H,EAAGuG,EAAMvH,MAAOuG,EAAGgB,EAAMnB,SAC9D,MAAO,CACHxG,IAAKoJ,EAAQzC,EACbzG,KAAMkJ,EAAQhI,EACdoF,OAAQ6C,EAAY1C,EACpBvG,MAAOiJ,EAAYjI,EAE3B,CG1BmCkI,CAAmBJ,EAASK,wBAAyBJ,GACxF,C,yJCLA,MAAMK,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAC5B,IAAK,MAAM3G,MAAOiG,EACdU,EAAmB3G,IAAO,CACtB4G,UAAYhL,GAAUqK,EAAajG,IAAK6G,MAAMC,KAAWlL,EAAMkL,MCvBvE,MAWMC,EAAYA,KAAA,CACdlJ,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,K,cCTzC,MAAM6D,EAAuB,CAAE3M,QAAS,MAClC4M,EAA2B,CAAE5M,SAAS,GCF5C,MAAM6M,EAAqB,IAAIC,QCA/B,SAASC,EAAoBC,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEC,KACjB,CCDA,SAASC,EAAeF,GACpB,MAAoB,kBAANA,GAAkB1M,MAAM6M,QAAQH,EAClD,CCLA,MAAMI,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsB/L,GAC3B,OAAQwL,EAAoBxL,EAAMgM,UAC9BF,EAAab,MAAMC,GAASS,EAAe3L,EAAMkL,KACzD,CACA,SAASe,EAAcjM,GACnB,OAAOkM,QAAQH,EAAsB/L,IAAUA,EAAMmM,SACzD,CCVA,SAASC,EAAcC,GACnB,MAAMC,EAAQ,CAAC,CAAC,EAAG,CAAC,GAKpB,OAJa,OAAbD,QAAa,IAAbA,GAAAA,EAAevI,OAAOI,SAAQ,CAAC3F,EAAO6F,KAClCkI,EAAM,GAAGlI,GAAO7F,EAAMyH,MACtBsG,EAAM,GAAGlI,GAAO7F,EAAMgO,aAAa,IAEhCD,CACX,CACA,SAASE,EAAwBxM,EAAOyM,EAAYvJ,EAAQmJ,GAIxD,GAA0B,oBAAfI,EAA2B,CAClC,MAAOhO,EAASiO,GAAYN,EAAcC,GAC1CI,EAAaA,OAAsBjO,IAAX0E,EAAuBA,EAASlD,EAAMkD,OAAQzE,EAASiO,EACnF,CAaA,GAR0B,kBAAfD,IACPA,EAAazM,EAAMmM,UAAYnM,EAAMmM,SAASM,IAOxB,oBAAfA,EAA2B,CAClC,MAAOhO,EAASiO,GAAYN,EAAcC,GAC1CI,EAAaA,OAAsBjO,IAAX0E,EAAuBA,EAASlD,EAAMkD,OAAQzE,EAASiO,EACnF,CACA,OAAOD,CACX,C,wBCtBME,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQFC,2BAAAA,CAA4BC,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACAC,WAAAA,CAAW3L,GAA6G,IAA5G,OAAEnB,EAAM,MAAEH,EAAK,gBAAEkN,EAAe,oBAAEC,EAAmB,sBAAEC,EAAqB,YAAEC,GAAc/L,EAAEgM,EAAO1O,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKjHmB,KAAKtB,QAAU,KAIfsB,KAAKqB,SAAW,IAAImM,IAIpBxN,KAAKkM,eAAgB,EACrBlM,KAAKgM,uBAAwB,EAQ7BhM,KAAKyN,mBAAqB,KAM1BzN,KAAK+D,OAAS,IAAIS,IAClBxE,KAAK0N,iBAAmBA,EAAAA,EAIxB1N,KAAK2N,SAAW,CAAC,EAKjB3N,KAAK4N,mBAAqB,IAAIpJ,IAM9BxE,KAAK6N,iBAAmB,CAAC,EAIzB7N,KAAK8N,OAAS,CAAC,EAMf9N,KAAK+N,uBAAyB,CAAC,EAC/B/N,KAAKgO,aAAe,IAAMhO,KAAKiO,OAAO,SAAUjO,KAAKkO,cACrDlO,KAAKoB,OAAS,KACLpB,KAAKtB,UAEVsB,KAAKmO,eACLnO,KAAKoO,eAAepO,KAAKtB,QAASsB,KAAKqO,YAAarO,KAAKC,MAAMqC,MAAOtC,KAAKsO,YAAW,EAE1FtO,KAAKuO,kBAAoB,EACzBvO,KAAKwO,eAAiB,KAClB,MAAMC,EAAMC,EAAAA,EAAKD,MACbzO,KAAKuO,kBAAoBE,IACzBzO,KAAKuO,kBAAoBE,EACzBE,EAAAA,GAAMvN,OAAOpB,KAAKoB,QAAQ,GAAO,GACrC,EAEJ,MAAM,aAAE8M,EAAY,YAAEG,GAAgBf,EACtCtN,KAAKkO,aAAeA,EACpBlO,KAAK4O,YAAU1K,EAAAA,EAAAA,GAAA,GAAQgK,GACvBlO,KAAK6O,cAAgB5O,EAAMgD,SAAOiB,EAAAA,EAAAA,GAAA,GAAQgK,GAAiB,CAAC,EAC5DlO,KAAKqO,YAAcA,EACnBrO,KAAKI,OAASA,EACdJ,KAAKC,MAAQA,EACbD,KAAKmN,gBAAkBA,EACvBnN,KAAK8O,MAAQ1O,EAASA,EAAO0O,MAAQ,EAAI,EACzC9O,KAAKoN,oBAAsBA,EAC3BpN,KAAKuN,QAAUA,EACfvN,KAAKqN,sBAAwBlB,QAAQkB,GACrCrN,KAAKgM,sBAAwBA,EAAsB/L,GACnDD,KAAKkM,cAAgBA,EAAcjM,GAC/BD,KAAKkM,gBACLlM,KAAK+O,gBAAkB,IAAIvB,KAE/BxN,KAAKgP,uBAAyB7C,QAAQ/L,GAAUA,EAAO1B,SAWvD,MAAAuQ,EAA+CjP,KAAK8M,4BAA4B7M,EAAO,CAAC,EAAGD,OAArF,WAAEkP,GAAoCD,EAArBE,GAAmBC,EAAAA,EAAAA,GAAAH,EAAAI,IAC1C,IAAK,MAAMhL,KAAO8K,EAAqB,CACnC,MAAM3Q,EAAQ2Q,EAAoB9K,QACR5F,IAAtByP,EAAa7J,KAAsBiL,EAAAA,EAAAA,GAAc9Q,IACjDA,EAAMqF,IAAIqK,EAAa7J,GAE/B,CACJ,CACAkL,KAAAA,CAAMvF,GAAU,IAAAwF,EACZxP,KAAKtB,QAAUsL,EACfuB,EAAmB1H,IAAImG,EAAUhK,MAC7BA,KAAKsO,aAAetO,KAAKsO,WAAWtE,UACpChK,KAAKsO,WAAWiB,MAAMvF,GAEtBhK,KAAKI,QAAUJ,KAAKkM,gBAAkBlM,KAAKgM,wBAC3ChM,KAAKyP,sBAAwBzP,KAAKI,OAAOsP,gBAAgB1P,OAE7DA,KAAK+D,OAAOI,SAAQ,CAAC3F,EAAO6F,IAAQrE,KAAK2P,kBAAkBtL,EAAK7F,KAC3D8M,EAAyB5M,SCpJtC,WAEI,GADA4M,EAAyB5M,SAAU,EAC9BkR,EAAAA,EAEL,GAAIC,OAAOC,WAAY,CACnB,MAAMC,EAAmBF,OAAOC,WAAW,4BACrCE,EAA8BA,IAAO3E,EAAqB3M,QAAUqR,EAAiBE,QAC3FF,EAAiBG,iBAAiB,SAAUF,GAC5CA,GACJ,MAEI3E,EAAqB3M,SAAU,CAEvC,CDwIYyR,GAEJnQ,KAAKyN,mBAC4B,UAA7BzN,KAAKoN,sBAE8B,WAA7BpN,KAAKoN,qBAED/B,EAAqB3M,SAIxB,QAAX8Q,EAAAxP,KAAKI,cAAM,IAAAoP,GAAXA,EAAaY,SAASpQ,MACtBA,KAAKqQ,OAAOrQ,KAAKC,MAAOD,KAAKmN,gBACjC,CACAmD,OAAAA,GAAU,IAAAC,EACNvQ,KAAKsO,YAActO,KAAKsO,WAAWgC,WACnCE,EAAAA,EAAAA,IAAYxQ,KAAKgO,eACjBwC,EAAAA,EAAAA,IAAYxQ,KAAKoB,QACjBpB,KAAK4N,mBAAmBzJ,SAASsM,GAAWA,MAC5CzQ,KAAK4N,mBAAmB8C,QACxB1Q,KAAKyP,uBAAyBzP,KAAKyP,wBACxB,QAAXc,EAAAvQ,KAAKI,cAAM,IAAAmQ,GAAXA,EAAazN,YAAY9C,MACzB,IAAK,MAAMqE,KAAOrE,KAAK8N,OACnB9N,KAAK8N,OAAOzJ,GAAKqM,QAErB,IAAK,MAAMrM,KAAOrE,KAAK2N,SAAU,CAC7B,MAAMgD,EAAU3Q,KAAK2N,SAAStJ,GAC1BsM,IACAA,EAAQL,UACRK,EAAQC,WAAY,EAE5B,CACA5Q,KAAKtB,QAAU,IACnB,CACA0R,QAAAA,CAAS1L,GAAO,IAAAmM,EACZ7Q,KAAKqB,SAASyP,IAAIpM,GACG,QAArBmM,EAAA7Q,KAAK+Q,wBAAgB,IAAAF,IAAK7Q,KAAK+Q,iBAAmB,IAAIvD,KACtDxN,KAAK+Q,iBAAiBD,IAAIpM,EAC9B,CACA5B,WAAAA,CAAY4B,GACR1E,KAAKqB,SAAS4C,OAAOS,GACrB1E,KAAK+Q,kBAAoB/Q,KAAK+Q,iBAAiB9M,OAAOS,EAC1D,CACAiL,iBAAAA,CAAkBtL,EAAK7F,GACfwB,KAAK4N,mBAAmBlH,IAAIrC,IAC5BrE,KAAK4N,mBAAmB3H,IAAI5B,EAA5BrE,GAEJ,MAAMgR,EAAmBC,EAAAA,EAAevK,IAAIrC,GACxC2M,GAAoBhR,KAAKkR,iBACzBlR,KAAKkR,kBAET,MAAMC,EAAiB3S,EAAM4S,GAAG,UAAWC,IACvCrR,KAAKkO,aAAa7J,GAAOgN,EACzBrR,KAAKC,MAAMqR,UAAY3C,EAAAA,GAAM4C,UAAUvR,KAAKgO,cACxCgD,GAAoBhR,KAAKsO,aACzBtO,KAAKsO,WAAWkD,kBAAmB,GAEvCxR,KAAKwO,gBAAgB,IAEzB,IAAIiD,EACA5B,OAAO6B,wBACPD,EAAkB5B,OAAO6B,sBAAsB1R,KAAMqE,EAAK7F,IAE9DwB,KAAK4N,mBAAmB/J,IAAIQ,GAAK,KAC7B8M,IACIM,GACAA,IACAjT,EAAMmT,OACNnT,EAAMoT,MAAM,GAExB,CACAC,gBAAAA,CAAiBC,GAIb,OAAK9R,KAAKtB,SACLsB,KAAK+R,0BACN/R,KAAKgS,OAASF,EAAME,KAGjBhS,KAAK+R,yBAAyB/R,KAAKtB,QAASoT,EAAMpT,SAF9C,CAGf,CACAuT,cAAAA,GACI,IAAI5N,EAAM,YACV,IAAKA,KAAO2G,EAAoB,CAC5B,MAAMkH,EAAoBlH,EAAmB3G,GAC7C,IAAK6N,EACD,SACJ,MAAM,UAAEjH,EAAWkH,QAASC,GAAuBF,EAYnD,IARKlS,KAAK2N,SAAStJ,IACf+N,GACAnH,EAAUjL,KAAKC,SACfD,KAAK2N,SAAStJ,GAAO,IAAI+N,EAAmBpS,OAK5CA,KAAK2N,SAAStJ,GAAM,CACpB,MAAMsM,EAAU3Q,KAAK2N,SAAStJ,GAC1BsM,EAAQC,UACRD,EAAQN,UAGRM,EAAQpB,QACRoB,EAAQC,WAAY,EAE5B,CACJ,CACJ,CACAzC,YAAAA,GACInO,KAAKqS,MAAMrS,KAAKqO,YAAarO,KAAKkO,aAAclO,KAAKC,MACzD,CAMA8J,kBAAAA,GACI,OAAO/J,KAAKtB,QACNsB,KAAKsS,2BAA2BtS,KAAKtB,QAASsB,KAAKC,ORvQ/C,CACdiC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,GQ0QrC,CACA+K,cAAAA,CAAelO,GACX,OAAOrE,KAAKkO,aAAa7J,EAC7B,CACAmO,cAAAA,CAAenO,EAAK7F,GAChBwB,KAAKkO,aAAa7J,GAAO7F,CAC7B,CAKA6R,MAAAA,CAAOpQ,EAAOkN,IACNlN,EAAMwS,mBAAqBzS,KAAKC,MAAMwS,oBACtCzS,KAAKwO,iBAETxO,KAAKF,UAAYE,KAAKC,MACtBD,KAAKC,MAAQA,EACbD,KAAK0S,oBAAsB1S,KAAKmN,gBAChCnN,KAAKmN,gBAAkBA,EAIvB,IAAK,IAAIzN,EAAI,EAAGA,EAAIkN,GAAkB9N,OAAQY,IAAK,CAC/C,MAAM2E,EAAMuI,GAAkBlN,GAC1BM,KAAK+N,uBAAuB1J,KAC5BrE,KAAK+N,uBAAuB1J,YACrBrE,KAAK+N,uBAAuB1J,IAEvC,MACMsO,EAAW1S,EADK,KAAOoE,GAEzBsO,IACA3S,KAAK+N,uBAAuB1J,GAAOrE,KAAKoR,GAAG/M,EAAKsO,GAExD,CACA3S,KAAK6N,iBEpTb,SAAqC9N,EAAS6S,EAAMC,GAChD,IAAK,MAAMxO,KAAOuO,EAAM,CACpB,MAAME,EAAYF,EAAKvO,GACjB0O,EAAYF,EAAKxO,GACvB,IAAIiL,EAAAA,EAAAA,GAAcwD,GAKd/S,EAAQiT,SAAS3O,EAAKyO,QAErB,IAAIxD,EAAAA,EAAAA,GAAcyD,GAKnBhT,EAAQiT,SAAS3O,GAAK4O,EAAAA,EAAAA,IAAYH,EAAW,CAAEnB,MAAO5R,UAErD,GAAIgT,IAAcD,EAMnB,GAAI/S,EAAQmT,SAAS7O,GAAM,CACvB,MAAM8O,EAAgBpT,EAAQqT,SAAS/O,IACP,IAA5B8O,EAAcE,UACdF,EAAcG,KAAKR,GAEbK,EAAcI,aACpBJ,EAActP,IAAIiP,EAE1B,KACK,CACD,MAAMzB,EAActR,EAAQwS,eAAelO,GAC3CtE,EAAQiT,SAAS3O,GAAK4O,EAAAA,EAAAA,SAA4BxU,IAAhB4S,EAA4BA,EAAcyB,EAAW,CAAEnB,MAAO5R,IACpG,CAER,CAEA,IAAK,MAAMsE,KAAOwO,OACIpU,IAAdmU,EAAKvO,IACLtE,EAAQyT,YAAYnP,GAE5B,OAAOuO,CACX,CFuQgCa,CAA4BzT,KAAMA,KAAK8M,4BAA4B7M,EAAOD,KAAKF,UAAWE,MAAOA,KAAK6N,kBAC1H7N,KAAK0T,wBACL1T,KAAK0T,wBAEb,CACAC,QAAAA,GACI,OAAO3T,KAAKC,KAChB,CAIA2T,UAAAA,CAAWzI,GACP,OAAOnL,KAAKC,MAAMmM,SAAWpM,KAAKC,MAAMmM,SAASjB,QAAQ1M,CAC7D,CAIAoV,oBAAAA,GACI,OAAO7T,KAAKC,MAAM6T,UACtB,CACAC,qBAAAA,GACI,OAAO/T,KAAKC,MAAMgH,kBACtB,CACA+M,qBAAAA,GACI,OAAOhU,KAAKkM,cACNlM,KACAA,KAAKI,OACDJ,KAAKI,OAAO4T,6BACZvV,CACd,CAIAiR,eAAAA,CAAgBhL,GACZ,MAAMuP,EAAqBjU,KAAKgU,wBAChC,GAAIC,EAGA,OAFAA,EAAmBlF,iBACfkF,EAAmBlF,gBAAgB+B,IAAIpM,GACpC,IAAMuP,EAAmBlF,gBAAgB9K,OAAOS,EAE/D,CAIAsO,QAAAA,CAAS3O,EAAK7F,GAEV,MAAM2U,EAAgBnT,KAAK+D,OAAOkC,IAAI5B,GAClC7F,IAAU2U,IACNA,GACAnT,KAAKwT,YAAYnP,GACrBrE,KAAK2P,kBAAkBtL,EAAK7F,GAC5BwB,KAAK+D,OAAOF,IAAIQ,EAAK7F,GACrBwB,KAAKkO,aAAa7J,GAAO7F,EAAMyH,MAEvC,CAIAuN,WAAAA,CAAYnP,GACRrE,KAAK+D,OAAOE,OAAOI,GACnB,MAAM6P,EAAclU,KAAK4N,mBAAmB3H,IAAI5B,GAC5C6P,IACAA,IACAlU,KAAK4N,mBAAmB3J,OAAOI,WAE5BrE,KAAKkO,aAAa7J,GACzBrE,KAAKmU,2BAA2B9P,EAAKrE,KAAKqO,YAC9C,CAIA6E,QAAAA,CAAS7O,GACL,OAAOrE,KAAK+D,OAAO2C,IAAIrC,EAC3B,CACA+O,QAAAA,CAAS/O,EAAK+P,GACV,GAAIpU,KAAKC,MAAM8D,QAAU/D,KAAKC,MAAM8D,OAAOM,GACvC,OAAOrE,KAAKC,MAAM8D,OAAOM,GAE7B,IAAI7F,EAAQwB,KAAK+D,OAAOkC,IAAI5B,GAK5B,YAJc5F,IAAVD,QAAwCC,IAAjB2V,IACvB5V,GAAQyU,EAAAA,EAAAA,IAA6B,OAAjBmB,OAAwB3V,EAAY2V,EAAc,CAAEzC,MAAO3R,OAC/EA,KAAKgT,SAAS3O,EAAK7F,IAEhBA,CACX,CAMA6V,SAAAA,CAAUhQ,EAAKiQ,GAAQ,IAAAC,EACnB,IAAI/V,OAAmCC,IAA3BuB,KAAKkO,aAAa7J,IAAuBrE,KAAKtB,QAER,QADtB6V,EACtBvU,KAAKwU,uBAAuBxU,KAAKC,MAAOoE,UAAI,IAAAkQ,EAAAA,EAC1CvU,KAAKyU,sBAAsBzU,KAAKtB,QAAS2F,EAAKrE,KAAKuN,SAFrDvN,KAAKkO,aAAa7J,GAcxB,YAXc5F,IAAVD,GAAiC,OAAVA,IACF,kBAAVA,KACNkW,EAAAA,EAAAA,GAAkBlW,KAAUmW,EAAAA,EAAAA,GAAkBnW,IAE/CA,EAAQoW,WAAWpW,KAEbqW,EAAAA,EAAAA,GAAcrW,IAAUsW,EAAAA,EAAQC,KAAKT,KAC3C9V,GAAQwW,EAAAA,EAAAA,GAAkB3Q,EAAKiQ,IAEnCtU,KAAKiV,cAAc5Q,GAAKiL,EAAAA,EAAAA,GAAc9Q,GAASA,EAAMyH,MAAQzH,KAE1D8Q,EAAAA,EAAAA,GAAc9Q,GAASA,EAAMyH,MAAQzH,CAChD,CAKAyW,aAAAA,CAAc5Q,EAAK7F,GACfwB,KAAK4O,WAAWvK,GAAO7F,CAC3B,CAKA0W,aAAAA,CAAc7Q,GACV,MAAM,QAAEpB,GAAYjD,KAAKC,MACzB,IAAIkV,EACJ,GAAuB,kBAAZlS,GAA2C,kBAAZA,EAAsB,KAAAmS,EAC5D,MAAMC,EAAU5I,EAAwBzM,KAAKC,MAAOgD,EAA6B,QAAtBmS,EAAEpV,KAAKmN,uBAAe,IAAAiI,OAAA,EAApBA,EAAsBjS,QAC/EkS,IACAF,EAAmBE,EAAQhR,GAEnC,CAIA,GAAIpB,QAAgCxE,IAArB0W,EACX,OAAOA,EAMX,MAAMb,EAAStU,KAAKwU,uBAAuBxU,KAAKC,MAAOoE,GACvD,YAAe5F,IAAX6V,IAAyBhF,EAAAA,EAAAA,GAAcgF,QAMR7V,IAA5BuB,KAAK6O,cAAcxK,SACD5F,IAArB0W,OACE1W,EACAuB,KAAK4O,WAAWvK,GARXiQ,CASf,CACAlD,EAAAA,CAAGkE,EAAWC,GAIV,OAHKvV,KAAK8N,OAAOwH,KACbtV,KAAK8N,OAAOwH,GAAa,IAAIE,EAAAA,GAE1BxV,KAAK8N,OAAOwH,GAAWxE,IAAIyE,EACtC,CACAtH,MAAAA,CAAOqH,GACH,GAAItV,KAAK8N,OAAOwH,GAAY,SAAAnW,EAAAN,UAAAC,OADX2W,EAAI,IAAAzW,MAAAG,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJqW,EAAIrW,EAAA,GAAAP,UAAAO,GAEjBY,KAAK8N,OAAOwH,GAAWrH,UAAUwH,EACrC,CACJ,CACAC,uBAAAA,GACIC,EAAAA,EAAUvU,OAAOpB,KAAKoB,OAC1B,EGtdJ,MAAMwU,WAAyB/I,GAC3BK,WAAAA,GACI2I,SAAShX,WACTmB,KAAK0N,iBAAmBoI,EAAAA,CAC5B,CACA/D,wBAAAA,CAAyBgE,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEE,wBAAwBD,GAAS,GAAK,CACnD,CACAxB,sBAAAA,CAAuBvU,EAAOoE,GAC1B,OAAOpE,EAAMqC,MACPrC,EAAMqC,MAAM+B,QACZ5F,CACV,CACA0V,0BAAAA,CAA2B9P,EAAG9C,GAAmB,IAAjB,KAAE2U,EAAI,MAAE5T,GAAOf,SACpC2U,EAAK7R,UACL/B,EAAM+B,EACjB,CACAqP,sBAAAA,GACQ1T,KAAKmW,oBACLnW,KAAKmW,2BACEnW,KAAKmW,mBAEhB,MAAM,SAAE9U,GAAarB,KAAKC,OACtBqP,EAAAA,EAAAA,GAAcjO,KACdrB,KAAKmW,kBAAoB9U,EAAS+P,GAAG,UAAWgF,IACxCpW,KAAKtB,UACLsB,KAAKtB,QAAQ2X,YAAc,GAAHlU,OAAMiU,GAClC,IAGZ,E,yBCpCJ,MAAME,GAAiB,CACnBpU,EAAG,aACHuF,EAAG,aACHQ,EAAG,aACHsO,qBAAsB,eAEpBC,GAAgBC,EAAAA,EAAmB3X,OCLzC,SAAS4X,GAAgBnK,EAAO2B,EAAcuE,GAC1C,MAAM,MAAEnQ,EAAK,KAAE4T,EAAI,gBAAES,GAAoBpK,EAEzC,IAAIxE,GAAe,EACf6O,GAAqB,EAOzB,IAAK,MAAMvS,KAAO6J,EAAc,CAC5B,MAAM1P,EAAQ0P,EAAa7J,GAC3B,GAAI4M,EAAAA,EAAevK,IAAIrC,GAEnB0D,GAAe,OAGd,IAAI8O,EAAAA,EAAAA,GAAkBxS,GACvB6R,EAAK7R,GAAO7F,MAGX,CAED,MAAMsY,GAAcC,EAAAA,GAAAA,GAAevY,EAAOwY,GAAAA,EAAiB3S,IACvDA,EAAI4S,WAAW,WAEfL,GAAqB,EACrBD,EAAgBtS,GACZyS,GAGJxU,EAAM+B,GAAOyS,CAErB,CACJ,CAiBA,GAhBK5I,EAAatE,YACV7B,GAAgB0K,EAChBnQ,EAAMsH,UD1BlB,SAAwBsE,EAActE,EAAW6I,GAE7C,IAAIyE,EAAkB,GAClBC,GAAqB,EAKzB,IAAK,IAAIzX,EAAI,EAAGA,EAAI8W,GAAe9W,IAAK,CACpC,MAAM2E,EAAMoS,EAAAA,EAAmB/W,GACzBlB,EAAQ0P,EAAa7J,GAC3B,QAAc5F,IAAVD,EACA,SACJ,IAAI4Y,GAAiB,EAOrB,GALIA,EADiB,kBAAV5Y,EACUA,KAAW6F,EAAI4S,WAAW,SAAW,EAAI,GAGnB,IAAtBrC,WAAWpW,IAE3B4Y,GAAkB3E,EAAmB,CACtC,MAAMqE,GAAcC,EAAAA,GAAAA,GAAevY,EAAOwY,GAAAA,EAAiB3S,IACtD+S,IACDD,GAAqB,EAErBD,GAAmB,GAAJ/U,OADOmU,GAAejS,IAAQA,EACV,KAAAlC,OAAI2U,EAAW,OAElDrE,IACA7I,EAAUvF,GAAOyS,EAEzB,CACJ,CAUA,OATAI,EAAkBA,EAAgBG,OAG9B5E,EACAyE,EAAkBzE,EAAkB7I,EAAWuN,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CChB8BI,CAAepJ,EAAc3B,EAAM3C,UAAW6I,GAE3DnQ,EAAMsH,YAKXtH,EAAMsH,UAAY,SAOtBgN,EAAoB,CACpB,MAAM,QAAE/M,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEyN,EAAU,GAAOZ,EAC3DrU,EAAMqU,gBAAkB,GAAHxU,OAAM0H,EAAO,KAAA1H,OAAI2H,EAAO,KAAA3H,OAAIoV,EACrD,CACJ,CC3DA,SAASC,GAAWzX,EAAOwB,EAAmBkW,EAAWnJ,GAAY,IAAxC,MAAEhM,EAAK,KAAE4T,GAAM3U,EACxC,MAAMmW,EAAe3X,EAAQuC,MAC7B,IAAI+B,EACJ,IAAKA,KAAO/B,EAERoV,EAAarT,GAAO/B,EAAM+B,GAI9B,IAAKA,KADK,OAAViK,QAAU,IAAVA,GAAAA,EAAYqJ,sBAAsBD,EAAcD,GACpCvB,EAGRwB,EAAaE,YAAYvT,EAAK6R,EAAK7R,GAE3C,CCZA,MAAMwT,GAAkB,CAAC,ECCzB,SAASC,GAAoBzT,EAAG9C,GAAwB,IAAtB,OAAEwJ,EAAM,SAAEgN,GAAUxW,EAClD,OAAQ0P,EAAAA,EAAevK,IAAIrC,IACvBA,EAAI4S,WAAW,YACblM,QAAuBtM,IAAbsZ,OACLF,GAAgBxT,IAAgB,YAARA,EACvC,CCLA,SAASyI,GAA4B7M,EAAOH,EAAWwM,GACnD,MAAM,MAAEhK,GAAUrC,EACZ+X,EAAY,CAAC,EACnB,IAAK,MAAM3T,KAAO/B,EAAO,KAAA2V,IACjB3I,EAAAA,EAAAA,GAAchN,EAAM+B,KACnBvE,EAAUwC,QACPgN,EAAAA,EAAAA,GAAcxP,EAAUwC,MAAM+B,KAClCyT,GAAoBzT,EAAKpE,SACmBxB,KAA/B,OAAb6N,QAAa,IAAbA,GAA4B,QAAf2L,EAAb3L,EAAe8G,SAAS/O,UAAI,IAAA4T,OAAA,EAA5BA,EAA8B5E,cAC9B2E,EAAU3T,GAAO/B,EAAM+B,GAE/B,CACA,OAAO2T,CACX,CCNA,MAAME,WAA0BtC,GAC5B1I,WAAAA,GACI2I,SAAShX,WACTmB,KAAKgS,KAAO,OACZhS,KAAKoO,eAAiBoJ,EAC1B,CACA/C,qBAAAA,CAAsBzK,EAAU3F,GACC,IAAA8T,EAVXpY,EAUlB,GAAIkR,EAAAA,EAAevK,IAAIrC,GACnB,OAAsB,QAAf8T,EAAAnY,KAAKsO,kBAAU,IAAA6J,GAAfA,EAAiBC,cAClBC,EAAAA,EAAAA,IAAsBhU,IACtBiU,EAAAA,EAAAA,IAAmBtO,EAAU3F,GAElC,CACD,MAAMkU,GAhBQxY,EAgByBiK,EAfxC6F,OAAO2I,iBAAiBzY,IAgBjBvB,IAASqY,EAAAA,EAAAA,GAAkBxS,GAC3BkU,EAAcE,iBAAiBpU,GAC/BkU,EAAclU,KAAS,EAC7B,MAAwB,kBAAV7F,EAAqBA,EAAM6Y,OAAS7Y,CACtD,CACJ,CACA8T,0BAAAA,CAA2BtI,EAAQzI,GAA0B,IAAxB,mBAAE0F,GAAoB1F,EACvD,OAAOwI,EAAmBC,EAAU/C,EACxC,CACAoL,KAAAA,CAAMhE,EAAaH,EAAcjO,GAC7ByW,GAAgBrI,EAAaH,EAAcjO,EAAMwS,kBACrD,CACA3F,2BAAAA,CAA4B7M,EAAOH,EAAWwM,GAC1C,OAAOQ,GAA4B7M,EAAOH,EAAWwM,EACzD,E,eCnCJ,MAAMoM,GAAeC,GAAQA,EAAIC,QAAQ,kBAAoB,SAASC,c,eCDtE,MAAMC,GAAW,CACbC,OAAQ,oBACRC,MAAO,oBAELC,GAAY,CACdF,OAAQ,mBACRC,MAAO,mB,+ECFX,SAASE,GAAc3M,EAAKhL,EAEf4X,EAAU1G,EAAmBgF,GAAW,IAFvB,MAAE2B,EAAK,MAAEC,EAAK,UAAEC,EAAS,WAAEC,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,GAExFlY,EAMP,GALAmV,GAAgBnK,GADX6C,EAAAA,EAAAA,GAAA7N,EAAA8N,IAC0BoD,GAK3B0G,EAIA,YAHI5M,EAAMjK,MAAMoX,UACZnN,EAAMoN,MAAMD,QAAUnN,EAAMjK,MAAMoX,UAI1CnN,EAAMoN,MAAQpN,EAAMjK,MACpBiK,EAAMjK,MAAQ,CAAC,EACf,MAAM,MAAEqX,EAAK,MAAErX,GAAUiK,EASqB,IAAAqN,EAIzBC,GARjBF,EAAM/P,YACNtH,EAAMsH,UAAY+P,EAAM/P,iBACjB+P,EAAM/P,WAEbtH,EAAMsH,WAAa+P,EAAMhD,mBACzBrU,EAAMqU,gBAAuC,QAAxBiD,EAAGD,EAAMhD,uBAAe,IAAAiD,EAAAA,EAAI,iBAC1CD,EAAMhD,iBAEbrU,EAAMsH,YAKNtH,EAAMqH,aAAsC,QAA1BkQ,EAAY,OAATpC,QAAS,IAATA,OAAS,EAATA,EAAW9N,oBAAY,IAAAkQ,EAAAA,EAAI,kBACzCF,EAAMhQ,mBAGHlL,IAAV2a,IACAO,EAAMzX,EAAIkX,QACA3a,IAAV4a,IACAM,EAAMlS,EAAI4R,QACI5a,IAAd6a,IACAK,EAAMhS,MAAQ2R,QAEC7a,IAAf8a,GDlCR,SAAsBI,EAAO7a,GAAqD,IAA7Cgb,EAAOjb,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAGka,EAAMla,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAGkb,IAAWlb,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GAErE8a,EAAMJ,WAAa,EAGnB,MAAMS,EAAOD,EAAcjB,GAAWG,GAEtCU,EAAMK,EAAKjB,QAAUkB,GAAAA,GAAGrQ,WAAWmP,GAEnC,MAAMQ,EAAaU,GAAAA,GAAGrQ,UAAU9K,GAC1B0a,EAAcS,GAAAA,GAAGrQ,UAAUkQ,GACjCH,EAAMK,EAAKhB,OAAS,GAAH7W,OAAMoX,EAAU,KAAApX,OAAIqX,EACzC,CCuBQU,CAAaP,EAAOJ,EAAYC,EAAaC,GAAY,EAEjE,CCnDA,MAAMU,GAAsB,IAAI3M,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBC1BE2L,GAAYiB,GAAuB,kBAARA,GAA0C,QAAtBA,EAAIvB,cCGzD,SAAS/L,GAA4B7M,EAAOH,EAAWwM,GACnD,MAAM0L,EAAYqC,GAA8Bpa,EAAOH,EAAWwM,GAClE,IAAK,MAAMjI,KAAOpE,EACd,IAAIqP,EAAAA,EAAAA,GAAcrP,EAAMoE,MACpBiL,EAAAA,EAAAA,GAAcxP,EAAUuE,IAAO,CAI/B2T,GAHuD,IAArCvB,EAAAA,EAAmB6D,QAAQjW,GACvC,OAASA,EAAIkW,OAAO,GAAGC,cAAgBnW,EAAIoW,UAAU,GACrDpW,GACiBpE,EAAMoE,EACjC,CAEJ,OAAO2T,CACX,CCLA,MAAM0C,WAAyB9E,GAC3B1I,WAAAA,GACI2I,SAAShX,WACTmB,KAAKgS,KAAO,MACZhS,KAAKmZ,UAAW,EAChBnZ,KAAKsS,2BAA6BlH,CACtC,CACAoJ,sBAAAA,CAAuBvU,EAAOoE,GAC1B,OAAOpE,EAAMoE,EACjB,CACAoQ,qBAAAA,CAAsBzK,EAAU3F,GAC5B,GAAI4M,EAAAA,EAAevK,IAAIrC,GAAM,CACzB,MAAMsW,GAAcC,EAAAA,GAAAA,GAAoBvW,GACxC,OAAOsW,GAAcA,EAAYE,SAAe,CACpD,CAEA,OADAxW,EAAO8V,GAAoBzT,IAAIrC,GAA0BA,EAAnBqU,GAAYrU,GAC3C2F,EAAS8Q,aAAazW,EACjC,CACAyI,2BAAAA,CAA4B7M,EAAOH,EAAWwM,GAC1C,OAAOQ,GAA4B7M,EAAOH,EAAWwM,EACzD,CACA+F,KAAAA,CAAMhE,EAAaH,EAAcjO,GAC7BiZ,GAAc7K,EAAaH,EAAclO,KAAKmZ,SAAUlZ,EAAMwS,kBAAmBxS,EAAMqC,MAC3F,CACA8L,cAAAA,CAAepE,EAAUqE,EAAaoJ,EAAWnJ,IC9BrD,SAAmBvO,EAASsO,EAAa0M,EAAYzM,GACjDkJ,GAAWzX,EAASsO,OAAa5P,EAAW6P,GAC5C,IAAK,MAAMjK,KAAOgK,EAAYsL,MAC1B5Z,EAAQib,aAAcb,GAAoBzT,IAAIrC,GAA0BA,EAAnBqU,GAAYrU,GAAYgK,EAAYsL,MAAMtV,GAEvG,CD0BQ4W,CAAUjR,EAAUqE,EAAaoJ,EAAWnJ,EAChD,CACAiB,KAAAA,CAAMvF,GACFhK,KAAKmZ,SAAWA,GAASnP,EAASkR,SAClCrF,MAAMtG,MAAMvF,EAChB,EEpCJ,MAAMmR,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,GAAeC,GACpB,MAKqB,kBAAdA,IAIHA,EAAUrV,SAAS,SAOvBmV,GAAqBb,QAAQe,IAAc,GAIvC,QAAStG,KAAKsG,GAItB,CCtBA,MAAMC,GAAyBA,CAACD,EAAW9N,IAChC6N,GAAeC,GAChB,IAAIX,GAAiBnN,GACrB,IAAI2K,GAAkB3K,EAAS,CAC7BgO,gBAAiBF,IAAc7U,EAAAA,W,yBCN3C,MAAMgV,IAAcxU,EAAAA,EAAAA,eAAc,CAAEyU,QAAQ,I,eCA5C,MAAMC,IAAgC1U,EAAAA,EAAAA,eAAc,CAAC,GCErD,SAAS2U,GAAuB1b,GAC5B,MAAM,QAAEgD,EAAO,QAAEgJ,GCHrB,SAAgChM,EAAOyD,GACnC,GAAIsI,EAAsB/L,GAAQ,CAC9B,MAAM,QAAEgD,EAAO,QAAEgJ,GAAYhM,EAC7B,MAAO,CACHgD,SAAqB,IAAZA,GAAqB2I,EAAe3I,GACvCA,OACAxE,EACNwN,QAASL,EAAeK,GAAWA,OAAUxN,EAErD,CACA,OAAyB,IAAlBwB,EAAM2b,QAAoBlY,EAAU,CAAC,CAChD,CDRiCmY,CAAuB5b,GAAO6B,EAAAA,EAAAA,YAAW4Z,KACtE,OAAO/X,EAAAA,EAAAA,UAAQ,KAAM,CAAGV,UAASgJ,aAAY,CAAC6P,GAA0B7Y,GAAU6Y,GAA0B7P,IAChH,CACA,SAAS6P,GAA0BC,GAC/B,OAAO/c,MAAM6M,QAAQkQ,GAAQA,EAAK7V,KAAK,KAAO6V,CAClD,CEXA,MAAMC,GAAwBA,KAAA,CAC1B1Z,MAAO,CAAC,EACRsH,UAAW,CAAC,EACZ+M,gBAAiB,CAAC,EAClBT,KAAM,CAAC,ICGX,SAAS+F,GAAkB3H,EAAQ4H,EAAQjc,GACvC,IAAK,MAAMoE,KAAO6X,GACT5M,EAAAA,EAAAA,GAAc4M,EAAO7X,KAAUyT,GAAoBzT,EAAKpE,KACzDqU,EAAOjQ,GAAO6X,EAAO7X,GAGjC,CAQA,SAAS8X,GAASlc,EAAOqN,GACrB,MACMhL,EAAQ,CAAC,EAMf,OAFA2Z,GAAkB3Z,EALArC,EAAMqC,OAAS,CAAC,EAKErC,GACpCmc,OAAOC,OAAO/Z,EAdlB,SAA+Bf,EAAwB+L,GAAa,IAApC,kBAAEmF,GAAmBlR,EACjD,OAAOoC,EAAAA,EAAAA,UAAQ,KACX,MAAM4I,EDhBgB,CAC1BjK,MAAO,CAAC,EACRsH,UAAW,CAAC,EACZ+M,gBAAiB,CAAC,EAClBT,KAAM,CAAC,GCcH,OADAQ,GAAgBnK,EAAOe,EAAamF,GAC7B2J,OAAOC,OAAO,CAAC,EAAG9P,EAAM2J,KAAM3J,EAAMjK,MAAM,GAClD,CAACgL,GACR,CAQyBgP,CAAuBrc,EAAOqN,IAC5ChL,CACX,CACA,SAASia,GAAatc,EAAOqN,GAEzB,MAAMkP,EAAY,CAAC,EACbla,EAAQ6Z,GAASlc,EAAOqN,GAoB9B,OAnBIrN,EAAMwK,OAA+B,IAAvBxK,EAAMwc,eAEpBD,EAAUE,WAAY,EAEtBpa,EAAMqa,WACFra,EAAMsa,iBACFta,EAAMua,mBACF,OAEZva,EAAMwa,aACa,IAAf7c,EAAMwK,KACA,OAAM,OAAAtI,OACgB,MAAflC,EAAMwK,KAAe,IAAM,WAEzBhM,IAAnBwB,EAAM8c,WACL9c,EAAM+c,OAAS/c,EAAMgd,YAAchd,EAAMid,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUla,MAAQA,EACXka,CACX,CCrDA,MAAMW,GAAuBA,KAAAjZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EFFC,CAC1B5B,MAAO,CAAC,EACRsH,UAAW,CAAC,EACZ+M,gBAAiB,CAAC,EAClBT,KAAM,CAAC,IEDmB,IAC1ByD,MAAO,CAAC,ICGZ,SAASyD,GAAYnd,EAAOqN,EAAa+P,EAAWhC,GAChD,MAAMiC,GAAc3Z,EAAAA,EAAAA,UAAQ,KACxB,MAAM4I,EAAQ4Q,KAEd,OADAjE,GAAc3M,EAAOe,EAAa6L,GAASkC,GAAYpb,EAAMwS,kBAAmBxS,EAAMqC,QACtF4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOqI,EAAMoN,OAAK,IACdrX,OAAK4B,EAAAA,EAAAA,GAAA,GAAOqI,EAAMjK,QAAO,GAE9B,CAACgL,IACJ,GAAIrN,EAAMqC,MAAO,CACb,MAAMib,EAAY,CAAC,EACnBtB,GAAkBsB,EAAWtd,EAAMqC,MAAOrC,GAC1Cqd,EAAYhb,OAAK4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQqZ,GAAcD,EAAYhb,MACvD,CACA,OAAOgb,CACX,CChBA,MAAME,GAAmB,IAAIhQ,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASiQ,GAAkBpZ,GACvB,OAAQA,EAAI4S,WAAW,UAClB5S,EAAI4S,WAAW,SAAmB,cAAR5S,GAC3BA,EAAI4S,WAAW,WACf5S,EAAI4S,WAAW,UACf5S,EAAI4S,WAAW,UACf5S,EAAI4S,WAAW,aACfuG,GAAiB9W,IAAIrC,EAC7B,CCpDA,IAAIqZ,GAAiBrZ,IAASoZ,GAAkBpZ,GAoBhD,IAlB+B,oBADEsZ,GAyBLC,QAAQ,0BAA0B/C,WArB1D6C,GAAiBrZ,GAAQA,EAAI4S,WAAW,OAASwG,GAAkBpZ,GAAOsZ,GAAYtZ,GAsB1F,CACA,MAAAwZ,IACI,CA5BJ,IAAiCF,GCKjC,SAASG,GAAUzC,EAAWpb,EAAO1B,EAAGgD,EAAqB4F,GAAsC,IAAzD,aAAE+G,GAAe3M,EAAYwc,EAAkBlf,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GACrF,MAGMye,GAHiBlC,GAAeC,GAChC+B,GACAb,IAC6Btc,EAAOiO,EAAc/G,EAAUkU,GAC5D2C,EDoBV,SAAqB/d,EAAOge,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAM3Z,KAAOpE,EAQF,WAARoE,GAA4C,kBAAjBpE,EAAM8D,SAEjC2Z,GAAcrZ,KACU,IAAvB0Z,GAA+BN,GAAkBpZ,KAChD4Z,IAAUR,GAAkBpZ,IAE7BpE,EAAiB,WACdoE,EAAI4S,WAAW,aACnB+G,EAAc3Z,GACVpE,EAAMoE,IAGlB,OAAO2Z,CACX,CC3C0BE,CAAYje,EAA4B,kBAAdob,EAAwB0C,GAClEI,EAAe9C,IAAc7U,EAAAA,UAAQtC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ8Z,GAAkBV,GAAW,IAAE/e,QAAQ,CAAC,GAMrF,SAAE8C,GAAapB,EACf4F,GAAmBlC,EAAAA,EAAAA,UAAQ,KAAO2L,EAAAA,EAAAA,GAAcjO,GAAYA,EAAS4E,MAAQ5E,GAAW,CAACA,IAC/F,OAAOmB,EAAAA,EAAAA,eAAc6Y,GAASnX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBia,GAAY,IACf9c,SAAUwE,IAElB,C,0BCnBA,SAASuY,GAAmB5f,GACxB,OAAO8Q,EAAAA,EAAAA,GAAc9Q,GAASA,EAAMyH,MAAQzH,CAChD,CCTa,MAAA6Q,GAAA,+BAiBb,SAASgP,GAAiBpe,EAAOyD,EAASyJ,EAAiBmR,GACvD,MAAMva,EAAS,CAAC,EACVwa,EAAeD,EAAmBre,EAAO,CAAC,GAChD,IAAK,MAAMoE,KAAOka,EACdxa,EAAOM,GAAO+Z,GAAmBG,EAAala,IAElD,IAAI,QAAEpB,EAAO,QAAEgJ,GAAYhM,EAC3B,MAAMue,EAA0BxS,EAAsB/L,GAChDwe,EAAkBvS,EAAcjM,GAClCyD,GACA+a,IACCD,IACiB,IAAlBve,EAAM2b,eACUnd,IAAZwE,IACAA,EAAUS,EAAQT,cACNxE,IAAZwN,IACAA,EAAUvI,EAAQuI,UAE1B,IAAIyS,IAA4BvR,IACE,IAA5BA,EAAgBlK,QAEtByb,EAA4BA,IAAyC,IAAZzb,EACzD,MAAM0b,EAAeD,EAA4BzS,EAAUhJ,EAC3D,GAAI0b,GACwB,mBAAjBA,IACNlT,EAAoBkT,GAAe,CACpC,MAAMC,EAAO5f,MAAM6M,QAAQ8S,GAAgBA,EAAe,CAACA,GAC3D,IAAK,IAAIjf,EAAI,EAAGA,EAAIkf,EAAK9f,OAAQY,IAAK,CAClC,MAAMmf,EAAWpS,EAAwBxM,EAAO2e,EAAKlf,IACrD,GAAImf,EAAU,CACV,MAAM,cAAEC,EAAa,WAAEhL,GAA0B+K,EAAXvK,GAAMlF,EAAAA,EAAAA,GAAKyP,EAAQxP,IACzD,IAAK,MAAMhL,KAAOiQ,EAAQ,CACtB,IAAIyK,EAAczK,EAAOjQ,GACzB,GAAIrF,MAAM6M,QAAQkT,GAAc,CAQ5BA,EAAcA,EAHAL,EACRK,EAAYjgB,OAAS,EACrB,EAEV,CACoB,OAAhBigB,IACAhb,EAAOM,GAAO0a,EAEtB,CACA,IAAK,MAAM1a,KAAOya,EACd/a,EAAOM,GAAOya,EAAcza,EAEpC,CACJ,CACJ,CACA,OAAON,CACX,CACA,MAAMib,GAAsBC,GAAW,CAAChf,EAAOkH,KAC3C,MAAMzD,GAAU5B,EAAAA,EAAAA,YAAW4Z,IACrBvO,GAAkBrL,EAAAA,EAAAA,YAAWwC,GAAAA,GAC7B4a,EAAOA,IAjEjB,SAAkB3d,EAAsDtB,EAAOyD,EAASyJ,GAAiB,IAAtF,4BAAEL,EAA2B,kBAAEqS,GAAoB5d,EAKlE,MAJc,CACV2M,aAAcmQ,GAAiBpe,EAAOyD,EAASyJ,EAAiBL,GAChEuB,YAAa8Q,IAGrB,CA2DuBC,CAAUH,EAAQhf,EAAOyD,EAASyJ,GACrD,OAAOhG,EAAW+X,KAAS3b,EAAAA,GAAAA,GAAY2b,EAAK,ECvE1CG,GAAmCL,GAAmB,CACxDlS,4BAA2B,GAC3BqS,kBAAmBnD,KCFjBsD,GAAkCN,GAAmB,CACvDlS,4BAA6BA,GAC7BqS,kBAAmBhC,KCPvB,MAAMoC,GAAwBC,OAAOC,IAAI,yBCAzC,SAASC,GAAYnhB,GACjB,OAAQA,GACW,kBAARA,GACP6d,OAAOuD,UAAUC,eAAeC,KAAKthB,EAAK,UAClD,CCIA,SAASuhB,GAAaxS,EAAahB,EAAeyT,GAC9C,OAAOhZ,EAAAA,EAAAA,cAAaiD,IACZA,GACAsD,EAAY0S,SAAW1S,EAAY0S,QAAQhW,GAE3CsC,IACItC,EACAsC,EAAciD,MAAMvF,GAGpBsC,EAAcgE,WAGlByP,IAC2B,oBAAhBA,EACPA,EAAY/V,GAEP0V,GAAYK,KACjBA,EAAYrhB,QAAUsL,GAE9B,GAMJ,CAACsC,GACL,CCjCA,MACM2T,GAA+B,QAAUvH,GADjB,kBCIxBwH,IAA2BlZ,EAAAA,EAAAA,eAAc,CAAC,G,cCKhD,SAASmZ,GAAiB9E,EAAW/N,EAAarN,EAAOmgB,EAAqBC,GAA2B,IAAAC,EAAAC,EAAAC,EAAAC,EACrG,MAAQnU,cAAelM,IAAW0B,EAAAA,EAAAA,YAAW4Z,IACvCgF,GAAc5e,EAAAA,EAAAA,YAAW0Z,IACzBrO,GAAkBrL,EAAAA,EAAAA,YAAWwC,GAAAA,GAC7B8I,GAAsBtL,EAAAA,EAAAA,YAAWC,GAAAA,GAAqBqF,cACtDuZ,GAAmB/e,EAAAA,EAAAA,QAAO,MAIhCwe,EACIA,GACIM,EAAYE,UACfD,EAAiBjiB,SAAW0hB,IAC7BO,EAAiBjiB,QAAU0hB,EAAoB/E,EAAW,CACtD/N,cACAlN,SACAH,QACAkN,kBACAE,wBAAuBF,IACW,IAA5BA,EAAgBlK,QAEtBmK,yBAGR,MAAMd,EAAgBqU,EAAiBjiB,QAKjCmiB,GAA2B/e,EAAAA,EAAAA,YAAWoe,KACxC5T,GACCA,EAAcgC,aACf+R,GACwB,SAAvB/T,EAAc0F,MAA0C,QAAvB1F,EAAc0F,MA+DxD,SAA8B1F,EAAerM,EAAOogB,EAA2BS,GAC3E,MAAM,SAAE/I,EAAQ,OAAEhN,EAAM,KAAEN,EAAI,gBAAEsW,EAAe,aAAEC,EAAY,WAAEC,EAAU,gBAAEC,GAAqBjhB,EAChGqM,EAAcgC,WAAa,IAAI+R,EAA0B/T,EAAc4B,aAAcjO,EAAM,8BACrFxB,EACA0iB,GAAyB7U,EAAclM,SAC7CkM,EAAcgC,WAAW8S,WAAW,CAChCrJ,WACAhN,SACAsW,oBAAqBlV,QAAQ1B,IAAUsW,GAAmBrB,GAAYqB,GACtEzU,gBAQAgV,cAAiC,kBAAXvW,EAAsBA,EAAS,OACrD+V,yBACAS,UAAWL,EACXF,eACAC,cAER,CArFQO,CAAqBb,EAAiBjiB,QAASuB,EAAOogB,EAA2BQ,GAErF,MAAMjQ,GAAYhP,EAAAA,EAAAA,SAAO,IACzBK,EAAAA,EAAAA,qBAAmB,KAKXqK,GAAiBsE,EAAUlS,SAC3B4N,EAAc+D,OAAOpQ,EAAOkN,EAChC,IAMJ,MAAMsU,EAAoBxhB,EAAMggB,IAC1ByB,GAAe9f,EAAAA,EAAAA,QAAOuK,QAAQsV,MACD,QAA/BnB,GAACC,EAAA1Q,QAAO8R,+BAAuB,IAAArB,GAA9BA,EAAAT,KAAAU,EAAiCkB,MACA,QADkBjB,GACpDC,EAAA5Q,QAAO+R,mCAA2B,IAAApB,OAAA,EAAlCA,EAAAX,KAAAY,EAAqCgB,KAyCzC,OAxCA1b,EAAAA,GAAAA,IAA0B,KACjBuG,IAELsE,EAAUlS,SAAU,EACpBmR,OAAOgS,iBAAkB,EACzBvV,EAAc2F,iBACd3F,EAAcoJ,0BAWVgM,EAAahjB,SAAW4N,EAAcwV,gBACtCxV,EAAcwV,eAAeC,iBACjC,KAEJjb,EAAAA,EAAAA,YAAU,KACDwF,KAEAoV,EAAahjB,SAAW4N,EAAcwV,gBACvCxV,EAAcwV,eAAeC,iBAE7BL,EAAahjB,UAEbsjB,gBAAe,KAAM,IAAAC,EAAAC,EACiB,QAAlCD,GAAAC,EAAArS,QAAOsS,mCAA2B,IAAAF,GAAlCA,EAAApC,KAAAqC,EAAqCT,EAAkB,IAE3DC,EAAahjB,SAAU,GAM3B4N,EAAcyE,sBAAmBtS,EAAS,IAEvC6N,CACX,CAyBA,SAAS6U,GAAyB7U,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAciB,QAAQgO,gBACvBjP,EAAcgC,WACd6S,GAAyB7U,EAAclM,OACjD,CC5GA,SAASgiB,GAAsB/G,GAAwF,IAAA9Z,EAAA8gB,EAAA,IAA7E,mBAAEtE,GAAqB,GAAOlf,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGyjB,EAAiBzjB,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAAE2hB,EAAmBvhB,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EACjH6jB,GC5BJ,SAAsB3U,GAClB,IAAK,MAAMtJ,KAAOsJ,EACd3C,EAAmB3G,IAAIH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB8G,EAAmB3G,IACnBsJ,EAAStJ,GAGxB,CDqByBke,CAAaD,GAClC,MAAME,EAAiBpH,GAAeC,GAChCiE,GACAD,GACN,SAASoD,EAAmBxiB,EAAO8f,GAK/B,IAAI2C,EACJ,MAAMC,GAAcze,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACbpC,EAAAA,EAAAA,YAAWC,GAAAA,IACX9B,GAAK,IACR8X,SAAU6K,GAAY3iB,MAEpB,SAAEkH,GAAawb,EACfjf,EAAUiY,GAAuB1b,GACjCqN,EAAckV,EAAeviB,EAAOkH,GAC1C,IAAKA,GAAYyI,EAAAA,EAAW,EA+BpC,YACqB9N,EAAAA,EAAAA,YAAW0Z,IAAaC,OAKrCoH,CAQR,CA5CYC,GACA,MAAMC,EA4ClB,SAAoC9iB,GAChC,MAAM,KAAEwK,EAAI,OAAEM,GAAWC,EACzB,IAAKP,IAASM,EACV,MAAO,CAAC,EACZ,MAAMiY,GAAQ9e,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQuG,GAASM,GAC/B,MAAO,CACH2X,cAAmB,OAAJjY,QAAI,IAAJA,GAAAA,EAAMQ,UAAUhL,IAAgB,OAAN8K,QAAM,IAANA,GAAAA,EAAQE,UAAUhL,GACrD+iB,EAASN,mBACTjkB,EACNwkB,eAAgBD,EAASC,eAEjC,CAvDqCC,CAA2BP,GACpDD,EAAgBK,EAAiBL,cAOjChf,EAAQ4I,cAAgB6T,GAAiB9E,EAAW/N,EAAaqV,EAAgBvC,EAAqB2C,EAAiBE,eAC3H,CAKA,OAAQE,EAAAA,GAAAA,MAAKzH,GAAcnX,SAAU,CAAE/F,MAAOkF,EAASrC,SAAU,CAACqhB,GAAiBhf,EAAQ4I,eAAiBvJ,EAAAA,GAAAA,KAAI2f,GAAaxe,EAAAA,EAAAA,GAAA,CAAIoI,cAAe5I,EAAQ4I,eAAkBqW,IAAqB,KAAM7E,GAAUzC,EAAWpb,EAAO6f,GAAaxS,EAAa5J,EAAQ4I,cAAeyT,GAAczS,EAAanG,EAAU4W,KAC3T,CACA0E,EAAmBW,YAAc,UAAHjhB,OAAkC,kBAAdkZ,EAC5CA,EAAS,UAAAlZ,OACwC,QADxCZ,EACsB,QADtB8gB,EACChH,EAAU+H,mBAAW,IAAAf,EAAAA,EAAIhH,EAAUlQ,YAAI,IAAA5J,EAAAA,EAAI,GAAE,MAC7D,MAAM8hB,GAA4BC,EAAAA,EAAAA,YAAWb,GAE7C,OADAY,EAA0B9D,IAAyBlE,EAC5CgI,CACX,CACA,SAAST,GAAWW,GAAe,IAAd,SAAExL,GAAUwL,EAC7B,MAAMC,GAAgB1hB,EAAAA,EAAAA,YAAWyE,GAAAA,GAAoB7E,GACrD,OAAO8hB,QAA8B/kB,IAAbsZ,EAClByL,EAAgB,IAAMzL,EACtBA,CACV,CE3EA,SAAS0L,GAAkBnB,EAAmBlC,GAC1C,GAAqB,qBAAVsD,MACP,OAAOtB,GAMX,MAAMuB,EAAiB,IAAInf,IACrBof,EAAUA,CAACvI,EAAW9N,IACjB6U,GAAsB/G,EAAW9N,EAAS+U,EAAmBlC,GAWxE,OAAO,IAAIsD,OANuBG,CAACxI,EAAW9N,IAInCqW,EAAQvI,EAAW9N,IAEc,CAMxCtH,IAAKA,CAAC6d,EAASzf,IACC,WAARA,EACOuf,GAIND,EAAejd,IAAIrC,IACpBsf,EAAe9f,IAAIQ,EAAK+d,GAAsB/d,OAAK5F,EAAW6jB,EAAmBlC,IAE9EuD,EAAe1d,IAAI5B,KAGtC,CCxCA,SAAS0f,GAAezX,EAAeI,EAAYvJ,GAC/C,MAAMlD,EAAQqM,EAAcqH,WAC5B,OAAOlH,EAAwBxM,EAAOyM,OAAuBjO,IAAX0E,EAAuBA,EAASlD,EAAMkD,OAAQmJ,EACpG,C,yBCLA,MAAM0X,GAAqBtY,GAChB1M,MAAM6M,QAAQH,G,kCCOzB,SAASuY,GAAe3X,EAAejI,EAAK7F,GACpC8N,EAAc4G,SAAS7O,GACvBiI,EAAc8G,SAAS/O,GAAKR,IAAIrF,GAGhC8N,EAAc0G,SAAS3O,GAAK4O,EAAAA,EAAAA,IAAYzU,GAEhD,C,eCZA,SAAS0lB,GAAqB5X,EAAejI,GACzC,MAAM6K,EAAa5C,EAAc8G,SAAS,cAK1C,GCP6B5U,EDOD0Q,ECNrB/C,SAAQmD,EAAAA,EAAAA,GAAc9Q,IAAUA,EAAMsS,KDOzC,OAAO5B,EAAW4B,IAAIzM,GAErB,IAAK6K,GAAciV,GAAAA,EAAmBC,WAAY,CACnD,MAAMC,EAAgB,IAAIF,GAAAA,EAAmBC,WAAW,QACxD9X,EAAc0G,SAAS,aAAcqR,GACrCA,EAAcvT,IAAIzM,EACtB,CCdJ,IAAiC7F,CDejC,CEfA,SAAS8lB,GAAqBhY,GAC1B,OAAOA,EAAcrM,MAAMggB,GAC/B,C,+CCJA,MAAMsE,GAAa/lB,GAAoB,OAAVA,ECE7B,MAAMgmB,GAAoB,CACtBxS,KAAM,SACNyS,UAAW,IACXC,QAAS,GACTC,UAAW,IAQTC,GAAsB,CACxB5S,KAAM,YACN6S,SAAU,IAMRC,GAAO,CACT9S,KAAM,YACN8S,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBD,SAAU,IAERhR,GAAuBA,CAACkR,EAAQxjB,KAAoB,IAAlB,UAAEyjB,GAAWzjB,EACjD,OAAIyjB,EAAUlmB,OAAS,EACZ8lB,GAEF3T,EAAAA,EAAevK,IAAIqe,GACjBA,EAAS9N,WAAW,SAxBG,CAClCjF,KAAM,SACNyS,UAAW,IACXC,QAAoB,IAsBaM,EAAU,GAtBnB,EAAIC,KAAKC,KAAK,KAAO,GAC7CP,UAAW,IAsBDH,GAEHM,EAAI,E,8HC9Bf,MAAMK,GAAqB,SAACha,EAAM3M,EAAO8V,GAAM,IAAER,EAAUjV,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGkB,EAAOlB,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAAE2mB,EAASvmB,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAAA,OAAM4mB,IACtF,MAAMC,GAAkBC,EAAAA,GAAAA,GAAmBzR,EAAY3I,IAAS,CAAC,EAM3Dqa,EAAQF,EAAgBE,OAAS1R,EAAW0R,OAAS,EAK3D,IAAI,QAAEC,EAAU,GAAM3R,EACtB2R,IAAoBC,EAAAA,GAAAA,GAAsBF,GAC1C,MAAMjY,GAAOrJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACT8gB,UAAWhmB,MAAM6M,QAAQyI,GAAUA,EAAS,CAAC,KAAMA,GACnDwQ,KAAM,UACNnY,SAAUnO,EAAMgO,eACb8Y,GAAe,IAClBE,OAAQC,EACRnU,SAAW5F,IACPlN,EAAMqF,IAAI6H,GACV4Z,EAAgBhU,UAAYgU,EAAgBhU,SAAS5F,EAAE,EAE3D2Z,WAAYA,KACRA,IACAC,EAAgBD,YAAcC,EAAgBD,YAAY,EAE9Dla,OACA8H,YAAazU,EACbuB,QAASqlB,OAAY3mB,EAAYsB,KC/BzC,SAA4BwB,GAA2I,IAA1I,KAAEokB,EAAMH,MAAOI,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAEC,EAAM,WAAEC,EAAU,YAAEC,EAAW,KAAEC,EAAI,QAAEV,GAAwBlkB,EAAZuS,GAAU1E,EAAAA,EAAAA,GAAA7N,EAAA8N,IAC/J,QAAS+M,OAAOpC,KAAKlG,GAAYhV,MACrC,EDmCSsnB,CAAoBd,IACrBlJ,OAAOC,OAAO9O,EAASsG,GAAqB1I,EAAMoC,IAOtDA,EAAQsX,WAAatX,EAAQsX,UAAWa,EAAAA,GAAAA,GAAsBnY,EAAQsX,WACtEtX,EAAQ2Y,cAAgB3Y,EAAQ2Y,aAAcR,EAAAA,GAAAA,GAAsBnY,EAAQ2Y,mBAIvDznB,IAAjB8O,EAAQ4Y,OACR5Y,EAAQyX,UAAU,GAAKzX,EAAQ4Y,MAEnC,IAAIE,GAAa,EAwBjB,KAvBqB,IAAjB9Y,EAAQyE,MACc,IAArBzE,EAAQsX,WAAmBtX,EAAQ2Y,gBACpCI,EAAAA,GAAAA,GAAqB/Y,GACC,IAAlBA,EAAQiY,QACRa,GAAa,KAGjBlC,GAAAA,EAAmBoC,mBACnBpC,GAAAA,EAAmBqC,kBACnBH,GAAa,GACbC,EAAAA,GAAAA,GAAqB/Y,GACrBA,EAAQiY,MAAQ,GAMpBjY,EAAQkZ,cAAgBnB,EAAgBtT,OAASsT,EAAgBR,KAM7DuB,IAAejB,QAA6B3mB,IAAhBD,EAAMyH,MAAqB,CACvD,MAAMygB,EFlFd,SAA0B1B,EAASzjB,EAAmCmlB,GAAe,IAAhD,OAAEV,EAAM,WAAEC,EAAa,QAAQ1kB,EAChE,MAAMolB,EAAoB3B,EAAU4B,OAAOrC,IACrCsC,EAAQb,GAAyB,SAAfC,GAAyBD,EAAS,IAAM,EAC1D,EACAW,EAAkB7nB,OAAS,EACjC,OAAQ+nB,QAA2BpoB,IAAlBioB,EAEXA,EADAC,EAAkBE,EAE5B,CE0E8BC,CAAiBvZ,EAAQyX,UAAWM,GAC1D,QAAsB7mB,IAAlBioB,EAKA,YAJA/X,EAAAA,GAAM0B,QAAO,KACT9C,EAAQ+D,SAASoV,GACjBnZ,EAAQ8X,YAAY,GAIhC,CACA,OAAOC,EAAgByB,OACjB,IAAIC,GAAAA,EAAYzZ,GAChB,IAAI0Z,GAAAA,EAA0B1Z,EAAQ,CAC/C,E,kCEnFD,SAAS2Z,GAAoB3lB,EAAoC8C,GAAK,IAAxC,cAAE8iB,EAAa,eAAEC,GAAgB7lB,EAC3D,MAAM8lB,EAAcF,EAAcvH,eAAevb,KAAgC,IAAxB+iB,EAAe/iB,GAExE,OADA+iB,EAAe/iB,IAAO,EACfgjB,CACX,CACA,SAASC,GAAchb,EAAeib,GAAmE,IAA9C,MAAE/B,EAAQ,EAAC,mBAAEgC,EAAkB,KAAExV,GAAMnT,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,GAC9F,WAAEiV,EAAaxH,EAAcuH,uBAAsB,cAAEiL,GAA6ByI,EAAXjT,GAAMlF,EAAAA,EAAAA,GAAKmY,EAAmBlY,IACrGmY,IACA1T,EAAa0T,GACjB,MAAMC,EAAa,GACbC,EAAqB1V,GACvB1F,EAAcwV,gBACdxV,EAAcwV,eAAe6F,WAAW3V,GAC5C,IAAK,MAAM3N,KAAOiQ,EAAQ,KAAAsT,EACtB,MAAMppB,EAAQ8N,EAAc8G,SAAS/O,EAAoC,QAAjCujB,EAAEtb,EAAc4B,aAAa7J,UAAI,IAAAujB,EAAAA,EAAI,MACvE7I,EAAczK,EAAOjQ,GAC3B,QAAoB5F,IAAhBsgB,GACC2I,GACGR,GAAqBQ,EAAoBrjB,GAC7C,SAEJ,MAAMihB,GAAephB,EAAAA,EAAAA,GAAA,CACjBshB,UACGD,EAAAA,GAAAA,GAAmBzR,GAAc,CAAC,EAAGzP,IAKtCwjB,EAAerpB,EAAMyH,MAC3B,QAAqBxH,IAAjBopB,IACCrpB,EAAMspB,cACN9oB,MAAM6M,QAAQkT,IACfA,IAAgB8I,IACfvC,EAAgB3Y,SACjB,SAMJ,IAAIyY,GAAY,EAChB,GAAIvV,OAAOkY,uBAAwB,CAC/B,MAAMC,EAAW1D,GAAqBhY,GACtC,GAAI0b,EAAU,CACV,MAAMC,EAAYpY,OAAOkY,uBAAuBC,EAAU3jB,EAAKsK,EAAAA,IAC7C,OAAdsZ,IACA3C,EAAgB2C,UAAYA,EAC5B7C,GAAY,EAEpB,CACJ,CACAlB,GAAqB5X,EAAejI,GACpC7F,EAAMmN,MAAMwZ,GAAmB9gB,EAAK7F,EAAOugB,EAAazS,EAAcmB,oBAAsBya,GAAAA,EAAexhB,IAAIrC,GACzG,CAAE2N,MAAM,GACRsT,EAAiBhZ,EAAe8Y,IACtC,MAAM7a,EAAY/L,EAAM+L,UACpBA,GACAkd,EAAW1iB,KAAKwF,EAExB,CAQA,OAPIuU,GACAqJ,QAAQC,IAAIX,GAAYY,MAAK,KACzB1Z,EAAAA,GAAM0B,QAAO,KACTyO,GRvDhB,SAAmBxS,EAAeI,GAE9B,IAAAnL,EADiBwiB,GAAezX,EAAeI,IACsB,CAAC,GAAlE,cAAEoS,EAAgB,CAAC,EAAC,WAAEhL,EAAa,CAAC,GAAcvS,EAAR+S,GAAMlF,EAAAA,EAAAA,GAAA7N,EAAA8N,IACpDiF,GAAMpQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQoQ,GAAWwK,GACzB,IAAK,MAAMza,KAAOiQ,EAEd2P,GAAe3X,EAAejI,GAVAqH,EASa4I,EAAOjQ,GAP/C2f,GAAkBtY,GAAKA,EAAEA,EAAE5M,OAAS,IAAM,EAAI4M,IAFzD,IAAsCA,CAYtC,CQ+CiC4c,CAAUhc,EAAewS,EAAc,GAC1D,IAGH2I,CACX,CChFA,SAASc,GAAiBlnB,EAAUqD,EAAOmhB,GAA0D,IAA3CC,EAAejnB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAGknB,EAAgBlnB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAC9F,MAAMgoB,EAAQ7nB,MAAMmnB,KAAK9kB,GACpBmnB,MAAK,CAACzS,EAAGC,IAAMD,EAAElE,iBAAiBmE,KAClCsE,QAAQ5V,GACP+jB,EAAcpnB,EAASZ,KACvBioB,GAAsBD,EAAc,GAAK3C,EAE/C,MADiD,oBAAlBD,EAEzBA,EAAcgB,EAAO4B,GACA,IAArB1C,EACIc,EAAQf,EACR4C,EAAqB7B,EAAQf,CAC3C,CCRA,SAAS6C,GAAerc,EAAe+I,GAAuB,IAAAuT,EAAA,IAAdrb,EAAO1O,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAMggB,EAAWkF,GAAezX,EAAe+I,EAA0B,SAAjB9H,EAAQyE,KAC7B,QAD4C4W,EACzEtc,EAAca,uBAAe,IAAAyb,OAAA,EAA7BA,EAA+BzlB,YAC/B1E,GACN,IAAI,WAAEqV,EAAaxH,EAAcuH,wBAA0B,CAAC,GAAMgL,GAAY,CAAC,EAC3EtR,EAAQia,qBACR1T,EAAavG,EAAQia,oBAMzB,MAAMqB,EAAehK,EACf,IAAMsJ,QAAQC,IAAId,GAAchb,EAAeuS,EAAUtR,IACzD,IAAM4a,QAAQW,UAKdC,EAAqBzc,EAAcyC,iBAAmBzC,EAAcyC,gBAAgBtO,KACpF,WAAsB,IAArBuoB,EAAYnqB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAEgnB,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBjS,EAClE,OAkBZ,SAAyBxH,EAAe+I,GAA2F,IAAlFmQ,EAAK3mB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAGgnB,EAAahnB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAGinB,EAAejnB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAGknB,EAAgBlnB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAG0O,EAAO1O,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAC7H,MAAMgpB,EAAa,GACnB,IAAK,MAAM/iB,KAAS4H,EAAcyC,gBAC9BrK,EAAMuJ,OAAO,iBAAkBoH,GAC/BoS,EAAW1iB,KAAK4jB,GAAejkB,EAAO2Q,GAAOnR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtCqJ,GAAO,IACViY,MAAOA,GACuB,oBAAlBK,EAA+B,EAAIA,GAC3C0C,GAAiBjc,EAAcyC,gBAAiBrK,EAAOmhB,EAAeC,EAAiBC,MAC5FsC,MAAK,IAAM3jB,EAAMuJ,OAAO,oBAAqBoH,MAEpD,OAAO8S,QAAQC,IAAIX,EACvB,CA9BmBwB,CAAgB3c,EAAe+I,EAAS2T,EAAcnD,EAAeC,EAAiBC,EAAkBxY,EACnH,EACE,IAAM4a,QAAQW,WAKd,KAAEnD,GAAS7R,EACjB,GAAI6R,EAAM,CACN,MAAOuD,EAAOC,GAAiB,mBAATxD,EAChB,CAACkD,EAAcE,GACf,CAACA,EAAoBF,GAC3B,OAAOK,IAAQb,MAAK,IAAMc,KAC9B,CAEI,OAAOhB,QAAQC,IAAI,CAACS,IAAgBE,EAAmBxb,EAAQiY,QAEvE,CC3CA,SAAS4D,GAAexW,EAAMC,GAC1B,IAAK7T,MAAM6M,QAAQgH,GACf,OAAO,EACX,MAAMwW,EAAaxW,EAAK/T,OACxB,GAAIuqB,IAAezW,EAAK9T,OACpB,OAAO,EACX,IAAK,IAAIY,EAAI,EAAGA,EAAI2pB,EAAY3pB,IAC5B,GAAImT,EAAKnT,KAAOkT,EAAKlT,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,MAAM4pB,GAAkBvd,EAAajN,OACrC,SAASyqB,GAAkBjd,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAcN,sBAAuB,CACtC,MAAMtI,EAAU4I,EAAclM,QACxBmpB,GAAkBjd,EAAclM,SAChC,CAAC,EAIP,YAHoC3B,IAAhC6N,EAAcrM,MAAMgD,UACpBS,EAAQT,QAAUqJ,EAAcrM,MAAMgD,SAEnCS,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIhE,EAAI,EAAGA,EAAI4pB,GAAiB5pB,IAAK,CACtC,MAAMyL,EAAOY,EAAarM,GACpBqc,EAAOzP,EAAcrM,MAAMkL,IAC7BS,EAAemQ,KAAkB,IAATA,KACxBrY,EAAQyH,GAAQ4Q,EAExB,CACA,OAAOrY,CACX,C,wCCfM8lB,GAAuB,IAAI1d,GAAsB2d,UACjDC,GAAoB5d,EAAqBhN,OAC/C,SAAS6qB,GAAYrd,GACjB,OAAQmb,GAAeU,QAAQC,IAAIX,EAAWjoB,KAAI+B,IAAA,IAAC,UAAEgJ,EAAS,QAAEgD,GAAShM,EAAA,OCT7E,SAA8B+K,EAAeI,GAA0B,IAE/DnC,EAFiDgD,EAAO1O,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAyN,EAAc2B,OAAO,iBAAkBvB,GAEnC1N,MAAM6M,QAAQa,GAAa,CAC3B,MAAM+a,EAAa/a,EAAWlN,KAAK6V,GAAYsT,GAAerc,EAAe+I,EAAS9H,KACtFhD,EAAY4d,QAAQC,IAAIX,EAC5B,MACK,GAA0B,kBAAf/a,EACZnC,EAAYoe,GAAerc,EAAeI,EAAYa,OAErD,CACD,MAAMqc,EAA2C,oBAAfld,EAC5BqX,GAAezX,EAAeI,EAAYa,EAAQpK,QAClDuJ,EACNnC,EAAY4d,QAAQC,IAAId,GAAchb,EAAesd,EAAoBrc,GAC7E,CACA,OAAOhD,EAAU8d,MAAK,KAClB/b,EAAc2B,OAAO,oBAAqBvB,EAAW,GAE7D,CDVkFmd,CAAqBvd,EAAe/B,EAAWgD,EAAQ,IACzI,CACA,SAASuc,GAAqBxd,GAC1B,IAAIL,EAAU0d,GAAYrd,GACtBC,EAAQwd,KACRxkB,GAAkB,EAKtB,MAAMykB,EAA2BhY,GAAS,CAACiY,EAAKvd,KAAe,IAAAkc,EAC3D,MAAM/J,EAAWkF,GAAezX,EAAeI,EAAqB,SAATsF,EACxB,QADuC4W,EACpEtc,EAAca,uBAAe,IAAAyb,OAAA,EAA7BA,EAA+BzlB,YAC/B1E,GACN,GAAIogB,EAAU,CACV,MAAM,WAAE/K,EAAU,cAAEgL,GAA6BD,EAAXvK,GAAMlF,EAAAA,EAAAA,GAAKyP,EAAQxP,IACzD4a,GAAG/lB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ+lB,GAAQ3V,GAAWwK,EAClC,CACA,OAAOmL,CAAG,EAmBd,SAASlI,EAAemI,GACpB,MAAM,MAAEjqB,GAAUqM,EACZ5I,EAAU6lB,GAAkBjd,EAAclM,SAAW,CAAC,EAKtDqnB,EAAa,GAKb0C,EAAc,IAAI3c,IAMxB,IAAI4c,EAAkB,CAAC,EAKnBC,EAAsBC,IAO1B,IAAK,IAAI5qB,EAAI,EAAGA,EAAIgqB,GAAmBhqB,IAAK,CACxC,MAAMsS,EAAOwX,GAAqB9pB,GAC5B6qB,EAAYhe,EAAMyF,GAClB+J,OAAuBtd,IAAhBwB,EAAM+R,GACb/R,EAAM+R,GACNtO,EAAQsO,GACRwY,EAAgB5e,EAAemQ,GAK/B0O,EAAczY,IAASkY,EAAoBK,EAAUG,SAAW,MAClD,IAAhBD,IACAJ,EAAsB3qB,GAO1B,IAAIirB,EAAc5O,IAASrY,EAAQsO,IAC/B+J,IAAS9b,EAAM+R,IACfwY,EAYJ,GAXIG,GACAplB,GACA+G,EAAc0C,yBACd2b,GAAc,GAMlBJ,EAAUpD,eAAajjB,EAAAA,EAAAA,GAAA,GAAQkmB,IAI7BG,EAAUG,UAA4B,OAAhBD,IAElB1O,IAASwO,EAAUK,UAErBnf,EAAoBsQ,IACJ,mBAATA,EACP,SAOJ,MAAM8O,EAAmBC,GAAuBP,EAAUK,SAAU7O,GACpE,IAAIgP,EAAoBF,GAEnB7Y,IAASkY,GACNK,EAAUG,WACTC,GACDH,GAEH9qB,EAAI2qB,GAAuBG,EAC5BQ,GAAuB,EAK3B,MAAMC,EAAiBjsB,MAAM6M,QAAQkQ,GAAQA,EAAO,CAACA,GAKrD,IAAImP,EAAiBD,EAAeE,OAAOnB,EAAwBhY,GAAO,CAAC,IACvD,IAAhByY,IACAS,EAAiB,CAAC,GAUtB,MAAM,mBAAEE,EAAqB,CAAC,GAAMb,EAC9Bc,GAAOnnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNknB,GACAF,GAEDI,EAAiBjnB,IACnB0mB,GAAoB,EAChBZ,EAAYzjB,IAAIrC,KAChB2mB,GAAuB,EACvBb,EAAYlmB,OAAOI,IAEvBkmB,EAAUnD,eAAe/iB,IAAO,EAChC,MAAM4O,EAAc3G,EAAc8G,SAAS/O,GACvC4O,IACAA,EAAYI,WAAY,EAAK,EAErC,IAAK,MAAMhP,KAAOgnB,EAAS,CACvB,MAAMzY,EAAOsY,EAAe7mB,GACtBwO,EAAOuY,EAAmB/mB,GAEhC,GAAI+lB,EAAgBxK,eAAevb,GAC/B,SAIJ,IAAIknB,GAAkB,EAElBA,EADAvH,GAAkBpR,IAASoR,GAAkBnR,IAC1BuW,GAAexW,EAAMC,GAGtBD,IAASC,EAE3B0Y,OACa9sB,IAATmU,GAA+B,OAATA,EAEtB0Y,EAAcjnB,GAId8lB,EAAYrZ,IAAIzM,QAGN5F,IAATmU,GAAsBuX,EAAYzjB,IAAIrC,GAK3CinB,EAAcjnB,GAOdkmB,EAAUpD,cAAc9iB,IAAO,CAEvC,CAKAkmB,EAAUK,SAAW7O,EACrBwO,EAAUa,mBAAqBF,EAC3BX,EAAUG,WACVN,GAAelmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQkmB,GAAoBc,IAE3C3lB,GAAmB+G,EAAce,wBACjC0d,GAAoB,GAMxB,MAAMS,EAAuBb,GAAeE,EAExCE,KADoBS,GAAwBR,IAE5CvD,EAAW1iB,QAAQkmB,EAAezrB,KAAK+K,IACnC,MAAMgD,EAAU,CAAEyE,QAMlB,GAAyB,kBAAdzH,GACPhF,IACCimB,GACDlf,EAAc0C,wBACd1C,EAAclM,OAAQ,CACtB,MAAM,OAAEA,GAAWkM,EACbmf,EAAgB1H,GAAe3jB,EAAQmK,GAC7C,GAAInK,EAAO2Q,kBAAoB0a,EAAe,CAC1C,MAAM,cAAE5F,GAAkB4F,EAAc3X,YAAc,CAAC,EACvDvG,EAAQiY,MAAQ+C,GAAiBnoB,EAAO2Q,iBAAkBzE,EAAeuZ,EAC7E,CACJ,CACA,MAAO,CACHtb,UAAWA,EACXgD,UACH,IAGb,CAMA,GAAI4c,EAAY1pB,KAAM,CAClB,MAAMirB,EAAoB,CAAC,EAK3B,GAA6B,mBAAlBzrB,EAAMgD,QAAuB,CACpC,MAAM0oB,EAAoB5H,GAAezX,EAAetN,MAAM6M,QAAQ5L,EAAMgD,SACtEhD,EAAMgD,QAAQ,GACdhD,EAAMgD,SACR0oB,GAAqBA,EAAkB7X,aACvC4X,EAAkB5X,WAAa6X,EAAkB7X,WAEzD,CACAqW,EAAYhmB,SAASE,IACjB,MAAMunB,EAAiBtf,EAAc4I,cAAc7Q,GAC7C4O,EAAc3G,EAAc8G,SAAS/O,GACvC4O,IACAA,EAAYI,WAAY,GAE5BqY,EAAkBrnB,GAAqB,OAAdunB,QAAc,IAAdA,EAAAA,EAAkB,IAAI,IAEnDnE,EAAW1iB,KAAK,CAAEwF,UAAWmhB,GACjC,CACA,IAAIG,EAAgB1f,QAAQsb,EAAW3oB,QAOvC,OANIyG,IACmB,IAAlBtF,EAAMgD,SAAqBhD,EAAMgD,UAAYhD,EAAMgM,SACnDK,EAAc0C,yBACf6c,GAAgB,GAEpBtmB,GAAkB,EACXsmB,EAAgB5f,EAAQwb,GAAcU,QAAQW,SACzD,CAiBA,MAAO,CACH/G,iBACA+J,UAfJ,SAAmB9Z,EAAM0Y,GAAU,IAAAqB,EAE/B,GAAIxf,EAAMyF,GAAM0Y,WAAaA,EACzB,OAAOvC,QAAQW,UAEU,QAA7BiD,EAAAzf,EAAcyC,uBAAe,IAAAgd,GAA7BA,EAA+B5nB,SAASO,IAAK,IAAAsnB,EAAA,OAAyB,QAAzBA,EAAKtnB,EAAMod,sBAAc,IAAAkK,OAAA,EAApBA,EAAsBF,UAAU9Z,EAAM0Y,EAAS,IACjGne,EAAMyF,GAAM0Y,SAAWA,EACvB,MAAMjD,EAAa1F,EAAe/P,GAClC,IAAK,MAAM3N,KAAOkI,EACdA,EAAMlI,GAAK8iB,cAAgB,CAAC,EAEhC,OAAOM,CACX,EAIIwE,mBA1RJ,SAA4BC,GACxBjgB,EAAUigB,EAAa5f,EAC3B,EAyRIqb,SAAUA,IAAMpb,EAChB4f,MAAOA,KACH5f,EAAQwd,KACRxkB,GAAkB,CAAI,EAGlC,CACA,SAASulB,GAAuBjY,EAAMD,GAClC,MAAoB,kBAATA,EACAA,IAASC,IAEX7T,MAAM6M,QAAQ+G,KACXwW,GAAexW,EAAMC,EAGrC,CACA,SAASuZ,KACL,MAAO,CACH1B,SAFyB7rB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GAGzBsoB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBgE,mBAAoB,CAAC,EAE7B,CACA,SAASrB,KACL,MAAO,CACH9d,QAASmgB,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZlP,SAAUkP,KACVG,UAAWH,KACXI,WAAYJ,KACZ5hB,KAAM4hB,KAEd,CElWA,MAAMja,GACFjF,WAAAA,CAAY7N,GACRW,KAAK4Q,WAAY,EACjB5Q,KAAKX,KAAOA,CAChB,CACAgR,MAAAA,GAAW,ECHf,IAAI3O,GAAK,ECCT,MAAM+lB,GAAa,CACfld,UAAW,CACP4H,QCDR,cAA+BA,GAM3BjF,WAAAA,CAAY7N,GACRwW,MAAMxW,GACNA,EAAKyiB,iBAAmBziB,EAAKyiB,eAAiBgI,GAAqBzqB,GACvE,CACAotB,mCAAAA,GACI,MAAM,QAAExgB,GAAYjM,KAAKX,KAAKsU,WAC1BlI,EAAoBQ,KACpBjM,KAAK0sB,gBAAkBzgB,EAAQpF,UAAU7G,KAAKX,MAEtD,CAIAkQ,KAAAA,GACIvP,KAAKysB,qCACT,CACApc,MAAAA,GACI,MAAM,QAAEpE,GAAYjM,KAAKX,KAAKsU,YACtB1H,QAAS0gB,GAAgB3sB,KAAKX,KAAKS,WAAa,CAAC,EACrDmM,IAAY0gB,GACZ3sB,KAAKysB,qCAEb,CACAnc,OAAAA,GAAU,IAAAsc,EACN5sB,KAAKX,KAAKyiB,eAAeqK,QACL,QAApBS,EAAA5sB,KAAK0sB,uBAAe,IAAAE,GAApBA,EAAA/M,KAAA7f,KACJ,ID7BAwK,KAAM,CACF2H,QDLR,cAAmCA,GAC/BjF,WAAAA,GACI2I,SAAShX,WACTmB,KAAK0B,GAAKA,IACd,CACA2O,MAAAA,GACI,IAAKrQ,KAAKX,KAAK8N,gBACX,OACJ,MAAM,UAAEhN,EAAS,eAAE+C,GAAmBlD,KAAKX,KAAK8N,iBACxChN,UAAW0sB,GAAkB7sB,KAAKX,KAAKqT,qBAAuB,CAAC,EACvE,IAAK1S,KAAKX,KAAKyiB,gBAAkB3hB,IAAc0sB,EAC3C,OAEJ,MAAMC,EAAgB9sB,KAAKX,KAAKyiB,eAAegK,UAAU,QAAS3rB,GAC9D+C,IAAmB/C,GACnB2sB,EAAczE,MAAK,KACfnlB,EAAelD,KAAK0B,GAAG,GAGnC,CACA6N,KAAAA,GACI,MAAM,SAAEvL,EAAQ,eAAEd,GAAmBlD,KAAKX,KAAK8N,iBAAmB,CAAC,EAC/DjK,GACAA,EAAelD,KAAK0B,IAEpBsC,IACAhE,KAAKsQ,QAAUtM,EAAShE,KAAK0B,IAErC,CACA4O,OAAAA,GAAY,K,qCGhChB,SAASyc,GAAYzY,EAAQgB,EAAW0X,GAAsC,IAA7Bzf,EAAO1O,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAEouB,SAAS,GAElE,OADA3Y,EAAOpE,iBAAiBoF,EAAW0X,EAASzf,GACrC,IAAM+G,EAAO4Y,oBAAoB5X,EAAW0X,EACvD,C,eCDA,SAASG,GAAiBC,GACtB,MAAO,CACH3kB,MAAO,CACHvG,EAAGkrB,EAAMC,MACT5lB,EAAG2lB,EAAME,OAGrB,CCNA,SAASC,GAAgBjZ,EAAQgB,EAAW0X,EAASzf,GACjD,OAAOwf,GAAYzY,EAAQgB,EDMP0X,IACZI,IAAUI,EAAAA,GAAAA,GAAiBJ,IAAUJ,EAAQI,EAAOD,GAAiBC,ICPvCK,CAAeT,GAAUzf,EACnE,CCGA,SAASmgB,GAAW3kB,GAChB,OAAOA,EAAKvB,IAAMuB,EAAKxB,GAC3B,CAIA,SAASomB,GAAcC,EAAO1R,EAAQ5H,GAAsB,IAAduZ,EAAMhvB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,GACnD+uB,EAAMC,OAASA,EACfD,EAAMllB,aAAcgB,EAAAA,EAAAA,GAAUwS,EAAO3U,IAAK2U,EAAO1U,IAAKomB,EAAMC,QAC5DD,EAAMjmB,MAAQ+lB,GAAWpZ,GAAUoZ,GAAWxR,GAC9C0R,EAAMhlB,WACFc,EAAAA,EAAAA,GAAU4K,EAAO/M,IAAK+M,EAAO9M,IAAKomB,EAAMC,QAAUD,EAAMllB,aACvDklB,EAAMjmB,OAjBG,OAiBmBimB,EAAMjmB,OAhBzB,QAiBVmmB,MAAMF,EAAMjmB,UACZimB,EAAMjmB,MAAQ,IAEbimB,EAAMhlB,YAlBO,KAmBdglB,EAAMhlB,WAlBQ,KAmBdklB,MAAMF,EAAMhlB,cACZglB,EAAMhlB,UAAY,EAE1B,CACA,SAASmlB,GAAaH,EAAO1R,EAAQ5H,EAAQuZ,GACzCF,GAAcC,EAAM1rB,EAAGga,EAAOha,EAAGoS,EAAOpS,EAAG2rB,EAASA,EAAOhkB,aAAUpL,GACrEkvB,GAAcC,EAAMnmB,EAAGyU,EAAOzU,EAAG6M,EAAO7M,EAAGomB,EAASA,EAAO/jB,aAAUrL,EACzE,CACA,SAASuvB,GAAiB1Z,EAAQ2Z,EAAU7tB,GACxCkU,EAAO/M,IAAMnH,EAAOmH,IAAM0mB,EAAS1mB,IACnC+M,EAAO9M,IAAM8M,EAAO/M,IAAMmmB,GAAWO,EACzC,CAKA,SAASC,GAAyB5Z,EAAQvJ,EAAQ3K,GAC9CkU,EAAO/M,IAAMwD,EAAOxD,IAAMnH,EAAOmH,IACjC+M,EAAO9M,IAAM8M,EAAO/M,IAAMmmB,GAAW3iB,EACzC,CACA,SAASojB,GAAqB7Z,EAAQvJ,EAAQ3K,GAC1C8tB,GAAyB5Z,EAAOpS,EAAG6I,EAAO7I,EAAG9B,EAAO8B,GACpDgsB,GAAyB5Z,EAAO7M,EAAGsD,EAAOtD,EAAGrH,EAAOqH,EACxD,CCjDA,SAAS2mB,GAAS7Y,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCDA,MAAM8Y,GAAmB9sB,IAAiB,IAAhB,QAAE7C,GAAS6C,EACjC,OAAO7C,EAAUA,EAAQ4vB,cAAcC,YAAc,IAAI,E,eCF7D,MAAMllB,GAAWA,CAAC0M,EAAGC,IAAMiP,KAAKuJ,IAAIzY,EAAIC,GCSxC,MAAMyY,GACFvhB,WAAAA,CAAYkgB,EAAOsB,GAAiH,IAAvG,mBAAEznB,EAAkB,cAAE0nB,EAAgB9e,OAAM,iBAAE+e,GAAmB,EAAK,kBAAEC,EAAoB,GAAIhwB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE7H,GA5DAmB,KAAK8uB,WAAa,KAIlB9uB,KAAK+uB,cAAgB,KAIrB/uB,KAAKgvB,kBAAoB,KAIzBhvB,KAAK0uB,SAAW,CAAC,EAIjB1uB,KAAK2uB,cAAgB9e,OACrB7P,KAAKivB,YAAc,KACf,IAAMjvB,KAAK+uB,gBAAiB/uB,KAAKgvB,kBAC7B,OACJ,MAAME,EAAOC,GAAWnvB,KAAKgvB,kBAAmBhvB,KAAKovB,SAC/CC,EAAmC,OAApBrvB,KAAK8uB,WAIpBQ,EDtClB,SAAoBvZ,EAAGC,GAEnB,MAAMuZ,EAASlmB,GAAS0M,EAAE7T,EAAG8T,EAAE9T,GACzBstB,EAASnmB,GAAS0M,EAAEtO,EAAGuO,EAAEvO,GAC/B,OAAOwd,KAAKC,KAAKqK,GAAU,EAAIC,GAAU,EAC7C,CCiC4CC,CAAWP,EAAKnW,OAAQ,CAAE7W,EAAG,EAAGuF,EAAG,KAAQzH,KAAK6uB,kBAChF,IAAKQ,IAAiBC,EAClB,OACJ,MAAM,MAAE7mB,GAAUymB,GACZ,UAAEQ,GAAcC,EAAAA,GACtB3vB,KAAKovB,QAAQrqB,MAAIb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIuE,GAAK,IAAEinB,eAC9B,MAAM,QAAEE,EAAO,OAAEC,GAAW7vB,KAAK0uB,SAC5BW,IACDO,GAAWA,EAAQ5vB,KAAK+uB,cAAeG,GACvClvB,KAAK8uB,WAAa9uB,KAAK+uB,eAE3Bc,GAAUA,EAAO7vB,KAAK+uB,cAAeG,EAAK,EAE9ClvB,KAAK8vB,kBAAoB,CAAC1C,EAAO8B,KAC7BlvB,KAAK+uB,cAAgB3B,EACrBptB,KAAKgvB,kBAAoB/kB,GAAeilB,EAAMlvB,KAAKiH,oBAEnD0H,EAAAA,GAAM0B,OAAOrQ,KAAKivB,aAAa,EAAK,EAExCjvB,KAAK+vB,gBAAkB,CAAC3C,EAAO8B,KAC3BlvB,KAAKgwB,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoBnwB,KAAK0uB,SAGtD,GAFI1uB,KAAK4uB,kBACLuB,GAAmBA,KACjBnwB,KAAK+uB,gBAAiB/uB,KAAKgvB,kBAC7B,OACJ,MAAMoB,EAAUjB,GAA0B,kBAAf/B,EAAMpb,KAC3BhS,KAAKgvB,kBACL/kB,GAAeilB,EAAMlvB,KAAKiH,oBAAqBjH,KAAKovB,SACtDpvB,KAAK8uB,YAAcmB,GACnBA,EAAM7C,EAAOgD,GAEjBF,GAAgBA,EAAa9C,EAAOgD,EAAQ,IAG3C5C,EAAAA,GAAAA,GAAiBJ,GAClB,OACJptB,KAAK4uB,iBAAmBA,EACxB5uB,KAAK0uB,SAAWA,EAChB1uB,KAAKiH,mBAAqBA,EAC1BjH,KAAK6uB,kBAAoBA,EACzB7uB,KAAK2uB,cAAgBA,GAAiB9e,OACtC,MACMwgB,EAAcpmB,GADPkjB,GAAiBC,GACWptB,KAAKiH,qBACxC,MAAEwB,GAAU4nB,GACZ,UAAEX,GAAcC,EAAAA,GACtB3vB,KAAKovB,QAAU,EAAAlrB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAMuE,GAAK,IAAEinB,eAC5B,MAAM,eAAEY,GAAmB5B,EAC3B4B,GACIA,EAAelD,EAAO+B,GAAWkB,EAAarwB,KAAKovB,UACvDpvB,KAAKuwB,iBAAkBC,EAAAA,GAAAA,GAAKjD,GAAgBvtB,KAAK2uB,cAAe,cAAe3uB,KAAK8vB,mBAAoBvC,GAAgBvtB,KAAK2uB,cAAe,YAAa3uB,KAAK+vB,iBAAkBxC,GAAgBvtB,KAAK2uB,cAAe,gBAAiB3uB,KAAK+vB,iBAC9O,CACAU,cAAAA,CAAe/B,GACX1uB,KAAK0uB,SAAWA,CACpB,CACAsB,GAAAA,GACIhwB,KAAKuwB,iBAAmBvwB,KAAKuwB,mBAC7B/f,EAAAA,EAAAA,IAAYxQ,KAAKivB,YACrB,EAEJ,SAAShlB,GAAeilB,EAAMjoB,GAC1B,OAAOA,EAAqB,CAAEwB,MAAOxB,EAAmBioB,EAAKzmB,QAAWymB,CAC5E,CACA,SAASwB,GAAc3a,EAAGC,GACtB,MAAO,CAAE9T,EAAG6T,EAAE7T,EAAI8T,EAAE9T,EAAGuF,EAAGsO,EAAEtO,EAAIuO,EAAEvO,EACtC,CACA,SAAS0nB,GAAU5tB,EAAY6tB,GAAS,IAApB,MAAE3mB,GAAOlH,EACzB,MAAO,CACHkH,QACAmlB,MAAO8C,GAAcjoB,EAAOkoB,GAAgBvB,IAC5CrW,OAAQ2X,GAAcjoB,EAAOmoB,GAAiBxB,IAC9CziB,SAAUH,GAAY4iB,EAAS,IAEvC,CACA,SAASwB,GAAiBxB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASuB,GAAgBvB,GACrB,OAAOA,EAAQA,EAAQtwB,OAAS,EACpC,CACA,SAAS0N,GAAY4iB,EAASyB,GAC1B,GAAIzB,EAAQtwB,OAAS,EACjB,MAAO,CAAEoD,EAAG,EAAGuF,EAAG,GAEtB,IAAI/H,EAAI0vB,EAAQtwB,OAAS,EACrBgyB,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBvB,GAClC,KAAO1vB,GAAK,IACRoxB,EAAmB1B,EAAQ1vB,KACvBqxB,EAAUrB,UAAYoB,EAAiBpB,WACvChK,EAAAA,GAAAA,GAAsBmL,MAG1BnxB,IAEJ,IAAKoxB,EACD,MAAO,CAAE5uB,EAAG,EAAGuF,EAAG,GAEtB,MAAMiH,GAAOsiB,EAAAA,GAAAA,GAAsBD,EAAUrB,UAAYoB,EAAiBpB,WAC1E,GAAa,IAAThhB,EACA,MAAO,CAAExM,EAAG,EAAGuF,EAAG,GAEtB,MAAMwpB,EAAkB,CACpB/uB,GAAI6uB,EAAU7uB,EAAI4uB,EAAiB5uB,GAAKwM,EACxCjH,GAAIspB,EAAUtpB,EAAIqpB,EAAiBrpB,GAAKiH,GAQ5C,OANIuiB,EAAgB/uB,IAAMooB,MACtB2G,EAAgB/uB,EAAI,GAEpB+uB,EAAgBxpB,IAAM6iB,MACtB2G,EAAgBxpB,EAAI,GAEjBwpB,CACX,C,yBC3HA,SAASC,GAA4BnoB,EAAMxB,EAAKC,GAC5C,MAAO,CACHD,SAAa9I,IAAR8I,EAAoBwB,EAAKxB,IAAMA,OAAM9I,EAC1C+I,SAAa/I,IAAR+I,EACCuB,EAAKvB,IAAMA,GAAOuB,EAAKvB,IAAMuB,EAAKxB,UAClC9I,EAEd,CAcA,SAAS0yB,GAA4BC,EAAYC,GAC7C,IAAI9pB,EAAM8pB,EAAgB9pB,IAAM6pB,EAAW7pB,IACvCC,EAAM6pB,EAAgB7pB,IAAM4pB,EAAW5pB,IAO3C,OAJI6pB,EAAgB7pB,IAAM6pB,EAAgB9pB,IACtC6pB,EAAW5pB,IAAM4pB,EAAW7pB,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAM8pB,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHnqB,IAAKoqB,GAAoBH,EAAaC,GACtCjqB,IAAKmqB,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC5GA,MAAMC,GAAsB,IAAIrmB,QAChC,MAAMsmB,GACF5kB,WAAAA,CAAYZ,GACRtM,KAAK+xB,aAAe,KACpB/xB,KAAKgyB,YAAa,EAClBhyB,KAAKiyB,iBAAmB,KACxBjyB,KAAK0I,YAAc,CAAExG,EAAG,EAAGuF,EAAG,GAI9BzH,KAAKkyB,aAAc,EACnBlyB,KAAKmyB,uBAAwB,EAI7BnyB,KAAKoyB,QpFrBK,CACdlwB,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IoF0BjCxH,KAAKqyB,mBAAqB,KAI1BryB,KAAKsyB,cAAgB,KACrBtyB,KAAKsM,cAAgBA,CACzB,CACAX,KAAAA,CAAM4mB,GAA+D,IAAlD,aAAEC,GAAe,EAAK,kBAAE3D,GAAmBhwB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI9D,MAAM,gBAAEsO,GAAoBnN,KAAKsM,cACjC,GAAIa,IAAiD,IAA9BA,EAAgBhN,UACnC,OACJ,MAmGM,iBAAEyuB,GAAqB5uB,KAAK2T,WAClC3T,KAAKyyB,WAAa,IAAIhE,GAAW8D,EAAa,CAC1CjC,eArGoBlD,IACpB,MAAM,iBAAEwB,GAAqB5uB,KAAK2T,WAGlCib,EAAmB5uB,KAAK0yB,iBAAmB1yB,KAAK2yB,gBAC5CH,GACAxyB,KAAKwyB,aAAarF,GAAiBC,GAAO3kB,MAC9C,EA+FAmnB,QA7FYA,CAACxC,EAAO8B,KAEpB,MAAM,KAAEzkB,EAAI,gBAAEmoB,EAAe,YAAEC,GAAgB7yB,KAAK2T,WACpD,GAAIlJ,IAASmoB,IACL5yB,KAAK+xB,cACL/xB,KAAK+xB,eACT/xB,KAAK+xB,cAAee,EAAAA,GAAAA,GAAYroB,IAE3BzK,KAAK+xB,cACN,OAER/xB,KAAKqyB,mBAAqBjF,EAC1BptB,KAAKsyB,cAAgBpD,EACrBlvB,KAAKgyB,YAAa,EAClBhyB,KAAKiyB,iBAAmB,KACxBjyB,KAAK+yB,qBACD/yB,KAAKsM,cAAcgC,aACnBtO,KAAKsM,cAAcgC,WAAW0kB,oBAAqB,EACnDhzB,KAAKsM,cAAcgC,WAAWgG,YAAS7V,GAK3C2vB,IAAUrlB,IACN,IAAIrK,EAAUsB,KAAKizB,mBAAmBlqB,GAAM9C,OAAS,EAIrD,GAAIitB,GAAAA,GAAQne,KAAKrW,GAAU,CACvB,MAAM,WAAE4P,GAAetO,KAAKsM,cAC5B,GAAIgC,GAAcA,EAAWvD,OAAQ,CACjC,MAAMooB,EAAe7kB,EAAWvD,OAAOqoB,UAAUrqB,GACjD,GAAIoqB,EAAc,CAEdz0B,EADegvB,GAAWyF,IACNve,WAAWlW,GAAW,IAC9C,CACJ,CACJ,CACAsB,KAAK0I,YAAYK,GAAQrK,CAAO,IAGhCm0B,GACAlkB,EAAAA,GAAM0kB,YAAW,IAAMR,EAAYzF,EAAO8B,KAE9ChL,GAAqBlkB,KAAKsM,cAAe,aACzC,MAAM,eAAEwV,GAAmB9hB,KAAKsM,cAChCwV,GAAkBA,EAAegK,UAAU,aAAa,EAAK,EAgD7D+D,OA9CWA,CAACzC,EAAO8B,KACnBlvB,KAAKqyB,mBAAqBjF,EAC1BptB,KAAKsyB,cAAgBpD,EACrB,MAAM,gBAAE0D,EAAe,kBAAEU,EAAiB,gBAAEC,EAAe,OAAEC,GAAYxzB,KAAK2T,WAE9E,IAAKif,IAAoB5yB,KAAK+xB,aAC1B,OACJ,MAAM,OAAEhZ,GAAWmW,EAEnB,GAAIoE,GAA+C,OAA1BtzB,KAAKiyB,iBAM1B,OALAjyB,KAAKiyB,iBAiXrB,SAA6BlZ,GAA4B,IAApB0a,EAAa50B,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,GAC7C60B,EAAY,KACZzO,KAAKuJ,IAAIzV,EAAOtR,GAAKgsB,EACrBC,EAAY,IAEPzO,KAAKuJ,IAAIzV,EAAO7W,GAAKuxB,IAC1BC,EAAY,KAEhB,OAAOA,CACX,CA1XwCC,CAAoB5a,QAEd,OAA1B/Y,KAAKiyB,kBACLsB,GAAmBA,EAAgBvzB,KAAKiyB,mBAKhDjyB,KAAK4zB,WAAW,IAAK1E,EAAKzmB,MAAOsQ,GACjC/Y,KAAK4zB,WAAW,IAAK1E,EAAKzmB,MAAOsQ,GAOjC/Y,KAAKsM,cAAclL,SAKnBoyB,GAAUA,EAAOpG,EAAO8B,EAAK,EAgB7BgB,aAdiBA,CAAC9C,EAAO8B,KACzBlvB,KAAKqyB,mBAAqBjF,EAC1BptB,KAAKsyB,cAAgBpD,EACrBlvB,KAAK4R,KAAKwb,EAAO8B,GACjBlvB,KAAKqyB,mBAAqB,KAC1BryB,KAAKsyB,cAAgB,IAAI,EAUzBnC,gBARoBA,IAAM/B,IAAUrlB,IAAI,IAAA8qB,EAAA,MAAsC,WAAjC7zB,KAAK8zB,kBAAkB/qB,KAC7B,QAD+C8qB,EACtF7zB,KAAKizB,mBAAmBlqB,GAAMwB,iBAAS,IAAAspB,OAAA,EAAvCA,EAAyCE,OAAO,KAQjD,CACC9sB,mBAAoBjH,KAAKsM,cAAcyH,wBACvC6a,mBACAC,oBACAF,cAAeN,GAAiBruB,KAAKsM,gBAE7C,CAIAsF,IAAAA,CAAKwb,EAAOgD,GACR,MAAM4D,EAAa5G,GAASptB,KAAKqyB,mBAC3B4B,EAAe7D,GAAWpwB,KAAKsyB,cAC/BN,EAAahyB,KAAKgyB,WAExB,GADAhyB,KAAKk0B,UACAlC,IAAeiC,IAAiBD,EACjC,OACJ,MAAM,SAAErnB,GAAasnB,EACrBj0B,KAAKm0B,eAAexnB,GACpB,MAAM,UAAEynB,GAAcp0B,KAAK2T,WACvBygB,GACAzlB,EAAAA,GAAM0kB,YAAW,IAAMe,EAAUJ,EAAYC,IAErD,CAIAC,MAAAA,GACIl0B,KAAKgyB,YAAa,EAClB,MAAM,WAAE1jB,EAAU,eAAEwT,GAAmB9hB,KAAKsM,cACxCgC,IACAA,EAAW0kB,oBAAqB,GAEpChzB,KAAKyyB,YAAczyB,KAAKyyB,WAAWzC,MACnChwB,KAAKyyB,gBAAah0B,EAClB,MAAM,gBAAEm0B,GAAoB5yB,KAAK2T,YAC5Bif,GAAmB5yB,KAAK+xB,eACzB/xB,KAAK+xB,eACL/xB,KAAK+xB,aAAe,MAExBjQ,GAAkBA,EAAegK,UAAU,aAAa,EAC5D,CACA8H,UAAAA,CAAW7qB,EAAMsrB,EAAQtb,GACrB,MAAM,KAAEtO,GAASzK,KAAK2T,WAEtB,IAAKoF,IAAWub,GAAWvrB,EAAM0B,EAAMzK,KAAKiyB,kBACxC,OACJ,MAAMsC,EAAYv0B,KAAKizB,mBAAmBlqB,GAC1C,IAAI6J,EAAO5S,KAAK0I,YAAYK,GAAQgQ,EAAOhQ,GAEvC/I,KAAKkyB,aAAelyB,KAAKkyB,YAAYnpB,KACrC6J,EDtMZ,SAA0BnK,EAAKlH,EAAgB6wB,GAAS,IAAvB,IAAE7qB,EAAG,IAAEC,GAAKjG,EAazC,YAZY9C,IAAR8I,GAAqBkB,EAAQlB,EAE7BkB,EAAQ2pB,GACF1oB,EAAAA,EAAAA,GAAUnC,EAAKkB,EAAO2pB,EAAQ7qB,KAC9B0d,KAAKzd,IAAIiB,EAAOlB,QAET9I,IAAR+I,GAAqBiB,EAAQjB,IAElCiB,EAAQ2pB,GACF1oB,EAAAA,EAAAA,GAAUlC,EAAKiB,EAAO2pB,EAAQ5qB,KAC9Byd,KAAK1d,IAAIkB,EAAOjB,IAEnBiB,CACX,CCwLmB+rB,CAAiB5hB,EAAM5S,KAAKkyB,YAAYnpB,GAAO/I,KAAKoyB,QAAQrpB,KAEvEwrB,EAAU1wB,IAAI+O,EAClB,CACAmgB,kBAAAA,GAAqB,IAAA0B,EACjB,MAAM,gBAAE1T,EAAe,YAAEyQ,GAAgBxxB,KAAK2T,WACxC5I,EAAS/K,KAAKsM,cAAcgC,aAC7BtO,KAAKsM,cAAcgC,WAAWvD,OAC7B/K,KAAKsM,cAAcgC,WAAWomB,SAAQ,GACT,QADeD,EAC5Cz0B,KAAKsM,cAAcgC,kBAAU,IAAAmmB,OAAA,EAA7BA,EAA+B1pB,OAC/B4pB,EAAkB30B,KAAKkyB,YACzBnR,GAAmBrB,GAAYqB,GAC1B/gB,KAAKkyB,cACNlyB,KAAKkyB,YAAclyB,KAAK40B,yBAKxB50B,KAAKkyB,eADLnR,IAAmBhW,IDvLnC,SAAiCqoB,EAAS7P,GAAgC,IAA9B,IAAEziB,EAAG,KAAEE,EAAI,OAAEsG,EAAM,MAAEpG,GAAOqiB,EACpE,MAAO,CACHrhB,EAAGgvB,GAA4BkC,EAAUlxB,EAAGlB,EAAME,GAClDuG,EAAGypB,GAA4BkC,EAAU3rB,EAAG3G,EAAKwG,GAEzD,CCmLmCutB,CAAwB9pB,EAAOqoB,UAAWrS,GAMrE/gB,KAAKoyB,QDhIb,WAA0D,IAA9BZ,EAAW3yB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAGyyB,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHpvB,EAAGqvB,GAAmBC,EAAa,OAAQ,SAC3C/pB,EAAG8pB,GAAmBC,EAAa,MAAO,UAElD,CCqHuBsD,CAAmBtD,GAK9BmD,IAAoB30B,KAAKkyB,aACzBnnB,GACA/K,KAAKkyB,cACJlyB,KAAKmyB,uBACN/D,IAAUrlB,KACmB,IAArB/I,KAAKkyB,aACLlyB,KAAKizB,mBAAmBlqB,KACxB/I,KAAKkyB,YAAYnpB,GD1JrC,SAA+BgC,EAAQmnB,GACnC,MAAM6C,EAAsB,CAAC,EAO7B,YANwBt2B,IAApByzB,EAAY3qB,MACZwtB,EAAoBxtB,IAAM2qB,EAAY3qB,IAAMwD,EAAOxD,UAE/B9I,IAApByzB,EAAY1qB,MACZutB,EAAoBvtB,IAAM0qB,EAAY1qB,IAAMuD,EAAOxD,KAEhDwtB,CACX,CCiJ6CC,CAAsBjqB,EAAOqoB,UAAUrqB,GAAO/I,KAAKkyB,YAAYnpB,IAC5F,GAGZ,CACA6rB,qBAAAA,GACI,MAAQ7T,gBAAiBmR,EAAW,yBAAE+C,GAA6Bj1B,KAAK2T,WACxE,IAAKue,IAAgBxS,GAAYwS,GAC7B,OAAO,EACX,MAAMgD,EAAqBhD,EAAYxzB,SACvCy2B,EAAAA,GAAAA,GAAiC,OAAvBD,EAA6B,yGAA0G,wBACjJ,MAAM,WAAE5mB,GAAetO,KAAKsM,cAE5B,IAAKgC,IAAeA,EAAWvD,OAC3B,OAAO,EACX,MAAMqqB,EtF5Pd,SAAwBr1B,EAASs1B,EAAoBpuB,GACjD,MAAMquB,EAAcvrB,EAAmBhK,EAASkH,IAC1C,OAAEsuB,GAAWF,EAKnB,OAJIE,IACAnsB,EAAcksB,EAAYpzB,EAAGqzB,EAAOxc,OAAO7W,GAC3CkH,EAAcksB,EAAY7tB,EAAG8tB,EAAOxc,OAAOtR,IAExC6tB,CACX,CsFoP+BE,CAAeN,EAAoB5mB,EAAW7M,KAAMzB,KAAKsM,cAAcyH,yBAC9F,IAAI0hB,EDnMZ,SAAiCrC,EAAWgC,GACxC,MAAO,CACHlzB,EAAGivB,GAA4BiC,EAAUlxB,EAAGkzB,EAAelzB,GAC3DuF,EAAG0pB,GAA4BiC,EAAU3rB,EAAG2tB,EAAe3tB,GAEnE,CC8LkCiuB,CAAwBpnB,EAAWvD,OAAOqoB,UAAWgC,GAK/E,GAAIH,EAA0B,CAC1B,MAAMU,EAAkBV,EzF9PpC,SAAgC1R,GAAW,IAAV,EAAErhB,EAAC,EAAEuF,GAAG8b,EACrC,MAAO,CAAEziB,IAAK2G,EAAEF,IAAKrG,MAAOgB,EAAEsF,IAAKF,OAAQG,EAAED,IAAKxG,KAAMkB,EAAEqF,IAC9D,CyF4P6DquB,CAAwBH,IACzEz1B,KAAKmyB,wBAA0BwD,EAC3BA,IACAF,EAAsBpuB,EAAwBsuB,GAEtD,CACA,OAAOF,CACX,CACAtB,cAAAA,CAAexnB,GACX,MAAM,KAAElC,EAAI,aAAEorB,EAAY,YAAErE,EAAW,eAAEsE,EAAc,iBAAElH,EAAgB,oBAAEmH,GAAyB/1B,KAAK2T,WACnGue,EAAclyB,KAAKkyB,aAAe,CAAC,EACnC8D,EAAqB5H,IAAUrlB,IACjC,IAAKurB,GAAWvrB,EAAM0B,EAAMzK,KAAKiyB,kBAC7B,OAEJ,IAAIne,EAAcoe,GAAeA,EAAYnpB,IAAU,CAAC,EACpD6lB,IACA9a,EAAa,CAAEvM,IAAK,EAAGC,IAAK,IAOhC,MAAMyuB,EAAkBzE,EAAc,IAAM,IACtC0E,EAAgB1E,EAAc,GAAK,IACnC2E,GAAOjyB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACT8N,KAAM,UACNrF,SAAUkpB,EAAelpB,EAAS5D,GAAQ,EAC1CktB,kBACAC,gBACAE,aAAc,IACdC,UAAW,EACX1R,UAAW,IACRmR,GACAhiB,GAKP,OAAO9T,KAAKs2B,wBAAwBvtB,EAAMotB,EAAQ,IAGtD,OAAOhO,QAAQC,IAAI4N,GAAoB3N,KAAK0N,EAChD,CACAO,uBAAAA,CAAwBvtB,EAAM+K,GAC1B,MAAMygB,EAAYv0B,KAAKizB,mBAAmBlqB,GAE1C,OADAmb,GAAqBlkB,KAAKsM,cAAevD,GAClCwrB,EAAU5oB,MAAMwZ,GAAmBpc,EAAMwrB,EAAW,EAAGzgB,EAAY9T,KAAKsM,eAAe,GAClG,CACAqmB,aAAAA,GACIvE,IAAUrlB,GAAS/I,KAAKizB,mBAAmBlqB,GAAM6I,QACrD,CACA8gB,cAAAA,GACItE,IAAUrlB,IAAI,IAAAwtB,EAAA,OAA4C,QAA5CA,EAAKv2B,KAAKizB,mBAAmBlqB,GAAMwB,iBAAS,IAAAgsB,OAAA,EAAvCA,EAAyCC,OAAO,GACvE,CACA1C,iBAAAA,CAAkB/qB,GAAM,IAAA0tB,EACpB,OAA8C,QAA9CA,EAAOz2B,KAAKizB,mBAAmBlqB,GAAMwB,iBAAS,IAAAksB,OAAA,EAAvCA,EAAyClqB,KACpD,CAOA0mB,kBAAAA,CAAmBlqB,GACf,MAAM2tB,EAAU,QAAHv0B,OAAW4G,EAAKyR,eACvBva,EAAQD,KAAKsM,cAAcqH,WAC3BgjB,EAAsB12B,EAAMy2B,GAClC,OAAOC,GAED32B,KAAKsM,cAAc8G,SAASrK,GAAO9I,EAAMgD,QACrChD,EAAMgD,QAAQ8F,QACdtK,IAAc,EAC5B,CACA+zB,YAAAA,CAAa/pB,GACT2lB,IAAUrlB,IACN,MAAM,KAAE0B,GAASzK,KAAK2T,WAEtB,IAAK2gB,GAAWvrB,EAAM0B,EAAMzK,KAAKiyB,kBAC7B,OACJ,MAAM,WAAE3jB,GAAetO,KAAKsM,cACtBioB,EAAYv0B,KAAKizB,mBAAmBlqB,GAC1C,GAAIuF,GAAcA,EAAWvD,OAAQ,CACjC,MAAM,IAAExD,EAAG,IAAEC,GAAQ8G,EAAWvD,OAAOqoB,UAAUrqB,GACjDwrB,EAAU1wB,IAAI4E,EAAMM,IAAQW,EAAAA,EAAAA,GAAUnC,EAAKC,EAAK,IACpD,IAER,CAMAovB,8BAAAA,GACI,IAAK52B,KAAKsM,cAAc5N,QACpB,OACJ,MAAM,KAAE+L,EAAI,gBAAEsW,GAAoB/gB,KAAK2T,YACjC,WAAErF,GAAetO,KAAKsM,cAC5B,IAAKoT,GAAYqB,KAAqBzS,IAAetO,KAAKkyB,YACtD,OAKJlyB,KAAK2yB,gBAKL,MAAMkE,EAAc,CAAE30B,EAAG,EAAGuF,EAAG,GAC/B2mB,IAAUrlB,IACN,MAAMwrB,EAAYv0B,KAAKizB,mBAAmBlqB,GAC1C,GAAIwrB,IAAkC,IAArBv0B,KAAKkyB,YAAuB,CACzC,MAAM9b,EAASme,EAAUtuB,MACzB4wB,EAAY9tB,GDlT5B,SAAoBmT,EAAQ5H,GACxB,IAAIuZ,EAAS,GACb,MAAMiJ,EAAepJ,GAAWxR,GAC1B6a,EAAerJ,GAAWpZ,GAOhC,OANIyiB,EAAeD,EACfjJ,GAASmJ,EAAAA,GAAAA,GAAS1iB,EAAO/M,IAAK+M,EAAO9M,IAAMsvB,EAAc5a,EAAO3U,KAE3DuvB,EAAeC,IACpBlJ,GAASmJ,EAAAA,GAAAA,GAAS9a,EAAO3U,IAAK2U,EAAO1U,IAAMuvB,EAAcziB,EAAO/M,OAE7D0vB,EAAAA,GAAAA,GAAM,EAAG,EAAGpJ,EACvB,CCuSoCqJ,CAAW,CAAE3vB,IAAK6O,EAAQ5O,IAAK4O,GAAUpW,KAAKkyB,YAAYnpB,GAClF,KAKJ,MAAM,kBAAE0J,GAAsBzS,KAAKsM,cAAcqH,WACjD3T,KAAKsM,cAAc5N,QAAQ4D,MAAMsH,UAAY6I,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNnE,EAAW7M,MAAQ6M,EAAW7M,KAAK01B,eACnC7oB,EAAW8oB,eACXp3B,KAAK+yB,qBAKL3E,IAAUrlB,IACN,IAAKurB,GAAWvrB,EAAM0B,EAAM,MACxB,OAIJ,MAAM8pB,EAAYv0B,KAAKizB,mBAAmBlqB,IACpC,IAAExB,EAAG,IAAEC,GAAQxH,KAAKkyB,YAAYnpB,GACtCwrB,EAAU1wB,KAAI6F,EAAAA,EAAAA,GAAUnC,EAAKC,EAAKqvB,EAAY9tB,IAAO,GAE7D,CACAsuB,YAAAA,GACI,IAAKr3B,KAAKsM,cAAc5N,QACpB,OACJmzB,GAAoBhuB,IAAI7D,KAAKsM,cAAetM,MAC5C,MAIMs3B,EAAsB/J,GAJZvtB,KAAKsM,cAAc5N,QAIkB,eAAgB0uB,IACjE,MAAM,KAAE3iB,EAAI,aAAEgS,GAAe,GAASzc,KAAK2T,WAC3ClJ,GAAQgS,GAAgBzc,KAAK2L,MAAMyhB,EAAM,IAEvCmK,EAAyBA,KAC3B,MAAM,gBAAExW,GAAoB/gB,KAAK2T,WAC7B+L,GAAYqB,IAAoBA,EAAgBriB,UAChDsB,KAAKkyB,YAAclyB,KAAK40B,wBAC5B,GAEE,WAAEtmB,GAAetO,KAAKsM,cACtBkrB,EAA4BlpB,EAAW4B,iBAAiB,UAAWqnB,GACrEjpB,IAAeA,EAAWvD,SAC1BuD,EAAW7M,MAAQ6M,EAAW7M,KAAK01B,eACnC7oB,EAAW8oB,gBAEfzoB,EAAAA,GAAM8oB,KAAKF,GAKX,MAAMG,EAAqB3K,GAAYld,OAAQ,UAAU,IAAM7P,KAAK42B,mCAK9De,EAA2BrpB,EAAW4B,iBAAiB,aAAc3O,IAAiC,IAAhC,MAAEqsB,EAAK,iBAAEgK,GAAkBr2B,EAC/FvB,KAAKgyB,YAAc4F,IACnBxJ,IAAUrlB,IACN,MAAMkK,EAAcjT,KAAKizB,mBAAmBlqB,GACvCkK,IAELjT,KAAK0I,YAAYK,IAAS6kB,EAAM7kB,GAAMH,UACtCqK,EAAYpP,IAAIoP,EAAYhN,MAAQ2nB,EAAM7kB,GAAMH,WAAU,IAE9D5I,KAAKsM,cAAclL,SACvB,IAEJ,MAAO,KACHs2B,IACAJ,IACAE,IACAG,GAA4BA,GAA0B,CAE9D,CACAhkB,QAAAA,GACI,MAAM1T,EAAQD,KAAKsM,cAAcqH,YAC3B,KAAElJ,GAAO,EAAK,kBAAE6oB,GAAoB,EAAK,gBAAEV,GAAkB,EAAK,gBAAE7R,GAAkB,EAAK,YAAEyQ,EAAcF,GAAc,aAAEuE,GAAe,GAAU51B,EAC1J,OAAAiE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOjE,GAAK,IACRwK,OACA6oB,oBACAV,kBACA7R,kBACAyQ,cACAqE,gBAER,EAEJ,SAASvB,GAAWZ,EAAWjpB,EAAMwnB,GACjC,QAAkB,IAATxnB,GAAiBA,IAASipB,KACT,OAArBzB,GAA6BA,IAAqByB,EAC3D,CCvdA,MAAMmE,GAAgB7K,GAAY,CAACI,EAAO8B,KAClClC,GACAre,EAAAA,GAAM0kB,YAAW,IAAMrG,EAAQI,EAAO8B,IAC1C,E,eCLJ,MAAM4I,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQnvB,GAC7B,OAAIA,EAAKvB,MAAQuB,EAAKxB,IACX,EACH2wB,GAAUnvB,EAAKvB,IAAMuB,EAAKxB,KAAQ,GAC9C,CAQA,MAAM4wB,GAAsB,CACxBC,QAASA,CAAChiB,EAAQ/W,KACd,IAAKA,EAAKiV,OACN,OAAO8B,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI6D,GAAAA,GAAGlF,KAAKqB,GAIR,OAAOA,EAHPA,EAASxB,WAAWwB,EAK5B,CAKA,MAAMlU,EAAI+1B,GAAgB7hB,EAAQ/W,EAAKiV,OAAOpS,GACxCuF,EAAIwwB,GAAgB7hB,EAAQ/W,EAAKiV,OAAO7M,GAC9C,MAAO,GAAPtF,OAAUD,EAAC,MAAAC,OAAKsF,EAAC,OClCnB4wB,GAAmB,CACrBD,QAASA,CAAChiB,EAAM7U,KAAqC,IAAnC,UAAE+2B,EAAS,gBAAEC,GAAiBh3B,EAC5C,MAAMi3B,EAAWpiB,EACXqiB,EAAS3jB,EAAAA,EAAQ4jB,MAAMtiB,GAE7B,GAAIqiB,EAAO35B,OAAS,EAChB,OAAO05B,EACX,MAAMG,EAAW7jB,EAAAA,EAAQ8jB,kBAAkBxiB,GACrC2C,EAA8B,kBAAd0f,EAAO,GAAkB,EAAI,EAE7CI,EAASN,EAAgBr2B,EAAEyF,MAAQ2wB,EAAUp2B,EAC7C42B,EAASP,EAAgB9wB,EAAEE,MAAQ2wB,EAAU7wB,EACnDgxB,EAAO,EAAI1f,IAAW8f,EACtBJ,EAAO,EAAI1f,IAAW+f,EAOtB,MAAMC,GAAervB,EAAAA,EAAAA,GAAUmvB,EAAQC,EAAQ,IAO/C,MALkC,kBAAvBL,EAAO,EAAI1f,KAClB0f,EAAO,EAAI1f,IAAWggB,GAEQ,kBAAvBN,EAAO,EAAI1f,KAClB0f,EAAO,EAAI1f,IAAWggB,GACnBJ,EAASF,EAAO,GCT/B,IAAIO,IAAsB,EAC1B,MAAMC,WAAiC5d,EAAAA,UAMnC6d,iBAAAA,GACI,MAAM,cAAE5sB,EAAa,YAAE6sB,EAAW,kBAAEC,EAAiB,SAAErhB,GAAa/X,KAAKC,OACnE,WAAEqO,GAAehC,G1E1B/B,SAA2B+sB,GACvB,IAAK,MAAMh1B,KAAOg1B,EACdxhB,GAAgBxT,GAAOg1B,EAAWh1B,IAC9BwS,EAAAA,EAAAA,GAAkBxS,KAClBwT,GAAgBxT,GAAKi1B,eAAgB,EAGjD,C0EoBQC,CAAkBC,IACdlrB,IACI6qB,EAAYM,OACZN,EAAYM,MAAM3oB,IAAIxC,GACtB8qB,GAAqBA,EAAkBp1B,UAAY+T,GACnDqhB,EAAkBp1B,SAASsK,GAE3B0qB,IACA1qB,EAAW7M,KAAKi4B,YAEpBprB,EAAW4B,iBAAiB,qBAAqB,KAC7ClQ,KAAKmF,cAAc,IAEvBmJ,EAAW8S,YAAUld,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAChBoK,EAAWf,SAAO,IACrBrK,eAAgBA,IAAMlD,KAAKmF,mBAGnC2yB,GAAsBE,gBAAiB,CAC3C,CACAn4B,uBAAAA,CAAwBC,GACpB,MAAM,iBAAE65B,EAAgB,cAAErtB,EAAa,KAAE7B,EAAI,UAAEtK,GAAcH,KAAKC,OAC5D,WAAEqO,GAAehC,EACvB,OAAKgC,GASLA,EAAWnO,UAAYA,EACvB64B,IAAsB,EAClBvuB,GACA3K,EAAU65B,mBAAqBA,QACVl7B,IAArBk7B,GACA75B,EAAUK,YAAcA,EACxBmO,EAAWsrB,aAGX55B,KAAKmF,eAELrF,EAAUK,YAAcA,IACpBA,EACAmO,EAAWurB,UAELvrB,EAAWwrB,YAMjBnrB,EAAAA,GAAM0kB,YAAW,KACb,MAAM0G,EAAQzrB,EAAW0rB,WACpBD,GAAUA,EAAME,QAAQn7B,QACzBkB,KAAKmF,cACT,KAIL,MArCI,IAsCf,CACAhE,kBAAAA,GACI,MAAM,WAAEmN,GAAetO,KAAKC,MAAMqM,cAC9BgC,IACAA,EAAW7M,KAAKi4B,YAChB/jB,EAAAA,EAAU0d,YAAW,MACZ/kB,EAAW4rB,kBAAoB5rB,EAAW6rB,UAC3Cn6B,KAAKmF,cACT,IAGZ,CACAi1B,oBAAAA,GACI,MAAM,cAAE9tB,EAAa,YAAE6sB,EAAaC,kBAAmBiB,GAAoBr6B,KAAKC,OAC1E,WAAEqO,GAAehC,EACvB0sB,IAAsB,EAClB1qB,IACAA,EAAWgsB,4BACPnB,GAAeA,EAAYM,OAC3BN,EAAYM,MAAMhpB,OAAOnC,GACzB+rB,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWjsB,GAEtC,CACAnJ,YAAAA,GACI,MAAM,aAAEA,GAAiBnF,KAAKC,MAC9BkF,GAAgBA,GACpB,CACA/D,MAAAA,GACI,OAAO,IACX,EAEJ,SAASshB,GAAcziB,GACnB,MAAOE,EAAWgF,IAAgBC,EAAAA,GAAAA,MAC5B+zB,GAAcr3B,EAAAA,EAAAA,YAAWyE,GAAAA,GAC/B,OAAQxD,EAAAA,GAAAA,KAAIk2B,IAAwB/0B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOjE,GAAK,IAAEk5B,YAAaA,EAAaC,mBAAmBt3B,EAAAA,EAAAA,YAAWoe,IAA2B/f,UAAWA,EAAWgF,aAAcA,IAC7K,CACA,MAAMq0B,GAAyB,CAC3BgB,cAAYt2B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLi0B,IAAmB,IACtBsC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRC,oBAAqBvC,GACrBwC,qBAAsBxC,GACtByC,uBAAwBzC,GACxB0C,wBAAyB1C,GACzB2C,UAAWzC,I,8DC/If,MAAM0C,GAAiBA,CAAChlB,EAAGC,IAAMD,EAAEjH,MAAQkH,EAAElH,MCG7C,MAAMksB,GACF9tB,WAAAA,GACIlN,KAAKqB,SAAW,GAChBrB,KAAKi7B,SAAU,CACnB,CACAnqB,GAAAA,CAAIpM,IACAw2B,EAAAA,GAAAA,IAAcl7B,KAAKqB,SAAUqD,GAC7B1E,KAAKi7B,SAAU,CACnB,CACAxqB,MAAAA,CAAO/L,IACHy2B,EAAAA,GAAAA,IAAWn7B,KAAKqB,SAAUqD,GAC1B1E,KAAKi7B,SAAU,CACnB,CACA92B,OAAAA,CAAQoR,GACJvV,KAAKi7B,SAAWj7B,KAAKqB,SAASmnB,KAAKuS,IACnC/6B,KAAKi7B,SAAU,EACfj7B,KAAKqB,SAAS8C,QAAQoR,EAC1B,ECdJ,SAASiQ,GAAMjQ,EAAU6lB,GACrB,MAAMzvB,EAAQ+C,EAAAA,EAAKD,MACb4sB,EAAe95B,IAAmB,IAAlB,UAAEmuB,GAAWnuB,EAC/B,MAAMkkB,EAAUiK,EAAY/jB,EACxB8Z,GAAW2V,KACX5qB,EAAAA,EAAAA,IAAY6qB,GACZ9lB,EAASkQ,EAAU2V,GACvB,EAGJ,OADAzsB,EAAAA,GAAM2sB,MAAMD,GAAc,GACnB,KAAM7qB,EAAAA,EAAAA,IAAY6qB,EAC7B,C,eCdA,MAAME,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQz8B,OACrB28B,GAAYj9B,GAA2B,kBAAVA,EAAqBoW,WAAWpW,GAASA,EACtEk9B,GAAQl9B,GAA2B,kBAAVA,GAAsByb,GAAAA,GAAGlF,KAAKvW,GAwC7D,SAASm9B,GAAU53B,EAAQ63B,GACvB,YAA8Bn9B,IAAvBsF,EAAO63B,GACR73B,EAAO63B,GACP73B,EAAOy2B,YACjB,CAwBA,MAAMqB,GAAgCC,GAAS,EAAG,GAAKC,GAAAA,IACjDC,GAAiCF,GAAS,GAAK,IAAMG,GAAAA,GAC3D,SAASH,GAASv0B,EAAKC,EAAK00B,GACxB,OAAQh1B,GAEAA,EAAIK,EACG,EACPL,EAAIM,EACG,EACJ00B,GAAOlF,EAAAA,GAAAA,GAASzvB,EAAKC,EAAKN,GAEzC,CChFA,SAASi1B,GAAapzB,EAAMqzB,GACxBrzB,EAAKxB,IAAM60B,EAAW70B,IACtBwB,EAAKvB,IAAM40B,EAAW50B,GAC1B,CAMA,SAAS60B,GAAYpzB,EAAKqzB,GACtBH,GAAalzB,EAAI/G,EAAGo6B,EAAUp6B,GAC9Bi6B,GAAalzB,EAAIxB,EAAG60B,EAAU70B,EAClC,CAMA,SAAS80B,GAAkB3O,EAAO4O,GAC9B5O,EAAMhlB,UAAY4zB,EAAY5zB,UAC9BglB,EAAMjmB,MAAQ60B,EAAY70B,MAC1BimB,EAAMllB,YAAc8zB,EAAY9zB,YAChCklB,EAAMC,OAAS2O,EAAY3O,MAC/B,CCtBA,SAAS4O,GAAiBh0B,EAAOG,EAAWjB,EAAOe,EAAaG,GAM5D,OAJAJ,EAAQD,EADRC,GAASG,EACiB,EAAIjB,EAAOe,QACpBjK,IAAboK,IACAJ,EAAQD,EAAWC,EAAO,EAAII,EAAUH,IAErCD,CACX,CAsBA,SAASi0B,GAAqB3zB,EAAM4zB,EAAUp7B,EAA8BssB,EAAQ+O,GAAY,IAA/Cv4B,EAAKw4B,EAAUC,GAAUv7B,GAlB1E,SAAyBwH,GAA8F,IAAxFH,EAAS/J,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAG8I,EAAK9I,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAGgvB,EAAMhvB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,GAAKgK,EAAQhK,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAAE29B,EAAUv9B,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAGkK,EAAM6zB,EAAU/9B,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAGkK,EACzGmqB,GAAAA,GAAQne,KAAKnM,KACbA,EAAYgM,WAAWhM,GAEvBA,GADyBc,EAAAA,EAAAA,GAAUkzB,EAAWr1B,IAAKq1B,EAAWp1B,IAAKoB,EAAY,KAChDg0B,EAAWr1B,KAE9C,GAAyB,kBAAdqB,EACP,OACJ,IAAIF,GAAcgB,EAAAA,EAAAA,GAAU0yB,EAAW70B,IAAK60B,EAAW50B,IAAKqmB,GACxD9kB,IAASqzB,IACT1zB,GAAeE,GACnBG,EAAKxB,IAAMk1B,GAAiB1zB,EAAKxB,IAAKqB,EAAWjB,EAAOe,EAAaG,GACrEE,EAAKvB,IAAMi1B,GAAiB1zB,EAAKvB,IAAKoB,EAAWjB,EAAOe,EAAaG,EACzE,CAMIk0B,CAAgBh0B,EAAM4zB,EAAWt4B,GAAMs4B,EAAWE,GAAWF,EAAWG,GAAYH,EAAWh1B,MAAOkmB,EAAQ+O,EAClH,CAIA,MAAMI,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoBj0B,EAAK0zB,EAAYL,EAAWa,GACrDT,GAAqBzzB,EAAI/G,EAAGy6B,EAAYK,GAAOV,EAAYA,EAAUp6B,OAAIzD,EAAW0+B,EAAYA,EAAUj7B,OAAIzD,GAC9Gi+B,GAAqBzzB,EAAIxB,EAAGk1B,EAAYM,GAAOX,EAAYA,EAAU70B,OAAIhJ,EAAW0+B,EAAYA,EAAU11B,OAAIhJ,EAClH,CChDA,SAAS2+B,GAAgBxP,GACrB,OAA2B,IAApBA,EAAMhlB,WAAmC,IAAhBglB,EAAMjmB,KAC1C,CACA,SAAS01B,GAAYzP,GACjB,OAAOwP,GAAgBxP,EAAM1rB,IAAMk7B,GAAgBxP,EAAMnmB,EAC7D,CACA,SAAS61B,GAAWvnB,EAAGC,GACnB,OAAOD,EAAExO,MAAQyO,EAAEzO,KAAOwO,EAAEvO,MAAQwO,EAAExO,GAC1C,CAIA,SAAS+1B,GAAkBxnB,EAAGC,GAC1B,OAAQiP,KAAKuY,MAAMznB,EAAExO,OAAS0d,KAAKuY,MAAMxnB,EAAEzO,MACvC0d,KAAKuY,MAAMznB,EAAEvO,OAASyd,KAAKuY,MAAMxnB,EAAExO,IAC3C,CACA,SAASi2B,GAAiB1nB,EAAGC,GACzB,OAAOunB,GAAkBxnB,EAAE7T,EAAG8T,EAAE9T,IAAMq7B,GAAkBxnB,EAAEtO,EAAGuO,EAAEvO,EACnE,CACA,SAASi2B,GAAYz0B,GACjB,OAAOykB,GAAWzkB,EAAI/G,GAAKwrB,GAAWzkB,EAAIxB,EAC9C,CACA,SAASk2B,GAAgB5nB,EAAGC,GACxB,OAAQD,EAAEnN,YAAcoN,EAAEpN,WACtBmN,EAAEpO,QAAUqO,EAAErO,OACdoO,EAAErN,cAAgBsN,EAAEtN,WAC5B,CC1BA,MAAMk1B,GACF1wB,WAAAA,GACIlN,KAAKi6B,QAAU,EACnB,CACAnpB,GAAAA,CAAIzR,IACA67B,EAAAA,GAAAA,IAAcl7B,KAAKi6B,QAAS56B,GAC5BA,EAAKmP,gBACT,CACAiC,MAAAA,CAAOpR,GAKH,IAJA87B,EAAAA,GAAAA,IAAWn7B,KAAKi6B,QAAS56B,GACrBA,IAASW,KAAK69B,WACd79B,KAAK69B,cAAWp/B,GAEhBY,IAASW,KAAK89B,KAAM,CACpB,MAAMD,EAAW79B,KAAKi6B,QAAQj6B,KAAKi6B,QAAQn7B,OAAS,GAChD++B,GACA79B,KAAK65B,QAAQgE,EAErB,CACJ,CACA/D,QAAAA,CAASz6B,GACL,MAAM0+B,EAAc/9B,KAAKi6B,QAAQ+D,WAAWC,GAAW5+B,IAAS4+B,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIn+B,EAAIq+B,EAAar+B,GAAK,EAAGA,IAAK,CACnC,MAAMu+B,EAASj+B,KAAKi6B,QAAQv6B,GAC5B,IAAyB,IAArBu+B,EAAO99B,UAAqB,CAC5B09B,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACA79B,KAAK65B,QAAQgE,IACN,EAKf,CACAhE,OAAAA,CAAQx6B,EAAM6+B,GACV,MAAML,EAAW79B,KAAK89B,KACtB,GAAIz+B,IAASw+B,IAEb79B,KAAK69B,SAAWA,EAChB79B,KAAK89B,KAAOz+B,EACZA,EAAK8+B,OACDN,GAAU,CACVA,EAAS7zB,UAAY6zB,EAASrvB,iBAC9BnP,EAAKmP,iBACLnP,EAAK++B,WAAaP,EACdK,IACA7+B,EAAK++B,WAAWC,iBAAkB,GAElCR,EAASS,WACTj/B,EAAKi/B,SAAWT,EAASS,SACzBj/B,EAAKi/B,SAASpwB,aACV2vB,EAASU,iBAAmBV,EAAS3vB,cAEzC7O,EAAKoC,MAAQpC,EAAKoC,KAAK+8B,aACvBn/B,EAAKo/B,eAAgB,GAEzB,MAAM,UAAEld,GAAcliB,EAAKkO,SACT,IAAdgU,GACAsc,EAASa,MAcjB,CACJ,CACAC,qBAAAA,GACI3+B,KAAKi6B,QAAQ91B,SAAS9E,IAClB,MAAM,QAAEkO,EAAO,aAAEqxB,GAAiBv/B,EAClCkO,EAAQrK,gBAAkBqK,EAAQrK,iBAC9B07B,GACAA,EAAarxB,QAAQrK,gBACjB07B,EAAarxB,QAAQrK,gBAC7B,GAER,CACAsL,cAAAA,GACIxO,KAAKi6B,QAAQ91B,SAAS9E,IAClBA,EAAK2K,UAAY3K,EAAKmP,gBAAe,EAAM,GAEnD,CAKAqwB,kBAAAA,GACQ7+B,KAAK89B,MAAQ99B,KAAK89B,KAAKQ,WACvBt+B,KAAK89B,KAAKQ,cAAW7/B,EAE7B,ECvFJ,MAAMqgC,GAAU,CACZC,MAAO,EACPC,uBAAwB,EACxBC,sBAAuB,GAErBC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMrC,IAAIx9B,GAAK,EACT,SAASy9B,GAAyB96B,EAAKiI,EAAevI,EAAQq7B,GAC1D,MAAM,aAAElxB,GAAiB5B,EAErB4B,EAAa7J,KACbN,EAAOM,GAAO6J,EAAa7J,GAC3BiI,EAAckG,eAAenO,EAAK,GAC9B+6B,IACAA,EAAsB/6B,GAAO,GAGzC,CACA,SAASg7B,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAe79B,OAAS69B,EACxB,OACJ,MAAM,cAAEhzB,GAAkBgzB,EAAe/xB,QACzC,IAAKjB,EACD,OACJ,MAAM0b,EAAW1D,GAAqBhY,GACtC,GAAIuD,OAAO+R,4BAA4BoG,EAAU,aAAc,CAC3D,MAAM,OAAEjd,EAAM,SAAEgN,GAAaunB,EAAe/xB,QAC5CsC,OAAO2vB,+BAA+BxX,EAAU,YAAarZ,EAAAA,KAAS5D,GAAUgN,GACpF,CACA,MAAM,OAAE3X,GAAWk/B,EACfl/B,IAAWA,EAAOm/B,2BAClBF,GAAuCj/B,EAE/C,CACA,SAASohB,GAAoBjgB,GAA6F,IAA5F,qBAAEk+B,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiBt+B,EACpH,OAAO,MACH2L,WAAAA,GAA2D,IAA/CgB,EAAYrP,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGuB,EAAMvB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAgB,OAAb6gC,QAAa,IAAbA,OAAa,EAAbA,IAIpC1/B,KAAK0B,GAAKA,KAIV1B,KAAK8/B,YAAc,EACnB9/B,KAAK+/B,kBAAoB,EAOzB//B,KAAKqB,SAAW,IAAImM,IAKpBxN,KAAKuN,QAAU,CAAC,EAMhBvN,KAAKggC,iBAAkB,EACvBhgC,KAAKgzB,oBAAqB,EAO1BhzB,KAAKy+B,eAAgB,EAKrBz+B,KAAKigC,mBAAoB,EAKzBjgC,KAAKkgC,yBAA0B,EAK/BlgC,KAAKwR,kBAAmB,EAIxBxR,KAAKmgC,uBAAwB,EAC7BngC,KAAKogC,uBAAwB,EAK7BpgC,KAAKw+B,YAAa,EAIlBx+B,KAAKqgC,OAAQ,EAKbrgC,KAAKsgC,YAAa,EAIlBtgC,KAAKugC,sBAAuB,EAO5BvgC,KAAKu/B,2BAA4B,EASjCv/B,KAAKs4B,UAAY,CAAEp2B,EAAG,EAAGuF,EAAG,GAI5BzH,KAAKwgC,cAAgB,IAAIh8B,IACzBxE,KAAKygC,iBAAkB,EAEvBzgC,KAAK0gC,iBAAkB,EACvB1gC,KAAK2gC,eAAiB,IAAM3gC,KAAKqQ,SACjCrQ,KAAK4gC,2BAA4B,EACjC5gC,KAAK6gC,kBAAoB,KACjB7gC,KAAKw+B,aACLx+B,KAAKw+B,YAAa,EAClBx+B,KAAK8gC,oBACT,EAOJ9gC,KAAK+gC,iBAAmB,KACpB/gC,KAAK4gC,2BAA4B,EAK7BI,GAAAA,EAAYxiC,QACZsgC,GAAQC,MACJD,GAAQE,uBACJF,GAAQG,sBACJ,GAEhBj/B,KAAK++B,MAAM56B,QAAQ88B,IACnBjhC,KAAK++B,MAAM56B,QAAQ+8B,IACnBlhC,KAAK++B,MAAM56B,QAAQg9B,IACnBnhC,KAAK++B,MAAM56B,QAAQi9B,IACfJ,GAAAA,EAAYK,sBACZL,GAAAA,EAAYK,qBAAqBvC,GACrC,EAKJ9+B,KAAKshC,yBAA2B,EAChCthC,KAAKuhC,cAAe,EACpBvhC,KAAKwhC,WAAY,EACjBxhC,KAAKyhC,kBAAoB,EAKzBzhC,KAAK0hC,YAAc,IAAIl9B,IACvBxE,KAAKkO,aAAeA,EACpBlO,KAAKyB,KAAOrB,EAASA,EAAOqB,MAAQrB,EAASJ,KAC7CA,KAAK2hC,KAAOvhC,EAAS,IAAIA,EAAOuhC,KAAMvhC,GAAU,GAChDJ,KAAKI,OAASA,EACdJ,KAAK8O,MAAQ1O,EAASA,EAAO0O,MAAQ,EAAI,EACzC,IAAK,IAAIpP,EAAI,EAAGA,EAAIM,KAAK2hC,KAAK7iC,OAAQY,IAClCM,KAAK2hC,KAAKjiC,GAAG6gC,sBAAuB,EAEpCvgC,KAAKyB,OAASzB,OACdA,KAAK++B,MAAQ,IAAI/D,GACzB,CACA9qB,gBAAAA,CAAiB/E,EAAM6hB,GAInB,OAHKhtB,KAAKwgC,cAAc95B,IAAIyE,IACxBnL,KAAKwgC,cAAc38B,IAAIsH,EAAM,IAAIqK,EAAAA,GAE9BxV,KAAKwgC,cAAcv6B,IAAIkF,GAAM2F,IAAIkc,EAC5C,CACA4U,eAAAA,CAAgBz2B,GACZ,MAAM02B,EAAsB7hC,KAAKwgC,cAAcv6B,IAAIkF,GAAM,QAAAhM,EAAAN,UAAAC,OADpC2W,EAAI,IAAAzW,MAAAG,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJqW,EAAIrW,EAAA,GAAAP,UAAAO,GAEzByiC,GAAuBA,EAAoB5zB,UAAUwH,EACzD,CACAqsB,YAAAA,CAAa32B,GACT,OAAOnL,KAAKwgC,cAAc95B,IAAIyE,EAClC,CAIAoE,KAAAA,CAAMvF,GACF,GAAIhK,KAAKgK,SACL,OACJhK,KAAKqgC,OAAQ0B,EAAAA,GAAAA,GAAa/3B,MAAcg4B,EAAAA,GAAAA,GAAgBh4B,GACxDhK,KAAKgK,SAAWA,EAChB,MAAM,SAAE+N,EAAQ,OAAEhN,EAAM,cAAEuB,GAAkBtM,KAAKuN,QASjD,GARIjB,IAAkBA,EAAc5N,SAChC4N,EAAciD,MAAMvF,GAExBhK,KAAKyB,KAAKs9B,MAAMjuB,IAAI9Q,MACpBA,KAAKI,QAAUJ,KAAKI,OAAOiB,SAASyP,IAAI9Q,MACpCA,KAAKyB,KAAKg/B,kBAAoB11B,GAAUgN,KACxC/X,KAAKy+B,eAAgB,GAErBgB,EAAsB,CACtB,IAAIwC,EACAC,EAAa,EACjB,MAAMC,EAAsBA,IAAOniC,KAAKyB,KAAK2+B,uBAAwB,EAErEzxB,EAAAA,GAAM8oB,MAAK,KACPyK,EAAaryB,OAAOqyB,UAAU,IAElCzC,EAAqBz1B,GAAU,KAC3B,MAAMo4B,EAAgBvyB,OAAOqyB,WACzBE,IAAkBF,IAEtBA,EAAaE,EACbpiC,KAAKyB,KAAK2+B,uBAAwB,EAClC6B,GAAeA,IACfA,EAAczc,GAAM2c,EAAqB,KACrCrK,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C/3B,KAAK++B,MAAM56B,QAAQk+B,KACvB,GAER,CACItqB,GACA/X,KAAKyB,KAAK6gC,mBAAmBvqB,EAAU/X,OAGd,IAAzBA,KAAKuN,QAAQtB,SACbK,IACCyL,GAAYhN,IACb/K,KAAKkQ,iBAAiB,aAAaqT,IAA+E,IAA9E,MAAEqK,EAAK,iBAAEgK,EAAgB,yBAAE2K,EAA0Bx3B,OAAQy3B,GAAYjf,EACzG,GAAIvjB,KAAKyiC,yBAGL,OAFAziC,KAAKsU,YAAS7V,OACduB,KAAK0iC,oBAAiBjkC,GAI1B,MAAMkkC,EAAmB3iC,KAAKuN,QAAQuG,YAClCxH,EAAcuH,wBACd+uB,IACE,uBAAEC,EAAsB,0BAAEC,GAA+Bx2B,EAAcqH,WAKvEovB,GAAoB/iC,KAAKgjC,eAC1BvF,GAAiBz9B,KAAKgjC,aAAcR,GAYnCS,GAAgCrL,GAAoB2K,EAC1D,GAAIviC,KAAKuN,QAAQ0T,YACbjhB,KAAKo+B,YACL6E,GACCrL,IACImL,IAAqB/iC,KAAKk6B,kBAAoB,CAC/Cl6B,KAAKo+B,aACLp+B,KAAK4+B,aAAe5+B,KAAKo+B,WACzBp+B,KAAK4+B,aAAaA,kBAAengC,GAErC,MAAMykC,GAAgBh/B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACfqhB,EAAAA,GAAAA,GAAmBod,EAAkB,WAAS,IACjDQ,OAAQN,EACRxd,WAAYyd,KAEZx2B,EAAcmB,oBACdzN,KAAKuN,QAAQ0T,cACbiiB,EAAiB1d,MAAQ,EACzB0d,EAAiBlxB,MAAO,GAE5BhS,KAAKm0B,eAAe+O,GAKpBljC,KAAKojC,mBAAmBxV,EAAOqV,EACnC,MAOSrL,GACDyK,GAAgBriC,MAEhBA,KAAKm6B,UAAYn6B,KAAKuN,QAAQrK,gBAC9BlD,KAAKuN,QAAQrK,iBAGrBlD,KAAKgjC,aAAeR,CAAS,GAGzC,CACAlyB,OAAAA,GACItQ,KAAKuN,QAAQwK,UAAY/X,KAAK45B,aAC9B55B,KAAKyB,KAAKs9B,MAAMtuB,OAAOzQ,MACvB,MAAM+5B,EAAQ/5B,KAAKg6B,WACnBD,GAASA,EAAMtpB,OAAOzQ,MACtBA,KAAKI,QAAUJ,KAAKI,OAAOiB,SAAS4C,OAAOjE,MAC3CA,KAAKgK,cAAWvL,EAChBuB,KAAKwgC,cAAc9vB,SACnBF,EAAAA,EAAAA,IAAYxQ,KAAK+gC,iBACrB,CAEAsC,WAAAA,GACIrjC,KAAKmgC,uBAAwB,CACjC,CACAmD,aAAAA,GACItjC,KAAKmgC,uBAAwB,CACjC,CACAoD,eAAAA,GACI,OAAOvjC,KAAKmgC,uBAAyBngC,KAAKogC,qBAC9C,CACAqC,sBAAAA,GACI,OAAQziC,KAAKgzB,oBACRhzB,KAAKI,QAAUJ,KAAKI,OAAOqiC,2BAC5B,CACR,CAEAe,WAAAA,GACQxjC,KAAKujC,oBAETvjC,KAAKw+B,YAAa,EAClBx+B,KAAK++B,OAAS/+B,KAAK++B,MAAM56B,QAAQs/B,IACjCzjC,KAAK8/B,cACT,CACA4D,oBAAAA,GACI,MAAM,cAAEp3B,GAAkBtM,KAAKuN,QAC/B,OAAOjB,GAAiBA,EAAcqH,WAAWlB,iBACrD,CACAmnB,UAAAA,GAAyC,IAA9B+J,IAAqB9kC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GAE5B,GADAmB,KAAKyB,KAAKg/B,iBAAkB,EACxBzgC,KAAKyB,KAAK8hC,kBAEV,YADAvjC,KAAKuN,QAAQrK,gBAAkBlD,KAAKuN,QAAQrK,kBAoBhD,GALI2M,OAAO2vB,iCACNx/B,KAAKu/B,2BACNF,GAAuCr/B,OAE1CA,KAAKyB,KAAK+8B,YAAcx+B,KAAKyB,KAAK+hC,cAC/BxjC,KAAKy+B,cACL,OACJz+B,KAAKy+B,eAAgB,EACrB,IAAK,IAAI/+B,EAAI,EAAGA,EAAIM,KAAK2hC,KAAK7iC,OAAQY,IAAK,CACvC,MAAML,EAAOW,KAAK2hC,KAAKjiC,GACvBL,EAAKkhC,sBAAuB,EAC5BlhC,EAAK83B,aAAa,YACd93B,EAAKkO,QAAQ0T,YACb5hB,EAAKu6B,YAAW,EAExB,CACA,MAAM,SAAE7hB,EAAQ,OAAEhN,GAAW/K,KAAKuN,QAClC,QAAiB9O,IAAbsZ,IAA2BhN,EAC3B,OACJ,MAAM0H,EAAoBzS,KAAK0jC,uBAC/B1jC,KAAK4jC,2BAA6BnxB,EAC5BA,EAAkBzS,KAAKkO,aAAc,SACrCzP,EACNuB,KAAK6jC,iBACLF,GAAyB3jC,KAAK4hC,gBAAgB,aAClD,CACAvxB,MAAAA,GACIrQ,KAAK0gC,iBAAkB,EAKvB,GAJyB1gC,KAAKujC,kBAQ1B,OAHAvjC,KAAKsjC,gBACLtjC,KAAK8gC,yBACL9gC,KAAK++B,MAAM56B,QAAQ2/B,IAMvB,GAAI9jC,KAAK8/B,aAAe9/B,KAAK+/B,kBAEzB,YADA//B,KAAK++B,MAAM56B,QAAQ4/B,IAGvB/jC,KAAK+/B,kBAAoB//B,KAAK8/B,YACzB9/B,KAAKw+B,YAINx+B,KAAKw+B,YAAa,EAIlBx+B,KAAK++B,MAAM56B,QAAQ6/B,IAKnBhkC,KAAK++B,MAAM56B,QAAQizB,IAKnBp3B,KAAK++B,MAAM56B,QAAQ8/B,KAjBnBjkC,KAAK++B,MAAM56B,QAAQ4/B,IAmBvB/jC,KAAK8gC,oBAML,MAAMryB,EAAMC,EAAAA,EAAKD,MACjBkhB,EAAAA,GAAU/B,OAAQqJ,EAAAA,GAAAA,GAAM,EAAG,IAAO,GAAIxoB,EAAMkhB,EAAAA,GAAUD,WACtDC,EAAAA,GAAUD,UAAYjhB,EACtBkhB,EAAAA,GAAUuU,cAAe,EACzBC,EAAAA,GAAW9zB,OAAOwS,QAAQ8M,EAAAA,IAC1BwU,EAAAA,GAAW5yB,UAAUsR,QAAQ8M,EAAAA,IAC7BwU,EAAAA,GAAW/iC,OAAOyhB,QAAQ8M,EAAAA,IAC1BA,EAAAA,GAAUuU,cAAe,CAC7B,CACAxK,SAAAA,GACS15B,KAAK0gC,kBACN1gC,KAAK0gC,iBAAkB,EACvB/qB,EAAAA,EAAU8hB,KAAKz3B,KAAK2gC,gBAE5B,CACAG,iBAAAA,GACI9gC,KAAK++B,MAAM56B,QAAQigC,IACnBpkC,KAAK0hC,YAAYv9B,QAAQkgC,GAC7B,CACAC,wBAAAA,GACStkC,KAAK4gC,4BACN5gC,KAAK4gC,2BAA4B,EACjCjyB,EAAAA,GAAM4C,UAAUvR,KAAK+gC,kBAAkB,GAAO,GAEtD,CACAzG,yBAAAA,GAMI3rB,EAAAA,GAAM0kB,YAAW,KACTrzB,KAAKy+B,cACLz+B,KAAKyB,KAAKi4B,YAGV15B,KAAKyB,KAAKo/B,mBACd,GAER,CAIAgD,cAAAA,IACQ7jC,KAAKs+B,UAAat+B,KAAKgK,WAE3BhK,KAAKs+B,SAAWt+B,KAAK00B,WACjB10B,KAAKs+B,UACJ5Q,GAAW1tB,KAAKs+B,SAASiG,YAAYriC,IACrCwrB,GAAW1tB,KAAKs+B,SAASiG,YAAY98B,KACtCzH,KAAKs+B,cAAW7/B,GAExB,CACA24B,YAAAA,GACI,IAAKp3B,KAAKgK,SACN,OAEJ,GADAhK,KAAKm3B,iBACCn3B,KAAKuN,QAAQ8T,sBAAuBrhB,KAAKm6B,YAC1Cn6B,KAAKy+B,cACN,OASJ,GAAIz+B,KAAKo+B,aAAep+B,KAAKo+B,WAAWp0B,SACpC,IAAK,IAAItK,EAAI,EAAGA,EAAIM,KAAK2hC,KAAK7iC,OAAQY,IAAK,CAC1BM,KAAK2hC,KAAKjiC,GAClBy3B,cACT,CAEJ,MAAMqN,EAAaxkC,KAAK+K,OACxB/K,KAAK+K,OAAS/K,KAAK00B,SAAQ,GAC3B10B,KAAKykC,gBlG3hBC,CACdviC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkG6hB7BxH,KAAKy+B,eAAgB,EACrBz+B,KAAKu4B,qBAAkB95B,EACvBuB,KAAK4hC,gBAAgB,UAAW5hC,KAAK+K,OAAOqoB,WAC5C,MAAM,cAAE9mB,GAAkBtM,KAAKuN,QAC/BjB,GACIA,EAAc2B,OAAO,gBAAiBjO,KAAK+K,OAAOqoB,UAAWoR,EAAaA,EAAWpR,eAAY30B,EACzG,CACA04B,YAAAA,GAAgC,IAAnBuN,EAAK7lC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,UACb8lC,EAAmBx4B,QAAQnM,KAAKuN,QAAQyT,cAAgBhhB,KAAKgK,UAMjE,GALIhK,KAAKu1B,QACLv1B,KAAKu1B,OAAOuK,cAAgB9/B,KAAKyB,KAAKq+B,aACtC9/B,KAAKu1B,OAAOmP,QAAUA,IACtBC,GAAmB,GAEnBA,GAAoB3kC,KAAKgK,SAAU,CACnC,MAAM46B,EAAShF,EAAkB5/B,KAAKgK,UACtChK,KAAKu1B,OAAS,CACVuK,YAAa9/B,KAAKyB,KAAKq+B,YACvB4E,QACAE,SACA7rB,OAAQ4mB,EAAc3/B,KAAKgK,UAC3B66B,QAAS7kC,KAAKu1B,OAASv1B,KAAKu1B,OAAOqP,OAASA,EAEpD,CACJ,CACA/E,cAAAA,GACI,IAAKA,EACD,OACJ,MAAMiF,EAAmB9kC,KAAKy+B,eAC1Bz+B,KAAKugC,sBACLvgC,KAAKuN,QAAQ8T,oBACX0jB,EAAgB/kC,KAAKu4B,kBAAoB8E,GAAYr9B,KAAKu4B,iBAC1D9lB,EAAoBzS,KAAK0jC,uBACzBsB,EAAyBvyB,EACzBA,EAAkBzS,KAAKkO,aAAc,SACrCzP,EACAwmC,EAA8BD,IAA2BhlC,KAAK4jC,2BAChEkB,GACA9kC,KAAKgK,WACJ+6B,GACGh9B,EAAa/H,KAAKkO,eAClB+2B,KACJpF,EAAe7/B,KAAKgK,SAAUg7B,GAC9BhlC,KAAKugC,sBAAuB,EAC5BvgC,KAAKwO,iBAEb,CACAkmB,OAAAA,GAAgC,IAAxBwQ,IAAermC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GACnB,MAAMsmC,EAAUnlC,KAAKw1B,iBACrB,IAAIpC,EAAYpzB,KAAKolC,oBAAoBD,GAs+BrD,IAAkBl8B,EA59BN,OAJIi8B,IACA9R,EAAYpzB,KAAKklC,gBAAgB9R,IAg+B7CiS,IADcp8B,EA79BGmqB,GA89BHlxB,GACdmjC,GAAUp8B,EAAIxB,GA99BC,CACHq4B,YAAa9/B,KAAKyB,KAAKq+B,YACvByE,YAAaY,EACb/R,YACAllB,aAAc,CAAC,EACfgO,OAAQlc,KAAK0B,GAErB,CACA8zB,cAAAA,GAAiB,IAAA8P,EACb,MAAM,cAAEh5B,GAAkBtM,KAAKuN,QAC/B,IAAKjB,EACD,MlGlmBE,CACdpK,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkGomB7B,MAAMyB,EAAMqD,EAAcvC,qBAE1B,MADmC,QAAXu7B,EAAAtlC,KAAKu1B,cAAM,IAAA+P,OAAA,EAAXA,EAAaT,UAAW7kC,KAAK2hC,KAAKz2B,KAAKq6B,KACzC,CAElB,MAAM,OAAEhQ,GAAWv1B,KAAKyB,KACpB8zB,IACAnsB,EAAcH,EAAI/G,EAAGqzB,EAAOxc,OAAO7W,GACnCkH,EAAcH,EAAIxB,EAAG8tB,EAAOxc,OAAOtR,GAE3C,CACA,OAAOwB,CACX,CACAm8B,mBAAAA,CAAoBn8B,GAAK,IAAAu8B,EACrB,MAAMC,ElGhnBA,CACdvjC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkGmnB7B,GADA60B,GAAYoJ,EAAkBx8B,GACf,QAAfu8B,EAAIxlC,KAAKu1B,cAAM,IAAAiQ,GAAXA,EAAaX,QACb,OAAOY,EAMX,IAAK,IAAI/lC,EAAI,EAAGA,EAAIM,KAAK2hC,KAAK7iC,OAAQY,IAAK,CACvC,MAAML,EAAOW,KAAK2hC,KAAKjiC,IACjB,OAAE61B,EAAM,QAAEhoB,GAAYlO,EACxBA,IAASW,KAAKyB,MAAQ8zB,GAAUhoB,EAAQyT,eAKpCuU,EAAOsP,SACPxI,GAAYoJ,EAAkBx8B,GAElCG,EAAcq8B,EAAiBvjC,EAAGqzB,EAAOxc,OAAO7W,GAChDkH,EAAcq8B,EAAiBh+B,EAAG8tB,EAAOxc,OAAOtR,GAExD,CACA,OAAOg+B,CACX,CACAC,cAAAA,CAAez8B,GAA4B,IAAvB08B,EAAa9mC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GAC7B,MAAM+mC,ElG3oBA,CACd1jC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkG6oB7B60B,GAAYuJ,EAAgB38B,GAC5B,IAAK,IAAIvJ,EAAI,EAAGA,EAAIM,KAAK2hC,KAAK7iC,OAAQY,IAAK,CACvC,MAAML,EAAOW,KAAK2hC,KAAKjiC,IAClBimC,GACDtmC,EAAKkO,QAAQyT,cACb3hB,EAAKk2B,QACLl2B,IAASA,EAAKoC,MACdkI,EAAai8B,EAAgB,CACzB1jC,GAAI7C,EAAKk2B,OAAOxc,OAAO7W,EACvBuF,GAAIpI,EAAKk2B,OAAOxc,OAAOtR,IAG1BM,EAAa1I,EAAK6O,eAEvBvE,EAAai8B,EAAgBvmC,EAAK6O,aACtC,CAIA,OAHInG,EAAa/H,KAAKkO,eAClBvE,EAAai8B,EAAgB5lC,KAAKkO,cAE/B03B,CACX,CACAV,eAAAA,CAAgBj8B,GACZ,MAAM48B,ElGlqBA,CACd3jC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkGoqB7B60B,GAAYwJ,EAAqB58B,GACjC,IAAK,IAAIvJ,EAAI,EAAGA,EAAIM,KAAK2hC,KAAK7iC,OAAQY,IAAK,CACvC,MAAML,EAAOW,KAAK2hC,KAAKjiC,GACvB,IAAKL,EAAK2K,SACN,SACJ,IAAKjC,EAAa1I,EAAK6O,cACnB,SACJtG,EAASvI,EAAK6O,eAAiB7O,EAAKwkC,iBACpC,MAAM1G,ElG3qBJ,CACdj7B,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkG8qBzB60B,GAAYc,EADI99B,EAAKm2B,kBAErB0H,GAAoB2I,EAAqBxmC,EAAK6O,aAAc7O,EAAKi/B,SAAWj/B,EAAKi/B,SAASlL,eAAY30B,EAAW0+B,EACrH,CAIA,OAHIp1B,EAAa/H,KAAKkO,eAClBgvB,GAAoB2I,EAAqB7lC,KAAKkO,cAE3C23B,CACX,CACAC,cAAAA,CAAelY,GACX5tB,KAAK+lC,YAAcnY,EACnB5tB,KAAKyB,KAAK6iC,2BACVtkC,KAAKigC,mBAAoB,CAC7B,CACA7e,UAAAA,CAAW7T,GACPvN,KAAKuN,SAAOrJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLlE,KAAKuN,SACLA,GAAO,IACVgU,eAAiC9iB,IAAtB8O,EAAQgU,WAA0BhU,EAAQgU,WAE7D,CACAuiB,iBAAAA,GACI9jC,KAAKu1B,YAAS92B,EACduB,KAAK+K,YAAStM,EACduB,KAAKs+B,cAAW7/B,EAChBuB,KAAK4jC,gCAA6BnlC,EAClCuB,KAAK+lC,iBAActnC,EACnBuB,KAAKsU,YAAS7V,EACduB,KAAKy+B,eAAgB,CACzB,CACAuH,kCAAAA,GACShmC,KAAKimC,gBAQNjmC,KAAKimC,eAAe3E,2BACpB3R,EAAAA,GAAUD,WACV1vB,KAAKimC,eAAe/E,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAAA1xB,EAAA,IAA5B02B,EAAkBrnC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GAMjC,MAAMi/B,EAAO99B,KAAKmmC,UAClBnmC,KAAKigC,oBAAsBjgC,KAAKigC,kBAAoBnC,EAAKmC,mBACzDjgC,KAAKwR,mBAAqBxR,KAAKwR,iBAAmBssB,EAAKtsB,kBACvDxR,KAAKkgC,0BAA4BlgC,KAAKkgC,wBAA0BpC,EAAKoC,yBACrE,MAAMkG,EAAWj6B,QAAQnM,KAAK4+B,eAAiB5+B,OAAS89B,EAWxD,KANkBoI,GACbE,GAAYpmC,KAAKkgC,yBAClBlgC,KAAKigC,mBACM,QADWzwB,EACtBxP,KAAKI,cAAM,IAAAoP,GAAXA,EAAaywB,mBACbjgC,KAAKqmC,gCACLrmC,KAAKyB,KAAK2+B,uBAEV,OACJ,MAAM,OAAEr1B,EAAM,SAAEgN,GAAa/X,KAAKuN,QAIlC,GAAKvN,KAAK+K,SAAYA,GAAUgN,GAAhC,CAQA,GANA/X,KAAKshC,yBAA2B3R,EAAAA,GAAUD,WAMrC1vB,KAAK+lC,cAAgB/lC,KAAK0iC,eAAgB,CAC3C,MAAMuD,EAAiBjmC,KAAKsmC,6BACxBL,GACAA,EAAel7B,QACY,IAA3B/K,KAAKyhC,mBACLzhC,KAAKimC,eAAiBA,EACtBjmC,KAAKgmC,qCACLhmC,KAAK0iC,elGlwBP,CACdxgC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkGowBrBxH,KAAKumC,qBlGnwBP,CACdrkC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkGqwBrB2mB,GAAqBnuB,KAAKumC,qBAAsBvmC,KAAK+K,OAAOqoB,UAAW6S,EAAel7B,OAAOqoB,WAC7FiJ,GAAYr8B,KAAK0iC,eAAgB1iC,KAAKumC,uBAGtCvmC,KAAKimC,eAAiBjmC,KAAK0iC,oBAAiBjkC,CAEpD,CAKA,GAAKuB,KAAK0iC,gBAAmB1iC,KAAK+lC,YAAlC,CpBpvBZ,IAAyBzxB,EAAQ2Z,EAAU7tB,EoB6xB/B,GApCKJ,KAAKsU,SACNtU,KAAKsU,OlGrxBH,CACdpS,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkGuxBzBxH,KAAKwmC,qBlGtxBH,CACdtkC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,KkG4xBzBxH,KAAK0iC,gBACL1iC,KAAKumC,sBACLvmC,KAAKimC,gBACLjmC,KAAKimC,eAAe3xB,QACpBtU,KAAKgmC,qCpBpwBI1xB,EoBqwBOtU,KAAKsU,OpBrwBJ2Z,EoBqwBYjuB,KAAK0iC,epBrwBPtiC,EoBqwBuBJ,KAAKimC,eAAe3xB,OpBpwBlF0Z,GAAiB1Z,EAAOpS,EAAG+rB,EAAS/rB,EAAG9B,EAAO8B,GAC9C8rB,GAAiB1Z,EAAO7M,EAAGwmB,EAASxmB,EAAGrH,EAAOqH,IoBwwB7BzH,KAAK+lC,aACN55B,QAAQnM,KAAK4+B,cAEb5+B,KAAKsU,OAAStU,KAAK0lC,eAAe1lC,KAAK+K,OAAOqoB,WAG9CiJ,GAAYr8B,KAAKsU,OAAQtU,KAAK+K,OAAOqoB,WAEzCpqB,EAAchJ,KAAKsU,OAAQtU,KAAK+lC,cAMhC1J,GAAYr8B,KAAKsU,OAAQtU,KAAK+K,OAAOqoB,WAKrCpzB,KAAKqmC,+BAAgC,CACrCrmC,KAAKqmC,gCAAiC,EACtC,MAAMJ,EAAiBjmC,KAAKsmC,6BACxBL,GACA95B,QAAQ85B,EAAerH,gBACnBzyB,QAAQnM,KAAK4+B,gBAChBqH,EAAe14B,QAAQyT,cACxBilB,EAAe3xB,QACY,IAA3BtU,KAAKyhC,mBACLzhC,KAAKimC,eAAiBA,EACtBjmC,KAAKgmC,qCACLhmC,KAAK0iC,elGn0BP,CACdxgC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkGq0BrBxH,KAAKumC,qBlGp0BP,CACdrkC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkGs0BrB2mB,GAAqBnuB,KAAKumC,qBAAsBvmC,KAAKsU,OAAQ2xB,EAAe3xB,QAC5E+nB,GAAYr8B,KAAK0iC,eAAgB1iC,KAAKumC,uBAGtCvmC,KAAKimC,eAAiBjmC,KAAK0iC,oBAAiBjkC,CAEpD,CAIIuiC,GAAAA,EAAYxiC,OACZsgC,GAAQE,wBAhEF,CA5BA,CA8Fd,CACAsH,0BAAAA,GACI,GAAKtmC,KAAKI,SACNwH,EAAS5H,KAAKI,OAAO8N,gBACrBlG,EAAehI,KAAKI,OAAO8N,cAG/B,OAAIlO,KAAKI,OAAOgY,eACLpY,KAAKI,OAGLJ,KAAKI,OAAOkmC,4BAE3B,CACAluB,YAAAA,GACI,OAAOjM,SAASnM,KAAK0iC,gBACjB1iC,KAAK+lC,aACL/lC,KAAKuN,QAAQ0T,aACbjhB,KAAK+K,OACb,CACAo2B,cAAAA,GAAiB,IAAA5wB,EACb,MAAMutB,EAAO99B,KAAKmmC,UACZC,EAAWj6B,QAAQnM,KAAK4+B,eAAiB5+B,OAAS89B,EACxD,IAAI2I,GAAU,EAuBd,IAlBIzmC,KAAKigC,mBAAgC,QAAf1vB,EAAIvQ,KAAKI,cAAM,IAAAmQ,GAAXA,EAAa0vB,qBACvCwG,GAAU,GAMVL,IACCpmC,KAAKkgC,yBAA2BlgC,KAAKwR,oBACtCi1B,GAAU,GAMVzmC,KAAKshC,2BAA6B3R,EAAAA,GAAUD,YAC5C+W,GAAU,GAEVA,EACA,OACJ,MAAM,OAAE17B,EAAM,SAAEgN,GAAa/X,KAAKuN,QAWlC,GANAvN,KAAKggC,gBAAkB7zB,QAASnM,KAAKI,QAAUJ,KAAKI,OAAO4/B,iBACvDhgC,KAAKk6B,kBACLl6B,KAAK0mC,kBACJ1mC,KAAKggC,kBACNhgC,KAAK+lC,YAAc/lC,KAAK0iC,oBAAiBjkC,IAExCuB,KAAK+K,SAAYA,IAAUgN,EAC5B,OAKJskB,GAAYr8B,KAAKykC,gBAAiBzkC,KAAK+K,OAAOqoB,WAI9C,MAAMuT,EAAiB3mC,KAAKs4B,UAAUp2B,EAChC0kC,EAAiB5mC,KAAKs4B,UAAU7wB,GrGz3BlD,SAAyBwB,EAAKqvB,EAAWuO,GAAsC,IAA5BC,EAAkBjoC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GACjE,MAAMkoC,EAAaF,EAAS/nC,OAC5B,IAAKioC,EACD,OAGJ,IAAI1nC,EACAuuB,EAFJ0K,EAAUp2B,EAAIo2B,EAAU7wB,EAAI,EAG5B,IAAK,IAAI/H,EAAI,EAAGA,EAAIqnC,EAAYrnC,IAAK,CACjCL,EAAOwnC,EAASnnC,GAChBkuB,EAAQvuB,EAAKk5B,gBAKb,MAAM,cAAEjsB,GAAkBjN,EAAKkO,QAC3BjB,GACAA,EAAcrM,MAAMqC,OACkB,aAAtCgK,EAAcrM,MAAMqC,MAAM0kC,UAG1BF,GACAznC,EAAKkO,QAAQyT,cACb3hB,EAAKk2B,QACLl2B,IAASA,EAAKoC,MACdkI,EAAaV,EAAK,CACd/G,GAAI7C,EAAKk2B,OAAOxc,OAAO7W,EACvBuF,GAAIpI,EAAKk2B,OAAOxc,OAAOtR,IAG3BmmB,IAEA0K,EAAUp2B,GAAK0rB,EAAM1rB,EAAEyF,MACvB2wB,EAAU7wB,GAAKmmB,EAAMnmB,EAAEE,MAEvBqB,EAAcC,EAAK2kB,IAEnBkZ,GAAsB/+B,EAAa1I,EAAK6O,eACxCvE,EAAaV,EAAK5J,EAAK6O,cAE/B,CAKIoqB,EAAUp2B,EAAIiH,GACdmvB,EAAUp2B,EAAIgH,IACdovB,EAAUp2B,EAAI,GAEdo2B,EAAU7wB,EAAI0B,GACdmvB,EAAU7wB,EAAIyB,IACdovB,EAAU7wB,EAAI,EAEtB,CqGy0BYw/B,CAAgBjnC,KAAKykC,gBAAiBzkC,KAAKs4B,UAAWt4B,KAAK2hC,KAAMyE,IAK7DtI,EAAK/yB,QACJ+yB,EAAKxpB,QACgB,IAArBtU,KAAKs4B,UAAUp2B,GAAgC,IAArBlC,KAAKs4B,UAAU7wB,IAC1Cq2B,EAAKxpB,OAASwpB,EAAK/yB,OAAOqoB,UAC1B0K,EAAK0I,qBlGt6BH,CACdtkC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,KkGy6B7B,MAAM,OAAE8M,GAAWwpB,EACdxpB,GAYAtU,KAAKu4B,iBAAoBv4B,KAAKknC,qBAI/B3K,GAAkBv8B,KAAKknC,oBAAoBhlC,EAAGlC,KAAKu4B,gBAAgBr2B,GACnEq6B,GAAkBv8B,KAAKknC,oBAAoBz/B,EAAGzH,KAAKu4B,gBAAgB9wB,IAJnEzH,KAAKmnC,yBAeTpZ,GAAa/tB,KAAKu4B,gBAAiBv4B,KAAKykC,gBAAiBnwB,EAAQtU,KAAKkO,cAClElO,KAAKs4B,UAAUp2B,IAAMykC,GACrB3mC,KAAKs4B,UAAU7wB,IAAMm/B,GACpBjJ,GAAgB39B,KAAKu4B,gBAAgBr2B,EAAGlC,KAAKknC,oBAAoBhlC,IACjEy7B,GAAgB39B,KAAKu4B,gBAAgB9wB,EAAGzH,KAAKknC,oBAAoBz/B,KAClEzH,KAAKuhC,cAAe,EACpBvhC,KAAKwO,iBACLxO,KAAK4hC,gBAAgB,mBAAoBttB,IAKzC0sB,GAAAA,EAAYxiC,OACZsgC,GAAQG,yBAnCJj/B,KAAKknC,sBACLlnC,KAAKmnC,yBACLnnC,KAAKwO,iBAmCjB,CACAkwB,IAAAA,GACI1+B,KAAKwhC,WAAY,CAErB,CACArD,IAAAA,GACIn+B,KAAKwhC,WAAY,CAErB,CACAhzB,cAAAA,GAAiC,IAAA44B,EAAA,IAAlBC,IAASxoC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GAEpB,GAD0B,QAA1BuoC,EAAApnC,KAAKuN,QAAQjB,qBAAa,IAAA86B,GAA1BA,EAA4B54B,iBACxB64B,EAAW,CACX,MAAMtN,EAAQ/5B,KAAKg6B,WACnBD,GAASA,EAAMvrB,gBACnB,CACIxO,KAAK4+B,eAAiB5+B,KAAK4+B,aAAa50B,WACxChK,KAAK4+B,kBAAengC,EAE5B,CACA0oC,sBAAAA,GACInnC,KAAKknC,oBlG7+BG,CAChBhlC,EAPoB,CACpB0G,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,GAIbjB,EARoB,CACpBmB,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,IkGg/BL1I,KAAKu4B,gBlG9+BG,CAChBr2B,EAPoB,CACpB0G,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,GAIbjB,EARoB,CACpBmB,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,IkGi/BL1I,KAAKsnC,6BlG/+BG,CAChBplC,EAPoB,CACpB0G,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,GAIbjB,EARoB,CACpBmB,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,GkGk/BT,CACA06B,kBAAAA,CAAmBxV,GAA6C,IAAtCqV,EAA4BpkC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GAClD,MAAMy/B,EAAWt+B,KAAKs+B,SAChBiJ,EAAuBjJ,EAAWA,EAASpwB,aAAe,CAAC,EAC3Ds5B,GAAWtjC,EAAAA,EAAAA,GAAA,GAAQlE,KAAKkO,cACxB63B,ElGr/BE,CAChB7jC,EAPoB,CACpB0G,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,GAIbjB,EARoB,CACpBmB,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,IkGw/BA1I,KAAKimC,gBACLjmC,KAAKimC,eAAe14B,QAAQ0T,aAC7BjhB,KAAK0iC,eAAiB1iC,KAAKumC,0BAAuB9nC,GAEtDuB,KAAKqmC,gCAAkCpD,EACvC,MAAMwE,ElGt/BA,CACdvlC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkG0/BvBkgC,GAFiBpJ,EAAWA,EAASpiB,YAASzd,MAC/BuB,KAAK+K,OAAS/K,KAAK+K,OAAOmR,YAASzd,GAElDs7B,EAAQ/5B,KAAKg6B,WACb2N,GAAgB5N,GAASA,EAAME,QAAQn7B,QAAU,EACjD8oC,EAAyBz7B,QAAQu7B,IAClCC,IAC0B,IAA3B3nC,KAAKuN,QAAQgU,YACZvhB,KAAK2hC,KAAKz2B,KAAK28B,KAEpB,IAAIC,EADJ9nC,KAAKyhC,kBAAoB,EAEzBzhC,KAAK+nC,eAAkB3xB,IACnB,MAAM4gB,EAAW5gB,EAAS,IFngC1C,IAAmBL,EAAGC,EEwhDNgyB,EAAQ7hB,EAAM8hB,EAAI/gC,EAphBlBghC,GAAanC,EAAY7jC,EAAG0rB,EAAM1rB,EAAG80B,GACrCkR,GAAanC,EAAYt+B,EAAGmmB,EAAMnmB,EAAGuvB,GACrCh3B,KAAK8lC,eAAeC,GAChB/lC,KAAK0iC,gBACL1iC,KAAKumC,sBACLvmC,KAAK+K,QACL/K,KAAKimC,gBACLjmC,KAAKimC,eAAel7B,SACpBojB,GAAqBsZ,EAAgBznC,KAAK+K,OAAOqoB,UAAWpzB,KAAKimC,eAAel7B,OAAOqoB,WA4gB3F4U,EA3gBWhoC,KAAK0iC,eA2gBRvc,EA3gBwBnmB,KAAKumC,qBA2gBvB0B,EA3gB6CR,EA2gBzCvgC,EA3gByD8vB,EA4gBvFmR,GAAQH,EAAO9lC,EAAGikB,EAAKjkB,EAAG+lC,EAAG/lC,EAAGgF,GAChCihC,GAAQH,EAAOvgC,EAAG0e,EAAK1e,EAAGwgC,EAAGxgC,EAAGP,GAxgBZ4gC,IFlhCL/xB,EEmhCe/V,KAAK0iC,eFnhCjB1sB,EEmhCiC8xB,EFlhC5CxK,GAAWvnB,EAAE7T,EAAG8T,EAAE9T,IAAMo7B,GAAWvnB,EAAEtO,EAAGuO,EAAEvO,MEmhC7BzH,KAAKigC,mBAAoB,GAExB6H,IACDA,ElGvhCN,CACd5lC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,KkGyhCrB60B,GAAYyL,EAAoB9nC,KAAK0iC,iBAErCgF,IACA1nC,KAAKu+B,gBAAkBiJ,EL/hC3C,SAAmBlzB,EAAQ8zB,EAAQtK,EAAM9G,EAAU4Q,EAAwBD,GAC3C,IAAAU,EAAAC,EAA5B,GAAIV,EACAtzB,EAAOi0B,SAAU7+B,EAAAA,EAAAA,GAAU,EAAe,QAAd2+B,EAAEvK,EAAKyK,eAAO,IAAAF,EAAAA,EAAI,EAAGxM,GAAgB7E,IACjE1iB,EAAOk0B,aAAc9+B,EAAAA,EAAAA,GAAwB,QAAf4+B,EAACF,EAAOG,eAAO,IAAAD,EAAAA,EAAI,EAAG,EAAGtM,GAAiBhF,SAEvE,GAAI2Q,EAAc,KAAAc,EAAAC,EACnBp0B,EAAOi0B,SAAU7+B,EAAAA,EAAAA,GAAwB,QAAf++B,EAACL,EAAOG,eAAO,IAAAE,EAAAA,EAAI,EAAe,QAAdC,EAAE5K,EAAKyK,eAAO,IAAAG,EAAAA,EAAI,EAAG1R,EACvE,CAIA,IAAK,IAAIt3B,EAAI,EAAGA,EAAI87B,GAAY97B,IAAK,CACjC,MAAMipC,EAAc,SAAHxmC,OAAYo5B,GAAQ77B,GAAE,UACvC,IAAIkpC,EAAejN,GAAUyM,EAAQO,GACjCE,EAAalN,GAAUmC,EAAM6K,QACZlqC,IAAjBmqC,QAA6CnqC,IAAfoqC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAnN,GAAKkN,KAAkBlN,GAAKmN,IAE5Bv0B,EAAOq0B,GAAe1jB,KAAKzd,KAAIkC,EAAAA,EAAAA,GAAU+xB,GAASmN,GAAenN,GAASoN,GAAa7R,GAAW,IAC9F9D,GAAAA,GAAQne,KAAK8zB,IAAe3V,GAAAA,GAAQne,KAAK6zB,MACzCt0B,EAAOq0B,IAAgB,MAI3Br0B,EAAOq0B,GAAeE,EAE9B,EAIIT,EAAOlgC,QAAU41B,EAAK51B,UACtBoM,EAAOpM,QAASwB,EAAAA,EAAAA,GAAU0+B,EAAOlgC,QAAU,EAAG41B,EAAK51B,QAAU,EAAG8uB,GAExE,CK0/BoB8R,CAAUtB,EAAaD,EAAsBvnC,KAAKkO,aAAc8oB,EAAU4Q,EAAwBD,IAEtG3nC,KAAKyB,KAAK6iC,2BACVtkC,KAAKwO,iBACLxO,KAAKyhC,kBAAoBzK,CAAQ,EAErCh3B,KAAK+nC,eAAe/nC,KAAKuN,QAAQ0T,WAAa,IAAO,EACzD,CACAkT,cAAAA,CAAe5mB,GAAS,IAAAw7B,EAAAC,EACpBhpC,KAAK4hC,gBAAgB,kBACA,QAArBmH,EAAA/oC,KAAKk6B,wBAAgB,IAAA6O,GAArBA,EAAuBn3B,OACN,QAAjBo3B,EAAAhpC,KAAK4+B,oBAAY,IAAAoK,GAAkB,QAAlBA,EAAjBA,EAAmB9O,wBAAgB,IAAA8O,GAAnCA,EAAqCp3B,OACjC5R,KAAK0mC,oBACLl2B,EAAAA,EAAAA,IAAYxQ,KAAK0mC,kBACjB1mC,KAAK0mC,sBAAmBjoC,GAO5BuB,KAAK0mC,iBAAmB/3B,EAAAA,GAAM0B,QAAO,KACjCynB,GAAsBC,wBAAyB,EAC/CkR,GAAAA,EAAiBl+B,SACjB/K,KAAKiT,cAAgBjT,KAAKiT,aAAcA,EAAAA,EAAAA,IAAY,IACpDjT,KAAKk6B,iBC7jCrB,SAA4B17B,EAAOwmB,EAAWzX,GAC1C,MAAM27B,GAAgB55B,EAAAA,EAAAA,GAAc9Q,GAASA,GAAQyU,EAAAA,EAAAA,IAAYzU,GAEjE,OADA0qC,EAAcv9B,MAAMwZ,GAAmB,GAAI+jB,EAAelkB,EAAWzX,IAC9D27B,EAAc3+B,SACzB,CDyjCwC4+B,CAAmBnpC,KAAKiT,YAAa,CAAC,EAAG,MAAK/O,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC/DqJ,GAAO,IACVZ,SAAU,EACVoa,QAAQ,EACRzV,SAAW8E,IACPpW,KAAK+nC,eAAe3xB,GACpB7I,EAAQ+D,UAAY/D,EAAQ+D,SAAS8E,EAAO,EAEhDgzB,OAAQA,KACJH,GAAAA,EAAiBl+B,QAAQ,EAE7Bsa,WAAYA,KACR4jB,GAAAA,EAAiBl+B,SACjBwC,EAAQ8X,YAAc9X,EAAQ8X,aAC9BrlB,KAAKqpC,mBAAmB,KAG5BrpC,KAAK4+B,eACL5+B,KAAK4+B,aAAa1E,iBAAmBl6B,KAAKk6B,kBAE9Cl6B,KAAK0mC,sBAAmBjoC,CAAS,GAEzC,CACA4qC,iBAAAA,GACQrpC,KAAK4+B,eACL5+B,KAAK4+B,aAAa1E,sBAAmBz7B,EACrCuB,KAAK4+B,aAAaP,qBAAkB5/B,GAExC,MAAMs7B,EAAQ/5B,KAAKg6B,WACnBD,GAASA,EAAM4E,wBACf3+B,KAAK4+B,aACD5+B,KAAKk6B,iBACDl6B,KAAKu+B,qBACD9/B,EACZuB,KAAK4hC,gBAAgB,oBACzB,CACAS,eAAAA,GACQriC,KAAKk6B,mBACLl6B,KAAK+nC,gBAAkB/nC,KAAK+nC,eAvkCpB,KAwkCR/nC,KAAKk6B,iBAAiBtoB,QAE1B5R,KAAKqpC,mBACT,CACAC,uBAAAA,GACI,MAAMxL,EAAO99B,KAAKmmC,UAClB,IAAI,qBAAEK,EAAoB,OAAElyB,EAAM,OAAEvJ,EAAM,aAAEmD,GAAiB4vB,EAC7D,GAAK0I,GAAyBlyB,GAAWvJ,EAAzC,CAOA,GAAI/K,OAAS89B,GACT99B,KAAK+K,QACLA,GACAw+B,GAA0BvpC,KAAKuN,QAAQ+T,cAAethB,KAAK+K,OAAOqoB,UAAWroB,EAAOqoB,WAAY,CAChG9e,EAAStU,KAAKsU,QlG9mCZ,CACdpS,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkGgnCzB,MAAMgiC,EAAU9b,GAAW1tB,KAAK+K,OAAOqoB,UAAUlxB,GACjDoS,EAAOpS,EAAEqF,IAAMu2B,EAAKxpB,OAAOpS,EAAEqF,IAC7B+M,EAAOpS,EAAEsF,IAAM8M,EAAOpS,EAAEqF,IAAMiiC,EAC9B,MAAMC,EAAU/b,GAAW1tB,KAAK+K,OAAOqoB,UAAU3rB,GACjD6M,EAAO7M,EAAEF,IAAMu2B,EAAKxpB,OAAO7M,EAAEF,IAC7B+M,EAAO7M,EAAED,IAAM8M,EAAO7M,EAAEF,IAAMkiC,CAClC,CACApN,GAAYmK,EAAsBlyB,GAMlC3K,EAAa68B,EAAsBt4B,GAOnC6f,GAAa/tB,KAAKsnC,6BAA8BtnC,KAAKykC,gBAAiB+B,EAAsBt4B,EA/BlF,CAgCd,CACAo0B,kBAAAA,CAAmBvqB,EAAU1Y,GACpBW,KAAK0hC,YAAYh7B,IAAIqR,IACtB/X,KAAK0hC,YAAY79B,IAAIkU,EAAU,IAAI6lB,IAEzB59B,KAAK0hC,YAAYz7B,IAAI8R,GAC7BjH,IAAIzR,GACV,MAAM4f,EAAS5f,EAAKkO,QAAQuT,uBAC5BzhB,EAAKw6B,QAAQ,CACT/lB,WAAYmL,EAASA,EAAOnL,gBAAarV,EACzCy/B,sBAAuBjf,GAAUA,EAAOyqB,4BAClCzqB,EAAOyqB,4BAA4BrqC,QACnCZ,GAEd,CACA07B,MAAAA,GACI,MAAMJ,EAAQ/5B,KAAKg6B,WACnB,OAAOD,GAAQA,EAAM+D,OAAS99B,IAClC,CACAmmC,OAAAA,GAAU,IAAAwD,EACN,MAAM,SAAE5xB,GAAa/X,KAAKuN,QAC1B,OAAOwK,IAA0B,QAAf4xB,EAAA3pC,KAAKg6B,kBAAU,IAAA2P,OAAA,EAAfA,EAAiB7L,OAAe99B,IACtD,CACA4pC,WAAAA,GAAc,IAAAC,EACV,MAAM,SAAE9xB,GAAa/X,KAAKuN,QAC1B,OAAOwK,EAA0B,QAAlB8xB,EAAG7pC,KAAKg6B,kBAAU,IAAA6P,OAAA,EAAfA,EAAiBhM,cAAWp/B,CAClD,CACAu7B,QAAAA,GACI,MAAM,SAAEjiB,GAAa/X,KAAKuN,QAC1B,GAAIwK,EACA,OAAO/X,KAAKyB,KAAKigC,YAAYz7B,IAAI8R,EACzC,CACA8hB,OAAAA,GAAiE,IAAzD,WAAEyG,EAAU,WAAExsB,EAAU,sBAAEoqB,GAAwBr/B,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAMk7B,EAAQ/5B,KAAKg6B,WACfD,GACAA,EAAMF,QAAQ75B,KAAMk+B,GACpBoC,IACAtgC,KAAKu4B,qBAAkB95B,EACvBuB,KAAKsgC,YAAa,GAElBxsB,GACA9T,KAAKohB,WAAW,CAAEtN,cAC1B,CACAgmB,QAAAA,GACI,MAAMC,EAAQ/5B,KAAKg6B,WACnB,QAAID,GACOA,EAAMD,SAAS95B,KAK9B,CACAyjC,oBAAAA,GACI,MAAM,cAAEn3B,GAAkBtM,KAAKuN,QAC/B,IAAKjB,EACD,OAEJ,IAAIw9B,GAAyB,EAK7B,MAAM,aAAE57B,GAAiB5B,EAWzB,IAVI4B,EAAajG,GACbiG,EAAahG,QACbgG,EAAa/F,SACb+F,EAAa9F,SACb8F,EAAa67B,SACb77B,EAAa7F,OACb6F,EAAa5F,SACbwhC,GAAyB,IAGxBA,EACD,OACJ,MAAME,EAAc,CAAC,EACjB97B,EAAajG,GACbk3B,GAAyB,IAAK7yB,EAAe09B,EAAahqC,KAAKu+B,iBAGnE,IAAK,IAAI7+B,EAAI,EAAGA,EAAIw/B,GAAcpgC,OAAQY,IACtCy/B,GAAyB,SAADh9B,OAAU+8B,GAAcx/B,IAAM4M,EAAe09B,EAAahqC,KAAKu+B,iBACvFY,GAAyB,OAADh9B,OAAQ+8B,GAAcx/B,IAAM4M,EAAe09B,EAAahqC,KAAKu+B,iBAIzFjyB,EAAclL,SAEd,IAAK,MAAMiD,KAAO2lC,EACd19B,EAAckG,eAAenO,EAAK2lC,EAAY3lC,IAC1CrE,KAAKu+B,kBACLv+B,KAAKu+B,gBAAgBl6B,GAAO2lC,EAAY3lC,IAKhDiI,EAAckC,gBAClB,CACAmJ,qBAAAA,CAAsBsyB,EACtBxyB,GACI,IAAKzX,KAAKgK,UAAYhK,KAAKqgC,MACvB,OACJ,IAAKrgC,KAAKwhC,UAEN,YADAyI,EAAYC,WAAa,UAG7B,MAAMz3B,EAAoBzS,KAAK0jC,uBAC/B,GAAI1jC,KAAKsgC,WASL,OARAtgC,KAAKsgC,YAAa,EAClB2J,EAAYC,WAAa,GACzBD,EAAY1B,QAAU,GACtB0B,EAAYE,cACR/rB,GAA4B,OAAT3G,QAAS,IAATA,OAAS,EAATA,EAAW0yB,gBAAkB,QACpDF,EAAYrgC,UAAY6I,EAClBA,EAAkBzS,KAAKkO,aAAc,IACrC,QAGV,MAAM4vB,EAAO99B,KAAKmmC,UAClB,IAAKnmC,KAAKu4B,kBAAoBv4B,KAAK+K,SAAW+yB,EAAKxpB,OAe/C,OAdItU,KAAKuN,QAAQwK,WACbkyB,EAAY1B,aACsB9pC,IAA9BuB,KAAKkO,aAAaq6B,QACZvoC,KAAKkO,aAAaq6B,QAClB,EACV0B,EAAYE,cACR/rB,GAA4B,OAAT3G,QAAS,IAATA,OAAS,EAATA,EAAW0yB,gBAAkB,SAEpDnqC,KAAKuhC,eAAiBx5B,EAAa/H,KAAKkO,gBACxC+7B,EAAYrgC,UAAY6I,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNzS,KAAKuhC,cAAe,IAI5B0I,EAAYC,WAAa,GACzB,MAAME,EAAiBtM,EAAKS,iBAAmBT,EAAK5vB,aACpDlO,KAAKspC,0BACL,IAAI1/B,EE1xChB,SAAkCgkB,EAAO0K,EAAW+R,GAChD,IAAIzgC,EAAY,GAOhB,MAAM0gC,EAAa1c,EAAM1rB,EAAE0G,UAAY0vB,EAAUp2B,EAC3CqoC,EAAa3c,EAAMnmB,EAAEmB,UAAY0vB,EAAU7wB,EAC3C+iC,GAA4B,OAAfH,QAAe,IAAfA,OAAe,EAAfA,EAAiBpiC,IAAK,EAWzC,IAVIqiC,GAAcC,GAAcC,KAC5B5gC,EAAY,eAAHzH,OAAkBmoC,EAAU,QAAAnoC,OAAOooC,EAAU,QAAApoC,OAAOqoC,EAAU,SAMvD,IAAhBlS,EAAUp2B,GAA2B,IAAhBo2B,EAAU7wB,IAC/BmC,GAAa,SAAJzH,OAAa,EAAIm2B,EAAUp2B,EAAC,MAAAC,OAAK,EAAIm2B,EAAU7wB,EAAC,OAEzD4iC,EAAiB,CACjB,MAAM,qBAAE9zB,EAAoB,OAAErO,EAAM,QAAEC,EAAO,QAAEC,EAAO,MAAEC,EAAK,MAAEC,GAAU+hC,EACrE9zB,IACA3M,EAAY,eAAHzH,OAAkBoU,EAAoB,QAAApU,OAAOyH,IACtD1B,IACA0B,GAAa,UAAJzH,OAAc+F,EAAM,UAC7BC,IACAyB,GAAa,WAAJzH,OAAegG,EAAO,UAC/BC,IACAwB,GAAa,WAAJzH,OAAeiG,EAAO,UAC/BC,IACAuB,GAAa,SAAJzH,OAAakG,EAAK,UAC3BC,IACAsB,GAAa,SAAJzH,OAAamG,EAAK,SACnC,CAKA,MAAMmiC,EAAgB7c,EAAM1rB,EAAEyF,MAAQ2wB,EAAUp2B,EAC1CwoC,EAAgB9c,EAAMnmB,EAAEE,MAAQ2wB,EAAU7wB,EAIhD,OAHsB,IAAlBgjC,GAAyC,IAAlBC,IACvB9gC,GAAa,SAAJzH,OAAasoC,EAAa,MAAAtoC,OAAKuoC,EAAa,MAElD9gC,GAAa,MACxB,CF4uC4B+gC,CAAyB3qC,KAAKsnC,6BAA8BtnC,KAAKs4B,UAAW8R,GACxF33B,IACA7I,EAAY6I,EAAkB23B,EAAgBxgC,IAElDqgC,EAAYrgC,UAAYA,EACxB,MAAM,EAAE1H,EAAC,EAAEuF,GAAMzH,KAAKu4B,gBAEI,IAAAqS,EAAAC,GAD1BZ,EAAYtzB,gBAAkB,GAAHxU,OAAiB,IAAXD,EAAE2rB,OAAY,MAAA1rB,OAAgB,IAAXsF,EAAEomB,OAAY,OAC9DiQ,EAAKS,iBAKL0L,EAAY1B,QACRzK,IAAS99B,KAEwB,QAFpB4qC,EACe,QADfC,EACPT,EAAe7B,eAAO,IAAAsC,EAAAA,EACpB7qC,KAAKkO,aAAaq6B,eAAO,IAAAqC,EAAAA,EACzB,EACF5qC,KAAKq+B,gBACDr+B,KAAKkO,aAAaq6B,QAClB6B,EAAe5B,YAO7ByB,EAAY1B,QACRzK,IAAS99B,UACwBvB,IAA3B2rC,EAAe7B,QACX6B,EAAe7B,QACf,QAC2B9pC,IAA/B2rC,EAAe5B,YACX4B,EAAe5B,YACf,EAKlB,IAAK,MAAMnkC,KAAOwT,GAAiB,CAC/B,QAA4BpZ,IAAxB2rC,EAAe/lC,GACf,SACJ,MAAM,QAAE+zB,EAAO,QAAEqC,EAAO,cAAEnB,GAAkBzhB,GAAgBxT,GAOtDymC,EAA0B,SAAdlhC,EACZwgC,EAAe/lC,GACf+zB,EAAQgS,EAAe/lC,GAAMy5B,GACnC,GAAIrD,EAAS,CACT,MAAMsQ,EAAMtQ,EAAQ37B,OACpB,IAAK,IAAIY,EAAI,EAAGA,EAAIqrC,EAAKrrC,IACrBuqC,EAAYxP,EAAQ/6B,IAAMorC,CAElC,MAKQxR,EACAt5B,KAAKuN,QAAQjB,cAAc+B,YAAY6H,KAAK7R,GAAOymC,EAGnDb,EAAY5lC,GAAOymC,CAG/B,CAMI9qC,KAAKuN,QAAQwK,WACbkyB,EAAYE,cACRrM,IAAS99B,KACHoe,GAA4B,OAAT3G,QAAS,IAATA,OAAS,EAATA,EAAW0yB,gBAAkB,GAChD,OAElB,CACA/F,aAAAA,GACIpkC,KAAKo+B,WAAap+B,KAAKs+B,cAAW7/B,CACtC,CAEAusC,SAAAA,GACIhrC,KAAKyB,KAAKs9B,MAAM56B,SAAS9E,IAAI,IAAA4rC,EAAA,OAA0B,QAA1BA,EAAK5rC,EAAK66B,wBAAgB,IAAA+Q,OAAA,EAArBA,EAAuBr5B,MAAM,IAC/D5R,KAAKyB,KAAKs9B,MAAM56B,QAAQ2/B,IACxB9jC,KAAKyB,KAAKigC,YAAYhxB,OAC1B,EAER,CACA,SAAS0mB,GAAa/3B,GAClBA,EAAK+3B,cACT,CACA,SAAS6M,GAAmB5kC,GAAM,IAAA6rC,EAC9B,MAAM5M,GAA0B,QAAf4M,EAAA7rC,EAAK++B,kBAAU,IAAA8M,OAAA,EAAfA,EAAiB5M,WAAYj/B,EAAKi/B,SACnD,GAAIj/B,EAAK86B,UACL96B,EAAK0L,QACLuzB,GACAj/B,EAAKyiC,aAAa,aAAc,CAChC,MAAQ1O,UAAWroB,EAAQw5B,YAAa4G,GAAmB9rC,EAAK0L,QAC1D,cAAEuW,GAAkBjiB,EAAKkO,QACzB64B,EAAW9H,EAASpiB,SAAW7c,EAAK0L,OAAOmR,OAG3B,SAAlBoF,EACA8M,IAAUrlB,IACN,MAAMqiC,EAAehF,EACf9H,EAASiG,YAAYx7B,GACrBu1B,EAASlL,UAAUrqB,GACnBjK,EAAS4uB,GAAW0d,GAC1BA,EAAa7jC,IAAMwD,EAAOhC,GAAMxB,IAChC6jC,EAAa5jC,IAAM4jC,EAAa7jC,IAAMzI,CAAM,IAG3CyqC,GAA0BjoB,EAAegd,EAASlL,UAAWroB,IAClEqjB,IAAUrlB,IACN,MAAMqiC,EAAehF,EACf9H,EAASiG,YAAYx7B,GACrBu1B,EAASlL,UAAUrqB,GACnBjK,EAAS4uB,GAAW3iB,EAAOhC,IACjCqiC,EAAa5jC,IAAM4jC,EAAa7jC,IAAMzI,EAIlCO,EAAKqjC,iBAAmBrjC,EAAK66B,mBAC7B76B,EAAK4gC,mBAAoB,EACzB5gC,EAAKqjC,eAAe35B,GAAMvB,IACtBnI,EAAKqjC,eAAe35B,GAAMxB,IAAMzI,EACxC,IAGR,MAAMusC,ElGz5CM,CAChBnpC,EAPoB,CACpB0G,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,GAIbjB,EARoB,CACpBmB,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,IkG45CTqlB,GAAasd,EAAatgC,EAAQuzB,EAASlL,WAC3C,MAAMkY,ElG35CM,CAChBppC,EAPoB,CACpB0G,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,GAIbjB,EARoB,CACpBmB,UAAW,EACXjB,MAAO,EACPkmB,OAAQ,EACRnlB,YAAa,IkG85CL09B,EACArY,GAAaud,EAAajsC,EAAKqmC,eAAeyF,GAAgB,GAAO7M,EAASiG,aAG9ExW,GAAaud,EAAavgC,EAAQuzB,EAASlL,WAE/C,MAAMwE,GAAoByF,GAAYgO,GACtC,IAAI9I,GAA2B,EAC/B,IAAKljC,EAAK++B,WAAY,CAClB,MAAM6H,EAAiB5mC,EAAKinC,6BAK5B,GAAIL,IAAmBA,EAAe7H,WAAY,CAC9C,MAAQE,SAAUiN,EAAgBxgC,OAAQygC,GAAiBvF,EAC3D,GAAIsF,GAAkBC,EAAc,CAChC,MAAMC,ElGx6CR,CACdvpC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkG06CrB2mB,GAAqBsd,EAAkBnN,EAASlL,UAAWmY,EAAenY,WAC1E,MAAMqU,ElG16CR,CACdvlC,EAFe,CAASqF,IAAK,EAAGC,IAAK,GAGrCC,EAHe,CAASF,IAAK,EAAGC,IAAK,IkG46CrB2mB,GAAqBsZ,EAAgB18B,EAAQygC,EAAapY,WACrDqK,GAAiBgO,EAAkBhE,KACpClF,GAA2B,GAE3B0D,EAAe14B,QAAQ0T,aACvB5hB,EAAKqjC,eAAiB+E,EACtBpoC,EAAKknC,qBAAuBkF,EAC5BpsC,EAAK4mC,eAAiBA,EAE9B,CACJ,CACJ,CACA5mC,EAAKuiC,gBAAgB,YAAa,CAC9B72B,SACAuzB,WACA1Q,MAAO0d,EACPD,cACAzT,mBACA2K,4BAER,MACK,GAAIljC,EAAK86B,SAAU,CACpB,MAAM,eAAEj3B,GAAmB7D,EAAKkO,QAChCrK,GAAkBA,GACtB,CAMA7D,EAAKkO,QAAQuG,gBAAarV,CAC9B,CACA,SAASwiC,GAAoB5hC,GAIrB2hC,GAAAA,EAAYxiC,OACZsgC,GAAQC,QAEP1/B,EAAKe,SAQLf,EAAK+Y,iBACN/Y,EAAK4gC,kBAAoB5gC,EAAKe,OAAO6/B,mBAOzC5gC,EAAK6gC,0BAA4B7gC,EAAK6gC,wBAA0B/zB,QAAQ9M,EAAK4gC,mBACzE5gC,EAAKe,OAAO6/B,mBACZ5gC,EAAKe,OAAO8/B,0BAChB7gC,EAAKmS,mBAAqBnS,EAAKmS,iBAAmBnS,EAAKe,OAAOoR,kBAClE,CACA,SAAS4vB,GAAgB/hC,GACrBA,EAAK4gC,kBACD5gC,EAAK6gC,wBACD7gC,EAAKmS,kBACD,CAChB,CACA,SAAS4yB,GAAc/kC,GACnBA,EAAK+kC,eACT,CACA,SAASN,GAAkBzkC,GACvBA,EAAKykC,mBACT,CACA,SAASC,GAAmB1kC,GACxBA,EAAKo/B,eAAgB,CACzB,CACA,SAASuF,GAAoB3kC,GACzB,MAAM,cAAEiN,GAAkBjN,EAAKkO,QAC3BjB,GAAiBA,EAAcqH,WAAW+3B,uBAC1Cp/B,EAAc2B,OAAO,uBAEzB5O,EAAKwgC,gBACT,CACA,SAASwC,GAAgBhjC,GACrBA,EAAKgjC,kBACLhjC,EAAK0mC,YAAc1mC,EAAKqjC,eAAiBrjC,EAAKiV,YAAS7V,EACvDY,EAAK4gC,mBAAoB,CAC7B,CACA,SAASiB,GAAmB7hC,GACxBA,EAAK6hC,oBACT,CACA,SAASC,GAAe9hC,GACpBA,EAAK8hC,gBACT,CACA,SAASsC,GAAqBpkC,GAC1BA,EAAKokC,sBACT,CACA,SAASY,GAAoBtK,GACzBA,EAAM8E,oBACV,CACA,SAASqJ,GAAaF,EAAQpa,EAAO1mB,GACjC8gC,EAAOp/B,WAAYc,EAAAA,EAAAA,GAAUkkB,EAAMhlB,UAAW,EAAG1B,GACjD8gC,EAAOrgC,OAAQ+B,EAAAA,EAAAA,GAAUkkB,EAAMjmB,MAAO,EAAGT,GACzC8gC,EAAOna,OAASD,EAAMC,OACtBma,EAAOt/B,YAAcklB,EAAMllB,WAC/B,CACA,SAASy/B,GAAQH,EAAQ7hB,EAAM8hB,EAAI/gC,GAC/B8gC,EAAOzgC,KAAMmC,EAAAA,EAAAA,GAAUyc,EAAK5e,IAAK0gC,EAAG1gC,IAAKL,GACzC8gC,EAAOxgC,KAAMkC,EAAAA,EAAAA,GAAUyc,EAAK3e,IAAKygC,EAAGzgC,IAAKN,EAC7C,CAKA,SAAS2gC,GAAoBxoC,GACzB,OAAQA,EAAKk/B,sBAAwD9/B,IAArCY,EAAKk/B,gBAAgBiK,WACzD,CACA,MAAM5F,GAA0B,CAC5B/d,SAAU,IACVC,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB6mB,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAUjzB,cAAc7S,SAAS4lC,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrE1mB,KAAKuY,MACLvB,GAAAA,EACN,SAASoJ,GAAUt8B,GAEfA,EAAKxB,IAAMwkC,GAAWhjC,EAAKxB,KAC3BwB,EAAKvB,IAAMukC,GAAWhjC,EAAKvB,IAC/B,CAKA,SAAS+hC,GAA0BjoB,EAAegd,EAAUvzB,GACxD,MAA0B,aAAlBuW,GACe,oBAAlBA,IpBzjDO9iB,EoB0jDIk/B,GAAYY,GpB1jDThqB,EoB0jDoBopB,GAAY3yB,GpB1jDxBihC,EoB0jDiC,KpBzjDrD/mB,KAAKuJ,IAAIhwB,EAAQ8V,IAAW03B,IADvC,IAAgBxtC,EAAO8V,EAAQ03B,CoB2jD/B,CACA,SAASzG,GAAuBlmC,GAAM,IAAA4sC,EAClC,OAAO5sC,IAASA,EAAKoC,OAAmB,QAAfwqC,EAAI5sC,EAAKk2B,cAAM,IAAA0W,OAAA,EAAXA,EAAapH,QAC9C,CGtkDA,MAAMqH,GAAyB1qB,GAAqB,CAChDie,qBAAsBA,CAAClhC,EAAK0P,IAAW8e,GAAYxuB,EAAK,SAAU0P,GAClE0xB,cAAeA,KAAA,CACXz9B,EAAGK,SAAS4pC,gBAAgBC,YAAc7pC,SAAS8pC,KAAKD,WACxD3kC,EAAGlF,SAAS4pC,gBAAgBG,WAAa/pC,SAAS8pC,KAAKC,YAE3D1M,kBAAmBA,KAAM,ICNvBvK,GAAqB,CACvB32B,aAASD,GAEP8tC,GAAqB/qB,GAAqB,CAC5Cme,cAAgB31B,IAAQ,CACpB9H,EAAG8H,EAASoiC,WACZ3kC,EAAGuC,EAASsiC,YAEhB5M,cAAeA,KACX,IAAKrK,GAAmB32B,QAAS,CAC7B,MAAM8tC,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAaj9B,MAAMM,QACnB28B,EAAaprB,WAAW,CAAEJ,cAAc,IACxCqU,GAAmB32B,QAAU8tC,CACjC,CACA,OAAOnX,GAAmB32B,OAAO,EAErCmhC,eAAgBA,CAAC71B,EAAUxL,KACvBwL,EAAS1H,MAAMsH,eAAsBnL,IAAVD,EAAsBA,EAAQ,MAAM,EAEnEohC,kBAAoB51B,GAAamC,QAAuD,UAA/C0D,OAAO2I,iBAAiBxO,GAAUyiC,YClBzEhiC,GAAO,CACTI,IAAK,CACDsH,QlBKR,cAAyBA,GACrBjF,WAAAA,GACI2I,SAAShX,WACTmB,KAAK0sC,0BAA4BzQ,GAAAA,CACrC,CACA0Q,aAAAA,CAAcC,GACV5sC,KAAK6sC,QAAU,IAAIpe,GAAWme,EAAkB5sC,KAAK8sC,oBAAqB,CACtE7lC,mBAAoBjH,KAAKX,KAAK0U,wBAC9B4a,cAAeN,GAAiBruB,KAAKX,OAE7C,CACAytC,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAaltC,KAAKX,KAAKsU,WACrE,MAAO,CACH2c,eAAgBuH,GAAakV,GAC7Bnd,QAASiI,GAAamV,GACtBnd,OAAQod,EACRhd,MAAOA,CAAC7C,EAAO8B,YACJlvB,KAAK6sC,QACRK,GACAv+B,EAAAA,GAAM0kB,YAAW,IAAM6Z,EAAS9f,EAAO8B,IAC3C,EAGZ,CACA3f,KAAAA,GACIvP,KAAK0sC,0BAA4Bnf,GAAgBvtB,KAAKX,KAAKX,QAAS,eAAgB0uB,GAAUptB,KAAK2sC,cAAcvf,IACrH,CACA/c,MAAAA,GACIrQ,KAAK6sC,SAAW7sC,KAAK6sC,QAAQpc,eAAezwB,KAAK8sC,oBACrD,CACAx8B,OAAAA,GACItQ,KAAK0sC,4BACL1sC,KAAK6sC,SAAW7sC,KAAK6sC,QAAQ7c,KACjC,IkBrCAvlB,KAAM,CACF0H,QCNR,cAA0BA,GACtBjF,WAAAA,CAAY7N,GACRwW,MAAMxW,GACNW,KAAKmtC,oBAAsBlR,GAAAA,EAC3Bj8B,KAAKuwB,gBAAkB0L,GAAAA,EACvBj8B,KAAKotC,SAAW,IAAItb,GAA0BzyB,EAClD,CACAkQ,KAAAA,GAGI,MAAM,aAAE89B,GAAiBrtC,KAAKX,KAAKsU,WAC/B05B,IACArtC,KAAKmtC,oBAAsBE,EAAaxmC,UAAU7G,KAAKotC,WAE3DptC,KAAKuwB,gBAAkBvwB,KAAKotC,SAAS/V,gBAAkB4E,GAAAA,CAC3D,CACA3rB,OAAAA,GACItQ,KAAKmtC,sBACLntC,KAAKuwB,iBACT,GDZItN,eAAgBspB,GAChB7pB,cAAaA,K,eERrB,SAAS4qB,GAAiBjuC,EAAM+tB,EAAOmgB,GACnC,MAAM,MAAEttC,GAAUZ,EACdA,EAAKyiB,gBAAkB7hB,EAAMqsB,YAC7BjtB,EAAKyiB,eAAegK,UAAU,aAA4B,UAAdyhB,GAEhD,MACMh4B,EAAWtV,EADE,UAAYstC,GAE3Bh4B,GACA5G,EAAAA,GAAM0kB,YAAW,IAAM9d,EAAS6X,EAAOD,GAAiBC,KAEhE,C,eCVA,SAASogB,GAAiBnuC,EAAM+tB,EAAOmgB,GACnC,MAAM,MAAEttC,GAAUZ,EAClB,GAAIA,EAAKX,mBAAmB+uC,mBAAqBpuC,EAAKX,QAAQgvC,SAC1D,OAEAruC,EAAKyiB,gBAAkB7hB,EAAMid,UAC7B7d,EAAKyiB,eAAegK,UAAU,WAA0B,UAAdyhB,GAE9C,MACMh4B,EAAWtV,EADE,SAAyB,QAAdstC,EAAsB,GAAKA,IAErDh4B,GACA5G,EAAAA,GAAM0kB,YAAW,IAAM9d,EAAS6X,EAAOD,GAAiBC,KAEhE,C,kBCZMugB,GAAoB,IAAIniC,QAMxBoiC,GAAY,IAAIpiC,QAChBqiC,GAAwBC,IAC1B,MAAMv4B,EAAWo4B,GAAkB1nC,IAAI6nC,EAAMx5B,QAC7CiB,GAAYA,EAASu4B,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQ7pC,QAAQ0pC,GAAqB,EAqBzC,SAASI,GAAoBluC,EAASwN,EAASgI,GAC3C,MAAM24B,EApBV,SAAiC3sC,GAAuB,IAAtB,KAAEE,GAAkBF,EAATgM,GAAO6B,EAAAA,EAAAA,GAAA7N,EAAA8N,IAChD,MAAM8+B,EAAa1sC,GAAQc,SAItBqrC,GAAUlnC,IAAIynC,IACfP,GAAU/pC,IAAIsqC,EAAY,CAAC,GAE/B,MAAMC,EAAgBR,GAAU3nC,IAAIkoC,GAC9B9pC,EAAMgqC,KAAKC,UAAU/gC,GAQ3B,OAHK6gC,EAAc/pC,KACf+pC,EAAc/pC,GAAO,IAAIkqC,qBAAqBR,IAAwB7pC,EAAAA,EAAAA,GAAA,CAAIzC,QAAS8L,KAEhF6gC,EAAc/pC,EACzB,CAEsCmqC,CAAyBjhC,GAG3D,OAFAogC,GAAkB9pC,IAAI9D,EAASwV,GAC/B24B,EAA0BO,QAAQ1uC,GAC3B,KACH4tC,GAAkB1pC,OAAOlE,GACzBmuC,EAA0BQ,UAAU3uC,EAAQ,CAEpD,CC3CA,MAAM4uC,GAAiB,CACnBzjC,KAAM,EACNkd,IAAK,GCAT,MAAMwmB,GAAoB,CACtB9jC,OAAQ,CACJqH,QDAR,cAA4BA,GACxBjF,WAAAA,GACI2I,SAAShX,WACTmB,KAAK6uC,gBAAiB,EACtB7uC,KAAK8uC,UAAW,CACpB,CACAC,aAAAA,GACI/uC,KAAKsQ,UACL,MAAM,SAAE0+B,EAAW,CAAC,GAAMhvC,KAAKX,KAAKsU,YAC9B,KAAElS,EAAMwtC,OAAQC,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASJ,EACtDzhC,EAAU,CACZ9L,KAAMA,EAAOA,EAAK/C,aAAUD,EAC5BywC,aACAG,UAA6B,kBAAXF,EAAsBA,EAASR,GAAeQ,IA+BpE,OAAOlB,GAAoBjuC,KAAKX,KAAKX,QAAS6O,GA7BhBugC,IAC1B,MAAM,eAAEwB,GAAmBxB,EAI3B,GAAI9tC,KAAK8uC,WAAaQ,EAClB,OAMJ,GALAtvC,KAAK8uC,SAAWQ,EAKZF,IAASE,GAAkBtvC,KAAK6uC,eAChC,OAEKS,IACLtvC,KAAK6uC,gBAAiB,GAEtB7uC,KAAKX,KAAKyiB,gBACV9hB,KAAKX,KAAKyiB,eAAegK,UAAU,cAAewjB,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoBxvC,KAAKX,KAAKsU,WACjD4B,EAAW+5B,EAAiBC,EAAkBC,EACpDj6B,GAAYA,EAASu4B,EAAM,GAGnC,CACAv+B,KAAAA,GACIvP,KAAK+uC,eACT,CACA1+B,MAAAA,GACI,GAAoC,qBAAzBk+B,qBACP,OACJ,MAAM,MAAEtuC,EAAK,UAAEH,GAAcE,KAAKX,KAC5BowC,EAAoB,CAAC,SAAU,SAAU,QAAQvkC,KAO/D,SAAiC3J,GAA0D,IAAzD,SAAEytC,EAAW,CAAC,GAAGztC,GAAIytC,SAAUU,EAAe,CAAC,GAAG7wC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQsM,GAAS6jC,EAAS7jC,KAAUukC,EAAavkC,EACrD,CAToEwkC,CAAyB1vC,EAAOH,IACxF2vC,GACAzvC,KAAK+uC,eAEb,CACAz+B,OAAAA,GAAY,ICxDZ1F,IAAK,CACDuH,QHQR,cAA2BA,GACvB5C,KAAAA,GACI,MAAM,QAAE7Q,GAAYsB,KAAKX,KACpBX,IAELsB,KAAKsQ,SAAUs/B,EAAAA,GAAAA,GAAMlxC,GAAS,CAACmxC,EAAU/gB,KACrC0e,GAAiBxtC,KAAKX,KAAMyvB,EAAY,SACjC,CAACghB,EAAQvuC,KAAA,IAAE,QAAEwuC,GAASxuC,EAAA,OAAKisC,GAAiBxtC,KAAKX,KAAMywC,EAAUC,EAAU,MAAQ,SAAS,IACpG,CAAEC,gBAAiBhwC,KAAKX,KAAKY,MAAMgwC,kBAC1C,CACA3/B,OAAAA,GAAY,IGhBZ5F,MAAO,CACHyH,QCTR,cAA2BA,GACvBjF,WAAAA,GACI2I,SAAShX,WACTmB,KAAK0qB,UAAW,CACpB,CACAwlB,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBnwC,KAAKX,KAAKX,QAAQuR,QAAQ,iBAC/C,CACA,MAAOmgC,GACHD,GAAiB,CACrB,CACKA,GAAmBnwC,KAAKX,KAAKyiB,iBAElC9hB,KAAKX,KAAKyiB,eAAegK,UAAU,cAAc,GACjD9rB,KAAK0qB,UAAW,EACpB,CACA2lB,MAAAA,GACSrwC,KAAK0qB,UAAa1qB,KAAKX,KAAKyiB,iBAEjC9hB,KAAKX,KAAKyiB,eAAegK,UAAU,cAAc,GACjD9rB,KAAK0qB,UAAW,EACpB,CACAnb,KAAAA,GACIvP,KAAKsQ,SAAUkgB,EAAAA,GAAAA,GAAKzD,GAAY/sB,KAAKX,KAAKX,QAAS,SAAS,IAAMsB,KAAKkwC,YAAYnjB,GAAY/sB,KAAKX,KAAKX,QAAS,QAAQ,IAAMsB,KAAKqwC,WACzI,CACA//B,OAAAA,GAAY,IDtBZ3F,MAAO,CACHwH,QJDR,cAA2BA,GACvB5C,KAAAA,GACI,MAAM,QAAE7Q,GAAYsB,KAAKX,KACpBX,IAELsB,KAAKsQ,SAAU3F,EAAAA,GAAAA,GAAMjM,GAAS,CAACmxC,EAAU/gB,KACrCwe,GAAiBttC,KAAKX,KAAMyvB,EAAY,SAChCghB,GAAaxC,GAAiBttC,KAAKX,KAAMywC,EAAU,UAEnE,CACAx/B,OAAAA,GAAY,KMtBVvF,GAAS,CACXA,OAAQ,CACJkY,eAAgBspB,GAChB7pB,cAAaA,KCFf4tB,GAAuB7sB,ICCVvf,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZujB,IACAmnB,IACAnkC,IACAM,IDLuDuQ,G,kCEJ9D,MAAM1L,EAA8B,qBAAXC,M,gDCUzB,SAAStM,EAAYgtC,GACjB,MAAMhyC,GAAMqD,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBrD,EAAIG,UACJH,EAAIG,QAAU6xC,KAEXhyC,EAAIG,OACf,C,+CCZA,MAAMqH,E,QAA4B6J,EAAY4gC,EAAAA,gBAAkB1pC,EAAAA,S,8JCChE,MAAM2pC,EAAa,GAWbC,EAAmBA,KAAA,CACrBhiC,KAAM,EACNxM,EAZmB,CACnBxD,QAAS,EACTqa,OAAQ,GACRie,SAAU,EACV2Z,aAAc,EACdC,aAAc,EACd7Z,aAAc,EACd8Z,gBAAiB,EACjBlkC,SAAU,GAKVlF,EAbmB,CACnB/I,QAAS,EACTqa,OAAQ,GACRie,SAAU,EACV2Z,aAAc,EACdC,aAAc,EACd7Z,aAAc,EACd8Z,gBAAiB,EACjBlkC,SAAU,KAORqN,EAAO,CACT9X,EAAG,CACCpD,OAAQ,QACR2tC,SAAU,QAEdhlC,EAAG,CACC3I,OAAQ,SACR2tC,SAAU,QAGlB,SAASqE,EAAe/wC,EAASgxC,EAAU7hB,EAAMxgB,GAC7C,MAAM3F,EAAOmmB,EAAK6hB,IACZ,OAAEjyC,EAAM,SAAE2tC,GAAazyB,EAAK+2B,GAC5Bl+B,EAAO9J,EAAKrK,QACZsyC,EAAW9hB,EAAKxgB,KACtB3F,EAAKrK,QAAUqB,EAAQ,SAADoC,OAAUsqC,IAChC1jC,EAAK4nC,aAAe5wC,EAAQ,SAADoC,OAAUrD,IAAYiB,EAAQ,SAADoC,OAAUrD,IAClEiK,EAAKgQ,OAAOja,OAAS,EACrBiK,EAAKgQ,OAAO,GAAK,EACjBhQ,EAAKgQ,OAAO,GAAKhQ,EAAK4nC,aACtB5nC,EAAKiuB,UAAWA,EAAAA,EAAAA,GAAS,EAAGjuB,EAAK4nC,aAAc5nC,EAAKrK,SACpD,MAAM+mB,EAAU/W,EAAOsiC,EACvBjoC,EAAK4D,SACD8Y,EAAUgrB,EACJ,GACAQ,EAAAA,EAAAA,GAAkBloC,EAAKrK,QAAUmU,EAAM4S,EACrD,C,2CC/CA,MAAMyrB,EAAa,CACfvlC,MAAO,EACPwlC,OAAQ,GACRnhB,IAAK,GAET,SAASohB,EAAYC,EAAMvyC,GAAmB,IAAXwyC,EAAKzyC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EACnC+uB,EAAQ,EAWZ,GANIyjB,KAAQH,IACRG,EAAOH,EAAWG,IAKF,kBAATA,EAAmB,CAC1B,MAAM5V,EAAW7mB,WAAWy8B,GACxBA,EAAKE,SAAS,MACd3jB,EAAQ6N,EAEH4V,EAAKE,SAAS,KACnBF,EAAO5V,EAAW,IAEb4V,EAAKE,SAAS,MACnB3jB,EAAS6N,EAAW,IAAOl5B,SAAS4pC,gBAAgBqF,YAE/CH,EAAKE,SAAS,MACnB3jB,EAAS6N,EAAW,IAAOl5B,SAAS4pC,gBAAgBsF,aAGpDJ,EAAO5V,CAEf,CAOA,MAHoB,kBAAT4V,IACPzjB,EAAQ9uB,EAASuyC,GAEdC,EAAQ1jB,CACnB,CCxCA,MAAM8jB,EAAgB,CAAC,EAAG,GAC1B,SAASC,EAAc54B,EAAQ83B,EAAiB9Z,EAAc6a,GAC1D,IAAIC,EAAmB7yC,MAAM6M,QAAQkN,GAAUA,EAAS24B,EACpDI,EAAc,EACdC,EAAiB,EAyBrB,MAxBsB,kBAAXh5B,EAMP84B,EAAmB,CAAC94B,EAAQA,GAEL,kBAAXA,IAGR84B,GAFJ94B,EAASA,EAAO1B,QACLrR,SAAS,KACG+S,EAAOi5B,MAAM,KAQb,CAACj5B,EAAQm4B,EAAWn4B,GAAUA,EAAS,MAGlE+4B,EAAcV,EAAYS,EAAiB,GAAI9a,EAAc6a,GAC7DG,EAAiBX,EAAYS,EAAiB,GAAIhB,GAC3CiB,EAAcC,CACzB,CChCA,MAAME,EAAe,CACjBC,MAAO,CACH,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,KAAM,CACF,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,IAAK,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,IAAK,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,KCTN5pC,EAAQ,CAAEvG,EAAG,EAAGuF,EAAG,GAMzB,SAAS6qC,EAAeC,EAAWrjB,EAAM3hB,GACrC,MAAQwL,OAAQ84B,EAAmBI,EAAaI,KAAQ9kC,GAClD,OAAE+G,EAASi+B,EAAS,KAAExpC,EAAO,KAAQwE,EACrCilC,EAAuB,MAATzpC,EAAe,SAAW,QACxCuoC,EAAQh9B,IAAWi+B,ECd7B,SAAmBxyC,EAASwyC,GACxB,MAAMjB,EAAQ,CAAEpvC,EAAG,EAAGuF,EAAG,GACzB,IAAI/I,EAAUqB,EACd,KAAOrB,GAAWA,IAAY6zC,GAC1B,IAAIhyC,EAAAA,EAAAA,GAAc7B,GACd4yC,EAAMpvC,GAAKxD,EAAQuC,WACnBqwC,EAAM7pC,GAAK/I,EAAQqC,UACnBrC,EAAUA,EAAQ2B,kBAEjB,GAAwB,QAApB3B,EAAQwc,QAAmB,CAQhC,MAAMu3B,EAAiB/zC,EAAQ2L,wBAC/B3L,EAAUA,EAAQg0C,cAClB,MAAMC,EAAoBj0C,EAAQ2L,wBAClCinC,EAAMpvC,GAAKuwC,EAAezxC,KAAO2xC,EAAkB3xC,KACnDswC,EAAM7pC,GAAKgrC,EAAe3xC,IAAM6xC,EAAkB7xC,GACtD,KACK,MAAIpC,aAAmBk0C,oBAexB,MAf4C,CAC5C,MAAM,EAAE1wC,EAAC,EAAEuF,GAAM/I,EAAQm0C,UACzBvB,EAAMpvC,GAAKA,EACXovC,EAAM7pC,GAAKA,EACX,IAAIqrC,EAAM,KACN1yC,EAAS1B,EAAQq0C,WACrB,MAAQD,GACmB,QAAnB1yC,EAAO8a,UACP43B,EAAM1yC,GAEVA,EAAS1B,EAAQq0C,WAErBr0C,EAAUo0C,CACd,CAGA,CAEJ,OAAOxB,CACX,CD5ByC0B,CAAU1+B,EAAQi+B,GAAa9pC,EAM9DwqC,EAAa3+B,IAAWi+B,EACxB,CAAE1xC,MAAO0xC,EAAUW,YAAavyC,OAAQ4xC,EAAUY,cAhB5D,SAAuB7+B,GACnB,MAAO,YAAaA,GAA6B,QAAnBA,EAAO4G,QAC/B5G,EAAOu+B,UACP,CAAEhyC,MAAOyT,EAAOk9B,YAAa7wC,OAAQ2T,EAAOm9B,aACtD,CAaU2B,CAAc9+B,GACd++B,EAAgB,CAClBxyC,MAAO0xC,EAAUf,YACjB7wC,OAAQ4xC,EAAUd,cAMtBviB,EAAKnmB,GAAMgQ,OAAOja,OAAS,EAK3B,IAAIw0C,GAAcpkB,EAAKnmB,GAAMwqC,YAC7B,MAAMC,EAAa3B,EAAiB/yC,OACpC,IAAK,IAAIY,EAAI,EAAGA,EAAI8zC,EAAY9zC,IAAK,CACjC,MAAMqZ,EAAS44B,EAAcE,EAAiBnyC,GAAI2zC,EAAcb,GAAcS,EAAWT,GAAclB,EAAMvoC,IACxGuqC,GAAcv6B,IAAWmW,EAAKnmB,GAAM0qC,oBAAoB/zC,KACzD4zC,GAAa,GAEjBpkB,EAAKnmB,GAAMgQ,OAAOrZ,GAAKqZ,CAC3B,CAKIu6B,IACApkB,EAAKnmB,GAAMwqC,aAAcA,EAAAA,EAAAA,GAAYrkB,EAAKnmB,GAAMgQ,QAAQ24B,EAAAA,EAAAA,GAAcG,GAAmB,CAAE5a,OAAO,IAClG/H,EAAKnmB,GAAM0qC,oBAAsB,IAAIvkB,EAAKnmB,GAAMgQ,SAEpDmW,EAAKnmB,GAAMiuB,UAAWC,EAAAA,EAAAA,GAAM,EAAG,EAAG/H,EAAKnmB,GAAMwqC,YAAYrkB,EAAKnmB,GAAMrK,SACxE,CEtBA,SAASg1C,EAAsB3zC,EAAS4zC,EAAUzkB,GAAoB,IAAd3hB,EAAO1O,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/D,MAAO,CACH61B,QAAUhmB,KAhClB,SAAiB6jC,GAAqC,IAA1Bj+B,EAAMzV,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG0zC,EAAWrjB,EAAIrwB,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAMhD,GAFAywB,EAAKhtB,EAAE0uC,aAAe,EACtB1hB,EAAKznB,EAAEmpC,aAAe,EAClBt8B,IAAWi+B,EAAW,CACtB,IAAIlzC,EAAOiV,EACX,KAAOjV,GAAQA,IAASkzC,GACpBrjB,EAAKhtB,EAAE0uC,cAAgBvxC,EAAK4B,WAC5BiuB,EAAKznB,EAAEmpC,cAAgBvxC,EAAK0B,UAC5B1B,EAAOA,EAAKgB,YAEpB,CACA6uB,EAAKhtB,EAAE60B,aACHziB,IAAWi+B,EAAYj+B,EAAO4+B,YAAc5+B,EAAOk9B,YACvDtiB,EAAKznB,EAAEsvB,aACHziB,IAAWi+B,EAAYj+B,EAAO6+B,aAAe7+B,EAAOm9B,aACxDviB,EAAKhtB,EAAE2uC,gBAAkB0B,EAAUf,YACnCtiB,EAAKznB,EAAEopC,gBAAkB0B,EAAUd,YAUvC,CAIY/c,CAAQ30B,EAASwN,EAAQ+G,OAAQ4a,GNW7C,SAA0BnvB,EAASmvB,EAAMxgB,GACrCoiC,EAAe/wC,EAAS,IAAKmvB,EAAMxgB,GACnCoiC,EAAe/wC,EAAS,IAAKmvB,EAAMxgB,GACnCwgB,EAAKxgB,KAAOA,CAChB,CMdYklC,CAAiB7zC,EAASmvB,EAAMxgB,IAC5BnB,EAAQwL,QAAUxL,EAAQ+G,SAC1Bg+B,EAAevyC,EAASmvB,EAAM3hB,EAClC,EAEJU,OAAQA,IAAM0lC,EAASzkB,GAE/B,C,sBCxCM2kB,EAAkB,IAAIroC,QACtBsoC,EAAkB,IAAItoC,QACtBuoC,EAAmB,IAAIvoC,QACvBwoC,EAAkBj0C,GAAYA,IAAYwC,SAAS0xC,iBAAmBpkC,OAAS9P,EACrF,SAASm0C,EAAWP,GAAsE,IAAApyC,EAAA1C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAAzD,UAAE0zC,EAAYhwC,SAAS0xC,kBAA8B1yC,EAATgM,GAAO6B,EAAAA,EAAAA,GAAA7N,EAAA8N,GAC7E,IAAKkjC,EACD,OAAOtW,EAAAA,EACX,IAAIkY,EAAoBJ,EAAiB9tC,IAAIssC,GAKxC4B,IACDA,EAAoB,IAAI3mC,IACxBumC,EAAiBlwC,IAAI0uC,EAAW4B,IAKpC,MAAMjlB,EAAOwhB,IACP0D,EAAmBV,EAAsBnB,EAAWoB,EAAUzkB,EAAM3hB,GAM1E,GALA4mC,EAAkBrjC,IAAIsjC,IAKjBP,EAAgBntC,IAAI6rC,GAAY,CACjC,MAAM8B,EAAaA,KACf,IAAK,MAAMrnB,KAAWmnB,EAClBnnB,EAAQ0H,QAAQ/E,EAAAA,GAAUD,WAE9B/gB,EAAAA,GAAM2lC,UAAUjN,EAAU,EAExBA,EAAYA,KACd,IAAK,MAAMra,KAAWmnB,EAClBnnB,EAAQ/e,QACZ,EAEE0E,EAAWA,IAAMhE,EAAAA,GAAM8oB,KAAK4c,GAClCR,EAAgBhwC,IAAI0uC,EAAW5/B,GAC/B,MAAM2B,EAAS0/B,EAAezB,GAC9B1iC,OAAOK,iBAAiB,SAAUyC,EAAU,CAAEsa,SAAS,IACnDslB,IAAchwC,SAAS4pC,iBACvB2H,EAAgBjwC,IAAI0uC,GAAWgC,EAAAA,EAAAA,GAAOhC,EAAW5/B,IAErD2B,EAAOpE,iBAAiB,SAAUyC,EAAU,CAAEsa,SAAS,IACvDta,GACJ,CACA,MAAMA,EAAWkhC,EAAgB5tC,IAAIssC,GAErC,OADA5jC,EAAAA,GAAM8oB,KAAK9kB,GAAU,GAAO,GACrB,MACHnC,EAAAA,EAAAA,IAAYmC,GAIZ,MAAM6hC,EAAkBT,EAAiB9tC,IAAIssC,GAC7C,IAAKiC,EACD,OAEJ,GADAA,EAAgBvwC,OAAOmwC,GACnBI,EAAgB/zC,KAChB,OAIJ,MAAMg0C,EAAiBZ,EAAgB5tC,IAAIssC,GAEvB,IAAAmC,GADpBb,EAAgB5vC,OAAOsuC,GACnBkC,KACAT,EAAezB,GAAWrlB,oBAAoB,SAAUunB,GAC1B,QAA9BC,EAAAZ,EAAgB7tC,IAAIssC,UAAU,IAAAmC,GAA9BA,IACA7kC,OAAOqd,oBAAoB,SAAUunB,GACzC,CAER,C,+BC1EME,EAAgB,IAAInwC,IAQ1B,SAASowC,EAAWrzC,GAAoC,IAAAszC,EAAAC,EAAAC,EAAAC,EAAA,IAAnC,OAAE94B,EAAM,UAAEq2B,GAAuBhxC,EAATgM,GAAO6B,EAAAA,EAAAA,GAAA7N,EAAA8N,GAChD,MAAM,KAAEtG,GAASwE,EACb2O,IACAq2B,EAAYr2B,GAChB,MAAM+4B,EAA6C,QAA/BJ,EAAGF,EAAc1uC,IAAIssC,UAAU,IAAAsC,EAAAA,EAAI,IAAIrwC,IAC3DmwC,EAAc9wC,IAAI0uC,EAAW0C,GAC7B,MAAMC,EAA0B,QAAjBJ,EAAGvnC,EAAQ+G,cAAM,IAAAwgC,EAAAA,EAAI,OAC9BK,EAA2C,QAAhCJ,EAAGE,EAAehvC,IAAIivC,UAAU,IAAAH,EAAAA,EAAI,CAAC,EAChDK,EAAUrsC,GAAsB,QAAfisC,EAACznC,EAAQwL,cAAM,IAAAi8B,EAAAA,EAAI,IAAI9uC,KAAK,KAOnD,OANKivC,EAAYC,KACbD,EAAYC,IACP7nC,EAAQ+G,SAAU+gC,EAAAA,EAAAA,KACb,IAAIC,eAAe,CAAEp5B,OAAQq2B,EAAWxpC,SAnB1D,SAAgCwE,GAC5B,MAAMgoC,EAAc,CAAE/2C,MAAO,GACvB01B,EAASggB,GAAYhlB,IACvBqmB,EAAY/2C,MAAsC,IAA9B0wB,EAAK3hB,EAAQxE,MAAMiuB,QAAc,GACtDzpB,GACH,MAAO,CAAEgoC,cAAarhB,SAC1B,CAckBshB,EAAsBtxC,EAAAA,EAAAA,GAAC,CAAEquC,aAAchlC,KAE9C4nC,EAAYC,EACvB,C,6BCvBA,SAAS7f,EAAOoe,GAAkF,IAAApyC,EAAA1C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAArE,KAAEkK,EAAO,IAAG,UAAEwpC,EAAYhwC,SAAS0xC,kBAA8B1yC,EAATgM,GAAO6B,EAAAA,EAAAA,GAAA7N,EAAA8N,GACrF,IAAKkjC,EACD,OAAOtW,EAAAA,EACX,MAAMwZ,GAAmBvxC,EAAAA,EAAAA,GAAA,CAAK6E,OAAMwpC,aAAchlC,GAClD,MAA2B,oBAAbomC,ECGlB,SAA0BA,EAAUpmC,GAChC,OAJJ,SAA4BomC,GACxB,OAA2B,IAApBA,EAAS70C,MACpB,CAEQ42C,CAAmB/B,GACZO,GAAYhlB,IACfykB,EAASzkB,EAAK3hB,EAAQxE,MAAMiuB,SAAU9H,EAAK,GAC5C3hB,IAGIooC,EAAAA,EAAAA,GAAgBhC,EAAUiB,EAAYrnC,GAErD,CDXUqoC,CAAiBjC,EAAU8B,GENrC,SAA2BlrC,EAAWgD,GAClC,MAAMsoC,EAAWjB,EAAYrnC,GAC7B,OAAOhD,EAAUurC,eAAe,CAC5BD,SAAUtoC,EAAQ+G,YAAS7V,EAAYo3C,EACvCpH,QAAUsH,IACNA,EAAevf,SACRmf,EAAAA,EAAAA,IAAiB3e,IACpB+e,EAAernC,KACXqnC,EAAeC,kBAAoBhf,CAAQ,GAChD6e,KAGf,CFLUI,CAAkBtC,EAAU8B,EACtC,C,uBGXa,MAAApmC,EAAA,uBAQP6mC,EAA2BA,KAAA,CAC7BC,SAASljC,EAAAA,EAAAA,IAAY,GACrBmjC,SAASnjC,EAAAA,EAAAA,IAAY,GACrBojC,iBAAiBpjC,EAAAA,EAAAA,IAAY,GAC7BqjC,iBAAiBrjC,EAAAA,EAAAA,IAAY,KAE3BsjC,EAAgBh4C,KACbA,IAEGA,EAAIG,QAEhB,SAAS83C,IAAkD,IAAAj1C,EAAA1C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAArC,UAAE0zC,EAAS,OAAEj+B,GAAoB/S,EAATgM,GAAO6B,EAAAA,EAAAA,GAAA7N,EAAA8N,GAC9C,MAAMtL,GAASR,EAAAA,EAAAA,GAAY2yC,GACrBO,GAAkB70C,EAAAA,EAAAA,QAAO,MACzB80C,GAAa90C,EAAAA,EAAAA,SAAO,GACpB+J,GAAQ5E,EAAAA,EAAAA,cAAY,KACtB0vC,EAAgB/3C,QAAU62B,GAAO,CAACohB,EAASpzB,KAAgB,IAAd,EAAErhB,EAAC,EAAEuF,GAAI8b,EAClDxf,EAAOoyC,QAAQtyC,IAAI3B,EAAExD,SACrBqF,EAAOsyC,gBAAgBxyC,IAAI3B,EAAE80B,UAC7BjzB,EAAOqyC,QAAQvyC,IAAI4D,EAAE/I,SACrBqF,EAAOuyC,gBAAgBzyC,IAAI4D,EAAEuvB,SAAS,IACzC9yB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMqJ,GAAO,IACVglC,WAAoB,OAATA,QAAS,IAATA,OAAS,EAATA,EAAW7zC,eAAWD,EACjC6V,QAAc,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ5V,eAAWD,KAExB,KAAM,IAAAm4C,EACc,QAAvBA,EAAAH,EAAgB/3C,eAAO,IAAAk4C,GAAvBA,EAAA/2B,KAAA42B,EAA2B,IAEhC,CAAClE,EAAWj+B,EAAQ+5B,KAAKC,UAAU/gC,EAAQwL,UAqB9C,OApBAhT,EAAAA,EAAAA,IAA0B,KACtB2wC,EAAWh4C,SAAU,EACjB63C,EAAahE,IAAcgE,EAAajiC,QACxCoiC,EAAWh4C,SAAU,GAIdiN,MAEZ,CAACA,KACJ7E,EAAAA,EAAAA,YAAU,IACF4vC,EAAWh4C,UACXy2B,EAAAA,EAAAA,IAAWohB,EAAahE,GAAY,4CAA6C,mBACjFpd,EAAAA,EAAAA,IAAWohB,EAAajiC,GAAS,yCAA0C,kBACpE3I,UAGP,GAEL,CAACA,IACG5H,CACX,C","sources":["../node_modules/framer-motion/dist/es/components/AnimatePresence/use-composed-ref.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/utils/get-timeline.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/attach-function.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/attach-animation.mjs","../node_modules/framer-motion/dist/es/value/use-scroll.mjs"],"sourcesContent":["import * as React from 'react';\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef(ref, value) {\n    if (typeof ref === \"function\") {\n        return ref(value);\n    }\n    else if (ref !== null && ref !== undefined) {\n        ref.current = value;\n    }\n}\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs(...refs) {\n    return (node) => {\n        let hasCleanup = false;\n        const cleanups = refs.map((ref) => {\n            const cleanup = setRef(ref, node);\n            if (!hasCleanup && typeof cleanup === \"function\") {\n                hasCleanup = true;\n            }\n            return cleanup;\n        });\n        // React <19 will log an error to the console if a callback ref returns a\n        // value. We don't use ref cleanups internally so this will only happen if a\n        // user's ref callback returns a value, which we only expect if they are\n        // using the cleanup functionality added in React 19.\n        if (hasCleanup) {\n            return () => {\n                for (let i = 0; i < cleanups.length; i++) {\n                    const cleanup = cleanups[i];\n                    if (typeof cleanup === \"function\") {\n                        cleanup();\n                    }\n                    else {\n                        setRef(refs[i], null);\n                    }\n                }\n            };\n        }\n    };\n}\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs(...refs) {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { useComposedRefs };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { useComposedRefs } from './use-composed-ref.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    const composedRef = useComposedRefs(ref, children?.ref);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref: composedRef }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","\"use client\";\nimport { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","\"use client\";\nimport { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","\"use client\";\nimport { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","\"use client\";\nimport { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","\"use client\";\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","\"use client\";\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","\"use client\";\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","\"use client\";\nimport { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Include externalRef in dependencies to ensure the callback updates\n     * when the ref changes, allowing proper ref forwarding.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","\"use client\";\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","\"use client\";\nimport { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { progress, velocityPerSecond } from 'motion-utils';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[`scroll${position}`];\n    axis.scrollLength = element[`scroll${length}`] - element[`client${length}`];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed\n            ? 0\n            : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n","const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (edge in namedEdges) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n","import { resolveEdge, namedEdges } from './edge.mjs';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (typeof offset === \"number\") {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (typeof offset === \"string\") {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n","const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n","import { interpolate, defaultOffset } from 'motion-dom';\nimport { clamp } from 'motion-utils';\nimport { calcInset } from './inset.mjs';\nimport { resolveOffset } from './offset.mjs';\nimport { ScrollOffset } from './presets.mjs';\n\nconst point = { x: 0, y: 0 };\nfunction getTargetSize(target) {\n    return \"getBBox\" in target && target.tagName !== \"svg\"\n        ? target.getBBox()\n        : { width: target.clientWidth, height: target.clientHeight };\n}\nfunction resolveOffsets(container, info, options) {\n    const { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : getTargetSize(target);\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(info[axis].offset, defaultOffset(offsetDefinition), { clamp: false });\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = clamp(0, 1, info[axis].interpolate(info[axis].current));\n}\n\nexport { resolveOffsets };\n","import { isHTMLElement } from 'motion-dom';\n\nfunction calcInset(element, container) {\n    const inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (isHTMLElement(current)) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current.tagName === \"svg\") {\n            /**\n             * This isn't an ideal approach to measuring the offset of <svg /> tags.\n             * It would be preferable, given they behave like HTMLElements in most ways\n             * to use offsetLeft/Top. But these don't exist on <svg />. Likewise we\n             * can't use .getBBox() like most SVG elements as these provide the offset\n             * relative to the SVG itself, which for <svg /> is usually 0x0.\n             */\n            const svgBoundingBox = current.getBoundingClientRect();\n            current = current.parentElement;\n            const parentBoundingBox = current.getBoundingClientRect();\n            inset.x += svgBoundingBox.left - parentBoundingBox.left;\n            inset.y += svgBoundingBox.top - parentBoundingBox.top;\n        }\n        else if (current instanceof SVGGraphicsElement) {\n            const { x, y } = current.getBBox();\n            inset.x += x;\n            inset.y += y;\n            let svg = null;\n            let parent = current.parentNode;\n            while (!svg) {\n                if (parent.tagName === \"svg\") {\n                    svg = parent;\n                }\n                parent = current.parentNode;\n            }\n            current = svg;\n        }\n        else {\n            break;\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n","import { warnOnce } from 'motion-utils';\nimport { updateScrollInfo } from './info.mjs';\nimport { resolveOffsets } from './offsets/index.mjs';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node !== container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n    /**\n     * In development mode ensure scroll containers aren't position: static as this makes\n     * it difficult to measure their relative positions.\n     */\n    if (process.env.NODE_ENV !== \"production\") {\n        if (container && target && target !== container) {\n            warnOnce(getComputedStyle(container).position !== \"static\", \"Please ensure that the container has a non-static position, like 'relative', 'fixed', or 'absolute' to ensure scroll offset is calculated correctly.\");\n        }\n    }\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    return {\n        measure: (time) => {\n            measure(element, options.target, info);\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: () => onScroll(info),\n    };\n}\n\nexport { createOnScrollHandler };\n","import { resize, frame, cancelFrame, frameData } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { createScrollInfo } from './info.mjs';\nimport { createOnScrollHandler } from './on-scroll-handler.mjs';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.scrollingElement ? window : element;\nfunction scrollInfo(onScroll, { container = document.scrollingElement, ...options } = {}) {\n    if (!container)\n        return noop;\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const measureAll = () => {\n            for (const handler of containerHandlers) {\n                handler.measure(frameData.timestamp);\n            }\n            frame.preUpdate(notifyAll);\n        };\n        const notifyAll = () => {\n            for (const handler of containerHandlers) {\n                handler.notify();\n            }\n        };\n        const listener = () => frame.read(measureAll);\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n        listener();\n    }\n    const listener = scrollListeners.get(container);\n    frame.read(listener, false, true);\n    return () => {\n        cancelFrame(listener);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const currentHandlers = onScrollHandlers.get(container);\n        if (!currentHandlers)\n            return;\n        currentHandlers.delete(containerHandler);\n        if (currentHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const scrollListener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (scrollListener) {\n            getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n            resizeListeners.get(container)?.();\n            window.removeEventListener(\"resize\", scrollListener);\n        }\n    };\n}\n\nexport { scrollInfo };\n","import { supportsScrollTimeline } from 'motion-dom';\nimport { scrollInfo } from '../track.mjs';\n\nconst timelineCache = new Map();\nfunction scrollTimelineFallback(options) {\n    const currentTime = { value: 0 };\n    const cancel = scrollInfo((info) => {\n        currentTime.value = info[options.axis].progress * 100;\n    }, options);\n    return { currentTime, cancel };\n}\nfunction getTimeline({ source, container, ...options }) {\n    const { axis } = options;\n    if (source)\n        container = source;\n    const containerCache = timelineCache.get(container) ?? new Map();\n    timelineCache.set(container, containerCache);\n    const targetKey = options.target ?? \"self\";\n    const targetCache = containerCache.get(targetKey) ?? {};\n    const axisKey = axis + (options.offset ?? []).join(\",\");\n    if (!targetCache[axisKey]) {\n        targetCache[axisKey] =\n            !options.target && supportsScrollTimeline()\n                ? new ScrollTimeline({ source: container, axis })\n                : scrollTimelineFallback({ container, ...options });\n    }\n    return targetCache[axisKey];\n}\n\nexport { getTimeline };\n","import { noop } from 'motion-utils';\nimport { attachToAnimation } from './attach-animation.mjs';\nimport { attachToFunction } from './attach-function.mjs';\n\nfunction scroll(onScroll, { axis = \"y\", container = document.scrollingElement, ...options } = {}) {\n    if (!container)\n        return noop;\n    const optionsWithDefaults = { axis, container, ...options };\n    return typeof onScroll === \"function\"\n        ? attachToFunction(onScroll, optionsWithDefaults)\n        : attachToAnimation(onScroll, optionsWithDefaults);\n}\n\nexport { scroll };\n","import { observeTimeline } from 'motion-dom';\nimport { scrollInfo } from './track.mjs';\nimport { getTimeline } from './utils/get-timeline.mjs';\n\n/**\n * If the onScroll function has two arguments, it's expecting\n * more specific information about the scroll from scrollInfo.\n */\nfunction isOnScrollWithInfo(onScroll) {\n    return onScroll.length === 2;\n}\nfunction attachToFunction(onScroll, options) {\n    if (isOnScrollWithInfo(onScroll)) {\n        return scrollInfo((info) => {\n            onScroll(info[options.axis].progress, info);\n        }, options);\n    }\n    else {\n        return observeTimeline(onScroll, getTimeline(options));\n    }\n}\n\nexport { attachToFunction };\n","import { observeTimeline } from 'motion-dom';\nimport { getTimeline } from './utils/get-timeline.mjs';\n\nfunction attachToAnimation(animation, options) {\n    const timeline = getTimeline(options);\n    return animation.attachTimeline({\n        timeline: options.target ? undefined : timeline,\n        observe: (valueAnimation) => {\n            valueAnimation.pause();\n            return observeTimeline((progress) => {\n                valueAnimation.time =\n                    valueAnimation.iterationDuration * progress;\n            }, timeline);\n        },\n    });\n}\n\nexport { attachToAnimation };\n","\"use client\";\nimport { motionValue } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { useRef, useCallback, useEffect } from 'react';\nimport { scroll } from '../render/dom/scroll/index.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nconst createScrollMotionValues = () => ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n});\nconst isRefPending = (ref) => {\n    if (!ref)\n        return false;\n    return !ref.current;\n};\nfunction useScroll({ container, target, ...options } = {}) {\n    const values = useConstant(createScrollMotionValues);\n    const scrollAnimation = useRef(null);\n    const needsStart = useRef(false);\n    const start = useCallback(() => {\n        scrollAnimation.current = scroll((_progress, { x, y, }) => {\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, {\n            ...options,\n            container: container?.current || undefined,\n            target: target?.current || undefined,\n        });\n        return () => {\n            scrollAnimation.current?.();\n        };\n    }, [container, target, JSON.stringify(options.offset)]);\n    useIsomorphicLayoutEffect(() => {\n        needsStart.current = false;\n        if (isRefPending(container) || isRefPending(target)) {\n            needsStart.current = true;\n            return;\n        }\n        else {\n            return start();\n        }\n    }, [start]);\n    useEffect(() => {\n        if (needsStart.current) {\n            invariant(!isRefPending(container), \"Container ref is defined but not hydrated\", \"use-scroll-ref\");\n            invariant(!isRefPending(target), \"Target ref is defined but not hydrated\", \"use-scroll-ref\");\n            return start();\n        }\n        else {\n            return;\n        }\n    }, [start]);\n    return values;\n}\n\nexport { useScroll };\n"],"names":["setRef","ref","value","undefined","current","useComposedRefs","_len2","arguments","length","refs","Array","_key2","React","_len","_key","node","hasCleanup","cleanups","map","cleanup","i","composeRefs","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","parent","offsetParent","parentWidth","isHTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","_ref","anchorX","root","id","useId","useRef","nonce","useContext","MotionConfigContext","composedRef","useInsertionEffect","x","concat","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","contains","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","isReusedContext","context","useMemo","childId","set","isComplete","values","register","delete","_objectSpread","forEach","_","key","PresenceContext","Provider","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","onExit","has","isEveryExitComplete","isExitComplete","subscribe","useEffect","useCallback","createContext","transformPagePoint","p","isStatic","reducedMotion","convertBoundingBoxToBox","bottom","min","max","y","isIdentityScale","scale","hasScale","scaleX","scaleY","hasTransform","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","mixNumber","transformBox","transform","originX","originY","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","some","name","createBox","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","isAnimationControls","v","start","isVariantLabel","isArray","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","Boolean","variants","getValueState","visualElement","state","getVelocity","resolveVariantFromProps","definition","velocity","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","constructor","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","options","Set","shouldReduceMotion","KeyframeResolver","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","latestValues","triggerBuild","renderInstance","renderState","projection","renderScheduledAt","scheduleRender","now","time","frame","baseTarget","initialValues","depth","variantChildren","manuallyAnimateOnMount","_this$scrapeMotionVal","willChange","initialMotionValues","_objectWithoutProperties","_excluded","isMotionValue","mount","_this$parent","removeFromVariantTree","addVariantChild","bindToMotionValue","isBrowser","window","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","addChild","update","unmount","_this$parent2","cancelFrame","remove","clear","feature","isMounted","_this$enteringChildre","add","enteringChildren","valueIsTransform","transformProps","onBindTransform","removeOnChange","on","latestValue","onUpdate","preRender","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","owner","stop","sortNodePosition","other","sortInstanceNodePosition","type","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevPresenceContext","listener","next","prev","nextValue","prevValue","addValue","motionValue","hasValue","existingValue","getValue","liveStyle","jump","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","getDefaultTransition","transition","getTransformPagePoint","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","target","_this$getBaseTargetFr","getBaseTargetFromProps","readValueFromInstance","isNumericalString","isZeroValueString","parseFloat","findValueType","complex","test","getAnimatableNone","setBaseTarget","getBaseTarget","valueFromInitial","_this$presenceContext","variant","eventName","callback","SubscriptionManager","args","scheduleRenderMicrotask","microtask","DOMVisualElement","super","DOMKeyframesResolver","a","b","compareDocumentPosition","vars","childSubscription","latest","textContent","translateAlias","transformPerspective","numTransforms","transformPropOrder","buildHTMLStyles","transformOrigin","hasTransformOrigin","isCSSVariableName","valueAsType","getValueAsType","numberValueTypes","startsWith","transformString","transformIsDefault","valueIsDefault","trim","buildTransform","originZ","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","_visualElement$getVal","HTMLVisualElement","_this$projection","isProjecting","defaultTransformValue","readTransformValue","computedStyle","getComputedStyle","getPropertyValue","camelToDash","str","replace","toLowerCase","dashKeys","offset","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","_attrs$transformOrigi","_styleProp$transformB","spacing","useDashCase","keys","px","buildSVGPath","camelCaseAttributes","tag","scrapeMotionValuesFromProps$1","indexOf","charAt","toUpperCase","substring","SVGVisualElement","defaultType","getDefaultValueType","default","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","LazyContext","strict","MotionContext","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","source","useStyle","Object","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_unused","useRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","valueTarget","makeUseVisualState","config","make","createRenderState","makeState","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","prototype","hasOwnProperty","call","useMotionRef","externalRef","onMount","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","_window$MotionHandoff","_window","_window$MotionHasOpti","_window2","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animationState","animateChanges","queueMicrotask","_window$MotionHandoff2","_window3","MotionHandoffMarkAsComplete","createMotionComponent","_Component$displayNam","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","process","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","displayName","ForwardRefMotionComponent","forwardRef","_ref2","layoutGroupId","createMotionProxy","Proxy","componentCache","factory","deprecatedFactoryFunction","_target","resolveVariant","isKeyframesTarget","setMotionValue","addValueToWillChange","MotionGlobalConfig","WillChange","newWillChange","getOptimisedAppearId","isNotNull","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","valueKey","keyframes","Math","sqrt","animateMotionValue","isHandoff","onComplete","valueTransition","getValueTransition","delay","elapsed","secondsToMilliseconds","when","_delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","from","isTransitionDefined","shouldSkip","makeAnimationInstant","instantAnimations","skipAnimations","allowFlatten","finalKeyframe","resolvedKeyframes","filter","index","getFinalKeyframe","isSync","JSAnimation","AsyncMotionValueAnimation","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","_visualElement$latest","currentValue","isAnimating","MotionHandoffAnimation","appearId","startTime","positionalKeys","Promise","all","then","setTarget","calcChildStagger","sort","numChildren","maxStaggerDuration","animateVariant","_visualElement$presen","getAnimation","resolve","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","reverse","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","acc","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","_visualElement$varian","_child$animationState","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","updateAnimationControlsSubscription","unmountControls","prevAnimate","_this$unmountControls","prevIsPresent","exitAnimation","addDomEvent","handler","passive","removeEventListener","extractEventInfo","event","pageX","pageY","addPointerEvent","isPrimaryPointer","addPointerInfo","calcLength","calcAxisDelta","delta","origin","isNaN","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","abs","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","timestamp","frameData","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","pipe","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","millisecondsToSeconds","currentVelocity","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","setDragLock","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","postRender","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","direction","getCurrentDirection","updateAxis","_this$getAxisMotionVa","getAnimationState","play","finalEvent","finalPanInfo","cancel","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$visualElement$p","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","invariant","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","bounceStiffness","bounceDamping","inertia","timeConstant","restDelta","startAxisValueAnimation","_this$getAxisMotionVa2","pause","_this$getAxisMotionVa3","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","progress","clamp","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","read","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","parse","template","createTransformer","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","compareByDepth","FlatTree","isDirty","addUniqueItem","removeItem","timeout","checkElapsed","setup","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circOut","easeCrossfadeOut","noop","easing","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","round","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","statsBuffer","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","addProjectionMetrics","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","isSVGElement","isSVGSVGElement","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","onPlay","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","isProcessing","frameSteps","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","_this$scroll","checkNodeWasScrollRoot","_this$scroll2","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","_this$options$visualE","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","to","mixAxisDelta","mixAxis","follow","_lead$opacity","_follow$opacity","opacity","opacityExit","_follow$opacity2","_lead$opacity2","borderLabel","followRadius","leadRadius","mixValues","_this$currentAnimatio","_this$resumingFrom","activeAnimations","motionValue$1","animateSingleValue","onStop","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","_this$getStack","getPrevLead","_this$getStack2","hasDistortingTransform","rotateZ","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","_ref3","_valuesToRender$opaci","corrected","num","resetTree","_node$currentAnimatio","_node$resumeFrom","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","_node$scroll","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","press","_element","endEvent","success","useGlobalTarget","globalTapTarget","onFocus","isFocusVisible","e","onBlur","motion","init","useLayoutEffect","maxElapsed","createScrollInfo","scrollLength","targetOffset","containerLength","updateAxisInfo","axisName","prevTime","velocityPerSecond","namedEdges","center","resolveEdge","edge","inset","endsWith","clientWidth","clientHeight","defaultOffset","resolveOffset","targetInset","offsetDefinition","targetPoint","containerPoint","split","ScrollOffset","Enter","Exit","Any","All","resolveOffsets","container","lengthLabel","svgBoundingBox","parentElement","parentBoundingBox","SVGGraphicsElement","getBBox","svg","parentNode","calcInset","targetSize","scrollWidth","scrollHeight","getTargetSize","containerSize","hasChanged","interpolate","numOffsets","interpolatorOffsets","createOnScrollHandler","onScroll","updateScrollInfo","scrollListeners","resizeListeners","onScrollHandlers","getEventTarget","scrollingElement","scrollInfo","containerHandlers","containerHandler","measureAll","preUpdate","resize","currentHandlers","scrollListener","_resizeListeners$get","timelineCache","getTimeline","_timelineCache$get","_options$target","_containerCache$get","_options$offset","containerCache","targetKey","targetCache","axisKey","supportsScrollTimeline","ScrollTimeline","currentTime","scrollTimelineFallback","optionsWithDefaults","isOnScrollWithInfo","observeTimeline","attachToFunction","timeline","attachTimeline","valueAnimation","iterationDuration","attachToAnimation","createScrollMotionValues","scrollX","scrollY","scrollXProgress","scrollYProgress","isRefPending","useScroll","scrollAnimation","needsStart","_progress","_scrollAnimation$curr"],"sourceRoot":""}